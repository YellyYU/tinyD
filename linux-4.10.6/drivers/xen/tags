!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACPI_PROCESSOR_AGGREGATOR_CLASS	xen-acpi-pad.c	26;"	d	file:
ACPI_PROCESSOR_AGGREGATOR_DEVICE_NAME	xen-acpi-pad.c	27;"	d	file:
ACPI_PROCESSOR_AGGREGATOR_NOTIFY	xen-acpi-pad.c	28;"	d	file:
BALLOON_CLASS_NAME	xen-balloon.c	50;"	d	file:
BALLOON_SHOW	xen-balloon.c	114;"	d	file:
BITS_PER_EVTCHN_WORD	events/events_2l.c	31;"	d	file:
BM	events/events_2l.c	36;"	d	file:
BM	events/events_fifo.c	74;"	d	file:
BM	events/events_fifo.c	80;"	d	file:
BP_DONE	balloon.c	/^	BP_DONE,$/;"	e	enum:bp_state	file:
BP_EAGAIN	balloon.c	/^	BP_EAGAIN,$/;"	e	enum:bp_state	file:
BP_ECANCELED	balloon.c	/^	BP_ECANCELED$/;"	e	enum:bp_state	file:
BP_WAIT	balloon.c	/^	BP_WAIT,$/;"	e	enum:bp_state	file:
CFG_FIELD_BAR	xen-pciback/conf_space_header.c	348;"	d	file:
CFG_FIELD_ROM	xen-pciback/conf_space_header.c	359;"	d	file:
CFLAGS_features.o	Makefile	/^CFLAGS_features.o			:= $(nostackp)$/;"	m
COPY_BACK	fallback.c	25;"	d	file:
COPY_BACK	fallback.c	36;"	d	file:
COPY_BACK	fallback.c	64;"	d	file:
COPY_BACK	fallback.c	72;"	d	file:
DEBUG	gntdev.c	20;"	d	file:
DEFINE_PCI_CONFIG	xen-pciback/conf_space.c	24;"	d	file:
DPRINTK	xenbus/xenbus_probe.c	35;"	d	file:
DPRINTK	xenbus/xenbus_probe_backend.c	36;"	d	file:
DPRINTK	xenbus/xenbus_probe_frontend.c	3;"	d	file:
DRV_NAME	platform-pci.c	40;"	d	file:
DRV_NAME	xen-pciback/pciback.h	18;"	d
EVENT_WORDS_PER_PAGE	events/events_fifo.c	57;"	d	file:
EVTCHN_COL	events/events_base.c	87;"	d	file:
EVTCHN_FIFO_BIT	events/events_fifo.c	75;"	d	file:
EVTCHN_FIFO_BIT	events/events_fifo.c	81;"	d	file:
EVTCHN_FIRST_BIT	events/events_2l.c	38;"	d	file:
EVTCHN_MASK_SIZE	events/events_2l.c	40;"	d	file:
EVTCHN_PER_ROW	events/events_base.c	88;"	d	file:
EVTCHN_ROW	events/events_base.c	86;"	d	file:
EXTENT_ORDER	balloon.c	118;"	d	file:
FEATURE_PATH_SIZE	manage.c	316;"	d	file:
GFP_BALLOON	balloon.c	156;"	d	file:
GNTDEV_COPY_BATCH	gntdev.c	751;"	d	file:
GNTTAB_LIST_END	grant-table.c	62;"	d	file:
GNTTAB_UNMAP_REFS_DELAY	grant-table.c	874;"	d	file:
HYPERVISOR_ATTR_RO	sys-hypervisor.c	27;"	d	file:
HYPERVISOR_ATTR_RW	sys-hypervisor.c	30;"	d	file:
INIT_EFI_OP	efi.c	34;"	d	file:
INSTALL_NOTIFY_HANDLER	xen-acpi-cpuhotplug.c	34;"	d	file:
INVALID_EVTCHN_IRQ	xen-pciback/xenbus.c	19;"	d	file:
IO_TLB_MIN_SLABS	swiotlb-xen.c	235;"	d	file:
IRQT_EVTCHN	events/events_internal.h	/^	IRQT_EVTCHN$/;"	e	enum:xen_irq_type
IRQT_IPI	events/events_internal.h	/^	IRQT_IPI,$/;"	e	enum:xen_irq_type
IRQT_PIRQ	events/events_internal.h	/^	IRQT_PIRQ,$/;"	e	enum:xen_irq_type
IRQT_UNBOUND	events/events_internal.h	/^	IRQT_UNBOUND = 0,$/;"	e	enum:xen_irq_type
IRQT_VIRQ	events/events_internal.h	/^	IRQT_VIRQ,$/;"	e	enum:xen_irq_type
MASK_LSBS	events/events_2l.c	142;"	d	file:
MAX_DELAY	grant-table.c	733;"	d	file:
MAX_EVENT_ARRAY_PAGES	events/events_fifo.c	58;"	d	file:
MB2PAGES	xen-selfballoon.c	177;"	d	file:
MODULE_PARAM_PREFIX	events/events_base.c	1662;"	d	file:
MODULE_PARAM_PREFIX	events/events_base.c	1663;"	d	file:
NR_RESERVED_ENTRIES	grant-table.c	61;"	d	file:
OFFSET	xen-pciback/conf_space.h	69;"	d
PAGES2KB	xen-balloon.c	48;"	d	file:
PAGES2MB	xen-selfballoon.c	178;"	d	file:
PCIB_op_pending	xen-pciback/pciback.h	28;"	d
PCISTUB_DRIVER_NAME	xen-pciback/pci_stub.c	28;"	d	file:
PCI_COMMAND_GUEST	xen-pciback/conf_space_header.c	28;"	d	file:
PCI_NODENAME_MAX	xen-pciback/pci_stub.c	658;"	d	file:
PCI_SLOT_MAX	xen-pciback/vpci.c	16;"	d	file:
PDEVF_op_active	xen-pciback/pciback.h	26;"	d
PIRQ_MSI_GROUP	events/events_internal.h	56;"	d
PIRQ_NEEDS_EOI	events/events_internal.h	54;"	d
PIRQ_SHAREABLE	events/events_internal.h	55;"	d
PM_OK_BITS	xen-pciback/conf_space_capability.c	111;"	d	file:
PREFIX	xen-acpi-cpuhotplug.c	32;"	d	file:
PREFIX	xen-acpi-memhotplug.c	29;"	d	file:
PRINTF_BUFFER_SIZE	xenbus/xenbus_client.c	279;"	d	file:
PRIV_VMA_LOCKED	privcmd.c	44;"	d	file:
RPP	grant-table.c	139;"	d	file:
SCSIBACK_INVALID_HANDLE	xen-scsiback.c	185;"	d	file:
SELFBALLOON_SHOW	xen-selfballoon.c	247;"	d	file:
SHUTDOWN_CMD_SIZE	manage.c	171;"	d	file:
SHUTDOWN_HALT	manage.c	/^	 SHUTDOWN_HALT = 4,$/;"	e	enum:shutdown_state	file:
SHUTDOWN_INVALID	manage.c	/^	SHUTDOWN_INVALID = -1,$/;"	e	enum:shutdown_state	file:
SHUTDOWN_POWEROFF	manage.c	/^	SHUTDOWN_POWEROFF = 0,$/;"	e	enum:shutdown_state	file:
SHUTDOWN_SUSPEND	manage.c	/^	SHUTDOWN_SUSPEND = 2,$/;"	e	enum:shutdown_state	file:
SLABS_PER_PAGE	swiotlb-xen.c	234;"	d	file:
SWIZ_BITS	tmem.c	266;"	d	file:
SWIZ_MASK	tmem.c	267;"	d	file:
TMEM_CONTROL	tmem.c	55;"	d	file:
TMEM_DESTROY_POOL	tmem.c	57;"	d	file:
TMEM_FLUSH_OBJECT	tmem.c	62;"	d	file:
TMEM_FLUSH_PAGE	tmem.c	61;"	d	file:
TMEM_GET_PAGE	tmem.c	60;"	d	file:
TMEM_NEW_PAGE	tmem.c	58;"	d	file:
TMEM_NEW_POOL	tmem.c	56;"	d	file:
TMEM_POOL_PAGESIZE_SHIFT	tmem.c	70;"	d	file:
TMEM_POOL_PERSIST	tmem.c	68;"	d	file:
TMEM_POOL_PERSIST	tmem.c	86;"	d	file:
TMEM_POOL_PRIVATE_UUID	tmem.c	83;"	d	file:
TMEM_POOL_SHARED	tmem.c	69;"	d	file:
TMEM_POOL_SHARED	tmem.c	87;"	d	file:
TMEM_PUT_PAGE	tmem.c	59;"	d	file:
TMEM_READ	tmem.c	63;"	d	file:
TMEM_VERSION_SHIFT	tmem.c	71;"	d	file:
TMEM_WRITE	tmem.c	64;"	d	file:
TMEM_XCHG	tmem.c	65;"	d	file:
UNINSTALL_NOTIFY_HANDLER	xen-acpi-cpuhotplug.c	35;"	d	file:
UNRESTRICTED_DOMID	evtchn.c	81;"	d	file:
VALID_EVTCHN	events/events_base.c	91;"	d	file:
VSCSIBACK_OP_ADD_OR_DEL_LUN	xen-scsiback.c	1056;"	d	file:
VSCSIBACK_OP_UPDATEDEV_STATE	xen-scsiback.c	1057;"	d	file:
VSCSI_DEFAULT_SESSION_TAGS	xen-scsiback.c	144;"	d	file:
VSCSI_GRANT_BATCH	xen-scsiback.c	113;"	d	file:
VSCSI_MAX_GRANTS	xen-scsiback.c	106;"	d	file:
VSCSI_NAMELEN	xen-scsiback.c	70;"	d	file:
VSCSI_VERSION	xen-scsiback.c	69;"	d	file:
XENBUS_MAX_RING_PAGES	xenbus/xenbus_client.c	54;"	d	file:
XENBUS_PAGES	xenbus/xenbus_client.c	52;"	d	file:
XEN_BUS_ID_SIZE	xenbus/xenbus_probe.h	37;"	d
XEN_KSYM_NAME_LEN	xenfs/xensyms.c	13;"	d	file:
XEN_SWIOTLB_EFIXUP	swiotlb-xen.c	/^	XEN_SWIOTLB_EFIXUP$/;"	e	enum:xen_swiotlb_err	file:
XEN_SWIOTLB_ENOMEM	swiotlb-xen.c	/^	XEN_SWIOTLB_ENOMEM,$/;"	e	enum:xen_swiotlb_err	file:
XEN_SWIOTLB_UNKNOWN	swiotlb-xen.c	/^	XEN_SWIOTLB_UNKNOWN = 0,$/;"	e	enum:xen_swiotlb_err	file:
XS_HVM	xenbus/xenbus_probe.h	/^	XS_HVM,$/;"	e	enum:xenstore_init
XS_LOCAL	xenbus/xenbus_probe.h	/^	XS_LOCAL,$/;"	e	enum:xenstore_init
XS_PV	xenbus/xenbus_probe.h	/^	XS_PV,$/;"	e	enum:xenstore_init
XS_UNKNOWN	xenbus/xenbus_probe.h	/^	XS_UNKNOWN,$/;"	e	enum:xenstore_init
_PCIB_op_pending	xen-pciback/pciback.h	27;"	d
_PDEVF_op_active	xen-pciback/pciback.h	25;"	d
_XENBUS_COMMS_H	xenbus/xenbus_comms.h	32;"	d
_XENBUS_PROBE_H	xenbus/xenbus_probe.h	35;"	d
_XENFS_XENBUS_H	xenfs/xenfs.h	2;"	d
__EVENTS_INTERNAL_H__	events/events_internal.h	10;"	d
__XEN_PCIBACK_CONF_SPACE_H__	xen-pciback/conf_space.h	8;"	d
__XEN_PCIBACK_CONF_SPACE_QUIRKS_H__	xen-pciback/conf_space_quirks.h	9;"	d
__XEN_PCIBACK_H__	xen-pciback/pciback.h	7;"	d
__balloon_append	balloon.c	/^static void __balloon_append(struct page *page)$/;"	f	file:
__del_gref	gntalloc.c	/^static void __del_gref(struct gntalloc_gref *gref)$/;"	f	file:
__evtchn_fifo_handle_events	events/events_fifo.c	/^static void __evtchn_fifo_handle_events(unsigned cpu, bool drop)$/;"	f	file:
__gnttab_entry	grant-table.c	/^static inline grant_ref_t *__gnttab_entry(grant_ref_t entry)$/;"	f	file:
__gnttab_init	grant-table.c	/^core_initcall_sync(__gnttab_init);$/;"	v
__gnttab_init	grant-table.c	/^static int __gnttab_init(void)$/;"	f	file:
__gnttab_unmap_refs_async	grant-table.c	/^static void __gnttab_unmap_refs_async(struct gntab_unmap_queue_data* item)$/;"	f	file:
__max_nr_grant_frames	grant-table.c	/^static unsigned int __max_nr_grant_frames(void)$/;"	f	file:
__read_mostly	events/events_base.c	/^static struct irq_chip xen_dynamic_chip __read_mostly = {$/;"	v	typeref:struct:xen_dynamic_chip	file:
__read_mostly	events/events_base.c	/^static struct irq_chip xen_percpu_chip __read_mostly = {$/;"	v	typeref:struct:xen_percpu_chip	file:
__read_mostly	events/events_base.c	/^static struct irq_chip xen_pirq_chip __read_mostly = {$/;"	v	typeref:struct:xen_pirq_chip	file:
__read_mostly	events/events_fifo.c	/^static event_word_t *event_array[MAX_EVENT_ARRAY_PAGES] __read_mostly;$/;"	v	file:
__read_mostly	events/events_fifo.c	/^static unsigned event_array_pages __read_mostly;$/;"	v	file:
__read_mostly	features.c	/^u8 xen_features[XENFEAT_NR_SUBMAPS * 32] __read_mostly;$/;"	v
__read_mostly	tmem.c	/^static bool cleancache __read_mostly = true;$/;"	v	file:
__read_mostly	tmem.c	/^static bool frontswap __read_mostly = true;$/;"	v	file:
__read_mostly	tmem.c	/^static bool selfballooning __read_mostly = true;$/;"	v	file:
__read_mostly	tmem.c	/^static bool selfshrinking __read_mostly = true;$/;"	v	file:
__read_mostly	xen-acpi-memhotplug.c	/^static bool acpi_hotmem_initialized __read_mostly;$/;"	v	file:
__read_mostly	xen-selfballoon.c	/^static bool frontswap_selfshrinking __read_mostly;$/;"	v	file:
__read_mostly	xen-selfballoon.c	/^static int xen_selfballooning_enabled __read_mostly;$/;"	v	file:
__read_mostly	xen-selfballoon.c	/^static unsigned int frontswap_hysteresis __read_mostly = 20;$/;"	v	file:
__read_mostly	xen-selfballoon.c	/^static unsigned int frontswap_inertia __read_mostly = 3;$/;"	v	file:
__read_mostly	xen-selfballoon.c	/^static unsigned int selfballoon_downhysteresis __read_mostly = 8;$/;"	v	file:
__read_mostly	xen-selfballoon.c	/^static unsigned int selfballoon_interval __read_mostly = 5;$/;"	v	file:
__read_mostly	xen-selfballoon.c	/^static unsigned int selfballoon_uphysteresis __read_mostly = 1;$/;"	v	file:
__read_mostly	xenbus/xenbus_client.c	/^static const struct xenbus_ring_ops *ring_ops __read_mostly;$/;"	v	typeref:struct:ring_ops	file:
__scsiback_del_translation_entry	xen-scsiback.c	/^static void __scsiback_del_translation_entry(struct v2p_entry *entry)$/;"	f	file:
__startup_pirq	events/events_base.c	/^static unsigned int __startup_pirq(unsigned int irq)$/;"	f	file:
__this_module	tmem.mod.c	/^__visible struct module __this_module$/;"	v	typeref:struct:module
__this_module	xen-acpi-processor.mod.c	/^__visible struct module __this_module$/;"	v	typeref:struct:module
__this_module	xen-gntalloc.mod.c	/^__visible struct module __this_module$/;"	v	typeref:struct:module
__this_module	xen-gntdev.mod.c	/^__visible struct module __this_module$/;"	v	typeref:struct:module
__this_module	xen-pciback/xen-pciback.mod.c	/^__visible struct module __this_module$/;"	v	typeref:struct:module
__unbind_from_irq	events/events_base.c	/^static void __unbind_from_irq(unsigned int irq)$/;"	f	file:
__unmap_grant_pages	gntdev.c	/^static int __unmap_grant_pages(struct grant_map *map, int offset, int pages)$/;"	f	file:
__used	tmem.mod.c	/^__used$/;"	v	file:
__used	xen-acpi-processor.mod.c	/^__used$/;"	v	file:
__used	xen-gntalloc.mod.c	/^__used$/;"	v	file:
__used	xen-gntdev.mod.c	/^__used$/;"	v	file:
__used	xen-pciback/xen-pciback.mod.c	/^__used$/;"	v	file:
__xen_evtchn_do_upcall	events/events_base.c	/^static void __xen_evtchn_do_upcall(void)$/;"	f	file:
__xen_pcibk_add_pci_dev	xen-pciback/passthrough.c	/^static int __xen_pcibk_add_pci_dev(struct xen_pcibk_device *pdev,$/;"	f	file:
__xen_pcibk_add_pci_dev	xen-pciback/vpci.c	/^static int __xen_pcibk_add_pci_dev(struct xen_pcibk_device *pdev,$/;"	f	file:
__xen_pcibk_get_pci_dev	xen-pciback/passthrough.c	/^static struct pci_dev *__xen_pcibk_get_pci_dev(struct xen_pcibk_device *pdev,$/;"	f	file:
__xen_pcibk_get_pci_dev	xen-pciback/vpci.c	/^static struct pci_dev *__xen_pcibk_get_pci_dev(struct xen_pcibk_device *pdev,$/;"	f	file:
__xen_pcibk_get_pcifront_dev	xen-pciback/passthrough.c	/^static int __xen_pcibk_get_pcifront_dev(struct pci_dev *pcidev,$/;"	f	file:
__xen_pcibk_get_pcifront_dev	xen-pciback/vpci.c	/^static int __xen_pcibk_get_pcifront_dev(struct pci_dev *pcidev,$/;"	f	file:
__xen_pcibk_init_devices	xen-pciback/passthrough.c	/^static int __xen_pcibk_init_devices(struct xen_pcibk_device *pdev)$/;"	f	file:
__xen_pcibk_init_devices	xen-pciback/vpci.c	/^static int __xen_pcibk_init_devices(struct xen_pcibk_device *pdev)$/;"	f	file:
__xen_pcibk_publish_pci_roots	xen-pciback/passthrough.c	/^static int __xen_pcibk_publish_pci_roots(struct xen_pcibk_device *pdev,$/;"	f	file:
__xen_pcibk_publish_pci_roots	xen-pciback/vpci.c	/^static int __xen_pcibk_publish_pci_roots(struct xen_pcibk_device *pdev,$/;"	f	file:
__xen_pcibk_release_devices	xen-pciback/passthrough.c	/^static void __xen_pcibk_release_devices(struct xen_pcibk_device *pdev)$/;"	f	file:
__xen_pcibk_release_devices	xen-pciback/vpci.c	/^static void __xen_pcibk_release_devices(struct xen_pcibk_device *pdev)$/;"	f	file:
__xen_pcibk_release_pci_dev	xen-pciback/passthrough.c	/^static void __xen_pcibk_release_pci_dev(struct xen_pcibk_device *pdev,$/;"	f	file:
__xen_pcibk_release_pci_dev	xen-pciback/vpci.c	/^static void __xen_pcibk_release_pci_dev(struct xen_pcibk_device *pdev,$/;"	f	file:
__xenbus_map_ring	xenbus/xenbus_client.c	/^static int __xenbus_map_ring(struct xenbus_device *dev,$/;"	f	file:
__xenbus_register_backend	xenbus/xenbus_probe_backend.c	/^EXPORT_SYMBOL_GPL(__xenbus_register_backend);$/;"	v
__xenbus_register_backend	xenbus/xenbus_probe_backend.c	/^int __xenbus_register_backend(struct xenbus_driver *drv, struct module *owner,$/;"	f
__xenbus_register_frontend	xenbus/xenbus_probe_frontend.c	/^EXPORT_SYMBOL_GPL(__xenbus_register_frontend);$/;"	v
__xenbus_register_frontend	xenbus/xenbus_probe_frontend.c	/^int __xenbus_register_frontend(struct xenbus_driver *drv, struct module *owner,$/;"	f
__xenbus_switch_state	xenbus/xenbus_client.c	/^__xenbus_switch_state(struct xenbus_device *dev,$/;"	f	file:
_gnttab_end_foreign_access_ref	grant-table.c	/^static inline int _gnttab_end_foreign_access_ref(grant_ref_t ref, int readonly)$/;"	f	file:
_oswiz	tmem.c	268;"	d	file:
ack_dynirq	events/events_base.c	/^static void ack_dynirq(struct irq_data *data)$/;"	f	file:
ack_intr	xen-pciback/pciback.h	/^	unsigned int ack_intr:1; \/* .. and ACK-ing *\/$/;"	m	struct:xen_pcibk_dev_data
acpi_id_cst_present	xen-acpi-processor.c	/^static unsigned long *acpi_id_cst_present;$/;"	v	file:
acpi_id_present	xen-acpi-processor.c	/^static unsigned long *acpi_id_present;$/;"	v	file:
acpi_ids_done	xen-acpi-processor.c	/^static unsigned long *acpi_ids_done;$/;"	v	file:
acpi_memory_check_device	xen-acpi-memhotplug.c	/^static int acpi_memory_check_device(struct acpi_memory_device *mem_device)$/;"	f	file:
acpi_memory_deregister_notify_handler	xen-acpi-memhotplug.c	/^acpi_memory_deregister_notify_handler(acpi_handle handle,$/;"	f	file:
acpi_memory_device	xen-acpi-memhotplug.c	/^struct acpi_memory_device {$/;"	s	file:
acpi_memory_device_notify	xen-acpi-memhotplug.c	/^static void acpi_memory_device_notify(acpi_handle handle, u32 event, void *data)$/;"	f	file:
acpi_memory_disable_device	xen-acpi-memhotplug.c	/^static int acpi_memory_disable_device(struct acpi_memory_device *mem_device)$/;"	f	file:
acpi_memory_get_device	xen-acpi-memhotplug.c	/^static int acpi_memory_get_device(acpi_handle handle,$/;"	f	file:
acpi_memory_get_device_resources	xen-acpi-memhotplug.c	/^acpi_memory_get_device_resources(struct acpi_memory_device *mem_device)$/;"	f	file:
acpi_memory_get_resource	xen-acpi-memhotplug.c	/^acpi_memory_get_resource(struct acpi_resource *resource, void *context)$/;"	f	file:
acpi_memory_info	xen-acpi-memhotplug.c	/^struct acpi_memory_info {$/;"	s	file:
acpi_memory_register_notify_handler	xen-acpi-memhotplug.c	/^acpi_memory_register_notify_handler(acpi_handle handle,$/;"	f	file:
acpi_pad_add	xen-acpi-pad.c	/^static int acpi_pad_add(struct acpi_device *device)$/;"	f	file:
acpi_pad_driver	xen-acpi-pad.c	/^static struct acpi_driver acpi_pad_driver = {$/;"	v	typeref:struct:acpi_driver	file:
acpi_pad_handle_notify	xen-acpi-pad.c	/^static void acpi_pad_handle_notify(acpi_handle handle)$/;"	f	file:
acpi_pad_notify	xen-acpi-pad.c	/^static void acpi_pad_notify(acpi_handle handle, u32 event,$/;"	f	file:
acpi_pad_pur	xen-acpi-pad.c	/^static int acpi_pad_pur(acpi_handle handle)$/;"	f	file:
acpi_pad_remove	xen-acpi-pad.c	/^static int acpi_pad_remove(struct acpi_device *device)$/;"	f	file:
acpi_perf_data	xen-acpi-processor.c	/^static struct acpi_processor_performance __percpu *acpi_perf_data;$/;"	v	typeref:struct:__percpu	file:
acpi_processor_device_remove	xen-acpi-cpuhotplug.c	/^static int acpi_processor_device_remove(struct acpi_device *device)$/;"	f	file:
acpi_processor_hotplug_notify	xen-acpi-cpuhotplug.c	/^static void acpi_processor_hotplug_notify(acpi_handle handle,$/;"	f	file:
acpi_processor_install_hotplug_notify	xen-acpi-cpuhotplug.c	/^void acpi_processor_install_hotplug_notify(void)$/;"	f	file:
acpi_processor_uninstall_hotplug_notify	xen-acpi-cpuhotplug.c	/^void acpi_processor_uninstall_hotplug_notify(void)$/;"	f	file:
active_evtchns	events/events_2l.c	/^static inline xen_ulong_t active_evtchns(unsigned int cpu,$/;"	f	file:
add	xen-pciback/pciback.h	/^	int (*add)(struct xen_pcibk_device *pdev, struct pci_dev *dev,$/;"	m	struct:xen_pcibk_backend
add_ballooned_pages	balloon.c	/^static int add_ballooned_pages(int nr_pages)$/;"	f	file:
add_evtchn	evtchn.c	/^static int add_evtchn(struct per_user_data *u, struct user_evtchn *evtchn)$/;"	f	file:
add_grefs	gntalloc.c	/^static int add_grefs(struct ioctl_gntalloc_alloc_gref *op,$/;"	f	file:
additional_memory_resource	balloon.c	/^static struct resource *additional_memory_resource(phys_addr_t size)$/;"	f	file:
addr	gntdev.c	/^	int addr;$/;"	m	struct:unmap_notify	file:
addr	grant-table.c	/^	void *addr;$/;"	m	union:__anon14	file:
addr	xenbus/xenbus_client.c	/^			void *addr;$/;"	m	struct:xenbus_map_node::__anon2::__anon4	file:
addrs	xenbus/xenbus_client.c	/^			unsigned long addrs[XENBUS_MAX_RING_GRANTS];$/;"	m	struct:xenbus_map_node::__anon2::__anon4	file:
addrs	xenbus/xenbus_client.c	/^	unsigned long addrs[XENBUS_MAX_RING_GRANTS];$/;"	m	struct:map_ring_valloc_hvm	file:
addrs	xenbus/xenbus_client.c	/^	unsigned long addrs[XENBUS_MAX_RING_GRANTS];$/;"	m	struct:unmap_ring_vfree_hvm	file:
alloc_empty_pages	privcmd.c	/^static int alloc_empty_pages(struct vm_area_struct *vma, int numpgs)$/;"	f	file:
alloc_pdev	xen-pciback/xenbus.c	/^static struct xen_pcibk_device *alloc_pdev(struct xenbus_device *xdev)$/;"	f	file:
alloc_watch_adapter	xenbus/xenbus_dev_frontend.c	/^static struct watch_adapter *alloc_watch_adapter(const char *path,$/;"	f	file:
alloc_xen_mmio	platform-pci.c	/^static unsigned long alloc_xen_mmio(unsigned long len)$/;"	f	file:
alloc_xenballooned_pages	balloon.c	/^EXPORT_SYMBOL(alloc_xenballooned_pages);$/;"	v
alloc_xenballooned_pages	balloon.c	/^int alloc_xenballooned_pages(int nr_pages, struct page **pages)$/;"	f
amba_device_nb	arm-device.c	/^static struct notifier_block amba_device_nb = {$/;"	v	typeref:struct:notifier_block	file:
area	xenbus/xenbus_client.c	/^			struct vm_struct *area;$/;"	m	struct:xenbus_map_node::__anon2::__anon3	typeref:struct:xenbus_map_node::__anon2::__anon3::vm_struct	file:
attr	sys-hypervisor.c	/^	struct attribute attr;$/;"	m	struct:hyp_sysfs_attr	typeref:struct:hyp_sysfs_attr::attribute	file:
b	xen-pciback/conf_space.h	/^		} b;$/;"	m	union:config_field::__anon8	typeref:struct:config_field::__anon8::__anon11
backend_bus_id	xenbus/xenbus_probe_backend.c	/^static int backend_bus_id(char bus_id[XEN_BUS_ID_SIZE], const char *nodename)$/;"	f	file:
backend_changed	xenbus/xenbus_probe_backend.c	/^static void backend_changed(struct xenbus_watch *watch,$/;"	f	file:
backend_changed	xenbus/xenbus_probe_frontend.c	/^static void backend_changed(struct xenbus_watch *watch,$/;"	f	file:
backend_probe_and_watch	xenbus/xenbus_probe_backend.c	/^static int backend_probe_and_watch(struct notifier_block *notifier,$/;"	f	file:
backend_state	xenbus/xenbus_probe_frontend.c	/^static int backend_state;$/;"	v	file:
balloon_add_region	balloon.c	/^static void __init balloon_add_region(unsigned long start_pfn,$/;"	f	file:
balloon_append	balloon.c	/^static void balloon_append(struct page *page)$/;"	f	file:
balloon_attrs	xen-balloon.c	/^static struct attribute *balloon_attrs[] = {$/;"	v	typeref:struct:attribute	file:
balloon_dev	xen-balloon.c	/^static struct device balloon_dev;$/;"	v	typeref:struct:device	file:
balloon_group	xen-balloon.c	/^static const struct attribute_group balloon_group = {$/;"	v	typeref:struct:attribute_group	file:
balloon_groups	xen-balloon.c	/^static const struct attribute_group *balloon_groups[] = {$/;"	v	typeref:struct:attribute_group	file:
balloon_info_attrs	xen-balloon.c	/^static struct attribute *balloon_info_attrs[] = {$/;"	v	typeref:struct:attribute	file:
balloon_info_group	xen-balloon.c	/^static const struct attribute_group balloon_info_group = {$/;"	v	typeref:struct:attribute_group	file:
balloon_init	balloon.c	/^static int __init balloon_init(void)$/;"	f	file:
balloon_init	balloon.c	/^subsys_initcall(balloon_init);$/;"	v
balloon_init	xen-balloon.c	/^static int __init balloon_init(void)$/;"	f	file:
balloon_init	xen-balloon.c	/^subsys_initcall(balloon_init);$/;"	v
balloon_init_watcher	xen-balloon.c	/^static int balloon_init_watcher(struct notifier_block *notifier,$/;"	f	file:
balloon_is_inflated	balloon.c	/^static bool balloon_is_inflated(void)$/;"	f	file:
balloon_next_page	balloon.c	/^static struct page *balloon_next_page(struct page *page)$/;"	f	file:
balloon_process	balloon.c	/^static void balloon_process(struct work_struct *work)$/;"	f	file:
balloon_retrieve	balloon.c	/^static struct page *balloon_retrieve(bool require_lowmem)$/;"	f	file:
balloon_root	balloon.c	/^static struct ctl_table balloon_root[] = {$/;"	v	typeref:struct:ctl_table	file:
balloon_set_new_target	balloon.c	/^EXPORT_SYMBOL_GPL(balloon_set_new_target);$/;"	v
balloon_set_new_target	balloon.c	/^void balloon_set_new_target(unsigned long target)$/;"	f
balloon_stats	balloon.c	/^EXPORT_SYMBOL_GPL(balloon_stats);$/;"	v
balloon_stats	balloon.c	/^struct balloon_stats balloon_stats;$/;"	v	typeref:struct:balloon_stats
balloon_subsys	xen-balloon.c	/^static struct bus_type balloon_subsys = {$/;"	v	typeref:struct:bus_type	file:
balloon_table	balloon.c	/^static struct ctl_table balloon_table[] = {$/;"	v	typeref:struct:ctl_table	file:
bar_init	xen-pciback/conf_space_header.c	/^static void *bar_init(struct pci_dev *dev, int offset)$/;"	f	file:
bar_read	xen-pciback/conf_space_header.c	/^static int bar_read(struct pci_dev *dev, int offset, u32 * value, void *data)$/;"	f	file:
bar_release	xen-pciback/conf_space_header.c	/^static void bar_release(struct pci_dev *dev, int offset, void *data)$/;"	f	file:
bar_reset	xen-pciback/conf_space_header.c	/^static void bar_reset(struct pci_dev *dev, int offset, void *data)$/;"	f	file:
bar_write	xen-pciback/conf_space_header.c	/^static int bar_write(struct pci_dev *dev, int offset, u32 value, void *data)$/;"	f	file:
base_offset	xen-pciback/conf_space.h	/^	unsigned int base_offset;$/;"	m	struct:config_field_entry
be_watch	xen-pciback/pciback.h	/^	struct xenbus_watch be_watch;$/;"	m	struct:xen_pcibk_device	typeref:struct:xen_pcibk_device::xenbus_watch
be_watch	xenbus/xenbus_probe_backend.c	/^static struct xenbus_watch be_watch = {$/;"	v	typeref:struct:xenbus_watch	file:
be_watching	xen-pciback/pciback.h	/^	u8 be_watching;$/;"	m	struct:xen_pcibk_device
bind_evtchn_to_cpu	events/events_base.c	/^static void bind_evtchn_to_cpu(unsigned int chn, unsigned int cpu)$/;"	f	file:
bind_evtchn_to_irq	events/events_base.c	/^EXPORT_SYMBOL_GPL(bind_evtchn_to_irq);$/;"	v
bind_evtchn_to_irq	events/events_base.c	/^int bind_evtchn_to_irq(unsigned int evtchn)$/;"	f
bind_evtchn_to_irqhandler	events/events_base.c	/^EXPORT_SYMBOL_GPL(bind_evtchn_to_irqhandler);$/;"	v
bind_evtchn_to_irqhandler	events/events_base.c	/^int bind_evtchn_to_irqhandler(unsigned int evtchn,$/;"	f
bind_interdomain_evtchn_to_irq	events/events_base.c	/^EXPORT_SYMBOL_GPL(bind_interdomain_evtchn_to_irq);$/;"	v
bind_interdomain_evtchn_to_irq	events/events_base.c	/^int bind_interdomain_evtchn_to_irq(unsigned int remote_domain,$/;"	f
bind_interdomain_evtchn_to_irqhandler	events/events_base.c	/^EXPORT_SYMBOL_GPL(bind_interdomain_evtchn_to_irqhandler);$/;"	v
bind_interdomain_evtchn_to_irqhandler	events/events_base.c	/^int bind_interdomain_evtchn_to_irqhandler(unsigned int remote_domain,$/;"	f
bind_ipi_to_irq	events/events_base.c	/^static int bind_ipi_to_irq(unsigned int ipi, unsigned int cpu)$/;"	f	file:
bind_ipi_to_irqhandler	events/events_base.c	/^int bind_ipi_to_irqhandler(enum ipi_vector ipi,$/;"	f
bind_mutex	evtchn.c	/^	struct mutex bind_mutex; \/* serialize bind\/unbind operations *\/$/;"	m	struct:per_user_data	typeref:struct:per_user_data::mutex	file:
bind_to_cpu	events/events_internal.h	/^	void (*bind_to_cpu)(struct irq_info *info, unsigned cpu);$/;"	m	struct:evtchn_ops
bind_virq_for_mce	mcelog.c	/^static int bind_virq_for_mce(void)$/;"	f	file:
bind_virq_to_irq	events/events_base.c	/^int bind_virq_to_irq(unsigned int virq, unsigned int cpu, bool percpu)$/;"	f
bind_virq_to_irqhandler	events/events_base.c	/^EXPORT_SYMBOL_GPL(bind_virq_to_irqhandler);$/;"	v
bind_virq_to_irqhandler	events/events_base.c	/^int bind_virq_to_irqhandler(unsigned int virq, unsigned int cpu,$/;"	f
bist_write	xen-pciback/conf_space_header.c	/^static int bist_write(struct pci_dev *dev, int offset, u8 value, void *data)$/;"	f	file:
body	xenbus/xenbus_xs.c	/^			char *body;$/;"	m	struct:xs_stored_msg::__anon5::__anon6	file:
boot_wait_for_devices	xenbus/xenbus_probe_frontend.c	/^late_initcall(boot_wait_for_devices);$/;"	v
boot_wait_for_devices	xenbus/xenbus_probe_frontend.c	/^static int __init boot_wait_for_devices(void)$/;"	f	file:
bp_state	balloon.c	/^enum bp_state {$/;"	g	file:
buffer	xenbus/xenbus_dev_frontend.c	/^		char buffer[XENSTORE_PAYLOAD_MAX];$/;"	m	union:xenbus_file_priv::__anon1	file:
bus	xen-pciback/pci_stub.c	/^	unsigned char bus;$/;"	m	struct:pcistub_device_id	file:
bus	xenbus/xenbus_probe.h	/^	struct bus_type bus;$/;"	m	struct:xen_bus_type	typeref:struct:xen_bus_type::bus_type
caching	xen-acpi-memhotplug.c	/^	unsigned short caching;	\/* memory cache attribute *\/$/;"	m	struct:acpi_memory_info	file:
callback_via	platform-pci.c	/^static uint64_t callback_via;$/;"	v	file:
cancelled	manage.c	/^	int cancelled;$/;"	m	struct:suspend_info	file:
cap_list	xen-pciback/conf_space_capability.c	/^	struct list_head cap_list;$/;"	m	struct:xen_pcibk_config_capability	typeref:struct:xen_pcibk_config_capability::list_head	file:
capabilities	sys-hypervisor.c	/^HYPERVISOR_ATTR_RO(capabilities);$/;"	v
capabilities_file_ops	xenfs/super.c	/^static const struct file_operations capabilities_file_ops = {$/;"	v	typeref:struct:file_operations	file:
capabilities_read	xenfs/super.c	/^static ssize_t capabilities_read(struct file *file, char __user *buf,$/;"	f	file:
capabilities_show	sys-hypervisor.c	/^static ssize_t capabilities_show(struct hyp_sysfs_attr *attr, char *buffer)$/;"	f	file:
capability	xen-pciback/conf_space_capability.c	/^	int capability;$/;"	m	struct:xen_pcibk_config_capability	file:
caplist_header	xen-pciback/conf_space_capability.c	/^static const struct config_field caplist_header[] = {$/;"	v	typeref:struct:config_field	file:
caplist_pm	xen-pciback/conf_space_capability.c	/^static const struct config_field caplist_pm[] = {$/;"	v	typeref:struct:config_field	file:
caplist_vpd	xen-pciback/conf_space_capability.c	/^static const struct config_field caplist_vpd[] = {$/;"	v	typeref:struct:config_field	file:
cb	manage.c	/^	void (*cb)(void);$/;"	m	struct:shutdown_handler	file:
changeset	sys-hypervisor.c	/^HYPERVISOR_ATTR_RO(changeset);$/;"	v
changeset_show	sys-hypervisor.c	/^static ssize_t changeset_show(struct hyp_sysfs_attr *attr, char *buffer)$/;"	f	file:
char_count	xenbus/xenbus_probe.c	/^static unsigned int char_count(const char *str, char c)$/;"	f	file:
check_acpi_ids	xen-acpi-processor.c	/^static int check_acpi_ids(struct acpi_processor *pr_backup)$/;"	f	file:
check_free_callbacks	grant-table.c	/^static inline void check_free_callbacks(void)$/;"	f	file:
check_indexes	xenbus/xenbus_comms.c	/^static int check_indexes(XENSTORE_RING_IDX cons, XENSTORE_RING_IDX prod)$/;"	f	file:
check_pages_physically_contiguous	swiotlb-xen.c	/^static int check_pages_physically_contiguous(unsigned long xen_pfn,$/;"	f	file:
chn	xen-scsiback.c	/^	unsigned int chn;		\/* channel *\/$/;"	m	struct:ids_tuple	file:
clean	xen-pciback/conf_space.h	/^	void (*clean) (struct config_field *field);$/;"	m	struct:config_field
cleanup_dev	xenbus/xenbus_probe.c	/^static int cleanup_dev(struct device *dev, void *data)$/;"	f	file:
clear_evtchn	events/events_internal.h	/^static inline void clear_evtchn(unsigned port)$/;"	f
clear_evtchn_to_irq_all	events/events_base.c	/^static void clear_evtchn_to_irq_all(void)$/;"	f	file:
clear_evtchn_to_irq_row	events/events_base.c	/^static void clear_evtchn_to_irq_row(unsigned row)$/;"	f	file:
clear_linked	events/events_fifo.c	/^static uint32_t clear_linked(volatile event_word_t *word)$/;"	f	file:
clear_masked	events/events_fifo.c	/^static void clear_masked(volatile event_word_t *word)$/;"	f	file:
clear_pending	events/events_internal.h	/^	void (*clear_pending)(unsigned port);$/;"	m	struct:evtchn_ops
cmd_len	xen-scsiback.c	/^	uint8_t cmd_len;$/;"	m	struct:vscsibk_pend	file:
cmnd	xen-scsiback.c	/^	uint8_t cmnd[VSCSIIF_MAX_COMMAND_SIZE];$/;"	m	struct:vscsibk_pend	file:
cmp_dev	xenbus/xenbus_probe.c	/^static int cmp_dev(struct device *dev, void *data)$/;"	f	file:
command	manage.c	/^	const char command[SHUTDOWN_CMD_SIZE];$/;"	m	struct:shutdown_handler	file:
command_init	xen-pciback/conf_space_header.c	/^static void *command_init(struct pci_dev *dev, int offset)$/;"	f	file:
command_read	xen-pciback/conf_space_header.c	/^static int command_read(struct pci_dev *dev, int offset, u16 *value, void *data)$/;"	f	file:
command_write	xen-pciback/conf_space_header.c	/^static int command_write(struct pci_dev *dev, int offset, u16 value, void *data)$/;"	f	file:
common_process	xen-pciback/pci_stub.c	/^static pci_ers_result_t common_process(struct pcistub_device *psdev,$/;"	f	file:
compile_date	sys-hypervisor.c	/^HYPERVISOR_ATTR_RO(compile_date);$/;"	v
compile_date_show	sys-hypervisor.c	/^static ssize_t compile_date_show(struct hyp_sysfs_attr *attr, char *buffer)$/;"	f	file:
compiled_by	sys-hypervisor.c	/^HYPERVISOR_ATTR_RO(compiled_by);$/;"	v
compiled_by_show	sys-hypervisor.c	/^static ssize_t compiled_by_show(struct hyp_sysfs_attr *attr, char *buffer)$/;"	f	file:
compiler	sys-hypervisor.c	/^HYPERVISOR_ATTR_RO(compiler);$/;"	v
compiler_show	sys-hypervisor.c	/^static ssize_t compiler_show(struct hyp_sysfs_attr *attr, char *buffer)$/;"	f	file:
completion	grant-table.c	/^	struct completion completion;$/;"	m	struct:unmap_refs_callback_data	typeref:struct:unmap_refs_callback_data::completion	file:
conf_byte_read	xen-pciback/conf_space.h	/^typedef int (*conf_byte_read) (struct pci_dev *dev, int offset, u8 *value,$/;"	t
conf_byte_write	xen-pciback/conf_space.h	/^typedef int (*conf_byte_write) (struct pci_dev *dev, int offset, u8 value,$/;"	t
conf_dword_read	xen-pciback/conf_space.h	/^typedef int (*conf_dword_read) (struct pci_dev *dev, int offset, u32 *value,$/;"	t
conf_dword_write	xen-pciback/conf_space.h	/^typedef int (*conf_dword_write) (struct pci_dev *dev, int offset, u32 value,$/;"	t
conf_field_free	xen-pciback/conf_space.h	/^typedef void (*conf_field_free) (struct pci_dev *dev, int offset, void *data);$/;"	t
conf_field_init	xen-pciback/conf_space.h	/^typedef void *(*conf_field_init) (struct pci_dev *dev, int offset);$/;"	t
conf_field_reset	xen-pciback/conf_space.h	/^typedef void (*conf_field_reset) (struct pci_dev *dev, int offset, void *data);$/;"	t
conf_space_read	xen-pciback/conf_space.c	/^static int conf_space_read(struct pci_dev *dev,$/;"	f	file:
conf_space_write	xen-pciback/conf_space.c	/^static int conf_space_write(struct pci_dev *dev,$/;"	f	file:
conf_word_read	xen-pciback/conf_space.h	/^typedef int (*conf_word_read) (struct pci_dev *dev, int offset, u16 *value,$/;"	t
conf_word_write	xen-pciback/conf_space.h	/^typedef int (*conf_word_write) (struct pci_dev *dev, int offset, u16 value,$/;"	t
config_field	xen-pciback/conf_space.h	/^struct config_field {$/;"	s
config_field_entry	xen-pciback/conf_space.h	/^struct config_field_entry {$/;"	s
config_fields	xen-pciback/pciback.h	/^	struct list_head config_fields;$/;"	m	struct:xen_pcibk_dev_data	typeref:struct:xen_pcibk_dev_data::list_head
cons	xenbus/xenbus_dev_frontend.c	/^	unsigned int cons;$/;"	m	struct:read_buffer	file:
consume_one_event	events/events_fifo.c	/^static void consume_one_event(unsigned cpu,$/;"	f	file:
convert_log	mcelog.c	/^static int convert_log(struct mc_info *mi)$/;"	f	file:
count	gntalloc.c	/^	int count;$/;"	m	struct:gntalloc_vma_private_data	file:
count	gntdev.c	/^	int count;$/;"	m	struct:grant_map	file:
count_strings	xenbus/xenbus_xs.c	/^static unsigned int count_strings(const char *strings, unsigned int len)$/;"	f	file:
cpu	events/events_internal.h	/^	unsigned short cpu;	\/* cpu bound *\/$/;"	m	struct:irq_info
cpu_from_evtchn	events/events_base.c	/^unsigned int cpu_from_evtchn(unsigned int evtchn)$/;"	f
cpu_from_irq	events/events_base.c	/^unsigned cpu_from_irq(unsigned irq)$/;"	f
cpu_id	pcpu.c	/^	uint32_t cpu_id;$/;"	m	struct:pcpu	file:
create_and_register_pcpu	pcpu.c	/^static struct pcpu *create_and_register_pcpu(struct xenpf_pcpuinfo *info)$/;"	f	file:
current_credit	balloon.c	/^static long current_credit(void)$/;"	f	file:
data	xen-pciback/conf_space.h	/^	void *data;$/;"	m	struct:config_field_entry
data_len	xen-scsiback.c	/^	uint32_t data_len;$/;"	m	struct:vscsibk_pend	file:
decrease_reservation	balloon.c	/^static enum bp_state decrease_reservation(unsigned long nr_pages, gfp_t gfp)$/;"	f	file:
deferred_entry	grant-table.c	/^struct deferred_entry {$/;"	s	file:
del_evtchn	evtchn.c	/^static void del_evtchn(struct per_user_data *u, struct user_evtchn *evtchn)$/;"	f	file:
dev	pcpu.c	/^	struct device dev;$/;"	m	struct:pcpu	typeref:struct:pcpu::device	file:
dev	xen-pciback/pci_stub.c	/^	struct pci_dev *dev;$/;"	m	struct:pcistub_device	typeref:struct:pcistub_device::pci_dev	file:
dev	xen-pciback/pciback.h	/^	struct pci_dev *dev;$/;"	m	struct:pci_dev_entry	typeref:struct:pci_dev_entry::pci_dev
dev	xen-scsiback.c	/^	struct xenbus_device *dev;$/;"	m	struct:vscsibk_info	typeref:struct:vscsibk_info::xenbus_device	file:
dev	xenbus/xenbus_probe.c	/^	struct xenbus_device *dev;$/;"	m	struct:xb_find_info	typeref:struct:xb_find_info::xenbus_device	file:
dev_data	xenbus/xenbus_dev_frontend.c	/^	struct xenbus_file_priv *dev_data;$/;"	m	struct:watch_adapter	typeref:struct:watch_adapter::xenbus_file_priv	file:
dev_list	xen-pciback/passthrough.c	/^	struct list_head dev_list;$/;"	m	struct:passthrough_dev_data	typeref:struct:passthrough_dev_data::list_head	file:
dev_list	xen-pciback/pci_stub.c	/^	struct list_head dev_list;$/;"	m	struct:pcistub_device	typeref:struct:pcistub_device::list_head	file:
dev_list	xen-pciback/vpci.c	/^	struct list_head dev_list[PCI_SLOT_MAX];$/;"	m	struct:vpci_dev_data	typeref:struct:vpci_dev_data::list_head	file:
dev_lock	xen-pciback/pciback.h	/^	struct mutex dev_lock;$/;"	m	struct:xen_pcibk_device	typeref:struct:xen_pcibk_device::mutex
devfn	xen-pciback/pci_stub.c	/^	unsigned int devfn;$/;"	m	struct:pcistub_device_id	file:
device	xen-acpi-memhotplug.c	/^	struct acpi_device *device;$/;"	m	struct:acpi_memory_device	typeref:struct:acpi_memory_device::acpi_device	file:
device_nb	pci.c	/^static struct notifier_block device_nb = {$/;"	v	typeref:struct:notifier_block	file:
devid	xen-pciback/conf_space_quirks.h	/^	struct pci_device_id devid;$/;"	m	struct:xen_pcibk_config_quirk	typeref:struct:xen_pcibk_config_quirk::pci_device_id
devtype_show	xenbus/xenbus_probe.c	/^static ssize_t devtype_show(struct device *dev,$/;"	f	file:
disable_dynirq	events/events_base.c	/^static void disable_dynirq(struct irq_data *data)$/;"	f	file:
disable_hotplug_cpu	cpu_hotplug.c	/^static void disable_hotplug_cpu(int cpu)$/;"	f	file:
disable_pirq	events/events_base.c	/^static void disable_pirq(struct irq_data *data)$/;"	f	file:
dma_alloc_coherent_mask	swiotlb-xen.c	/^static unsigned long dma_alloc_coherent_mask(struct device *dev,$/;"	f	file:
do_cleanup	gntalloc.c	/^static void do_cleanup(void)$/;"	f	file:
do_free_callbacks	grant-table.c	/^static void do_free_callbacks(void)$/;"	f	file:
do_hvm_evtchn_intr	platform-pci.c	/^static irqreturn_t do_hvm_evtchn_intr(int irq, void *dev_id)$/;"	f	file:
do_poweroff	manage.c	/^static void do_poweroff(void)$/;"	f	file:
do_reboot	manage.c	/^static void do_reboot(void)$/;"	f	file:
do_suspend	manage.c	/^static void do_suspend(void)$/;"	f	file:
domain	privcmd.c	/^	domid_t domain;$/;"	m	struct:mmap_batch_state	file:
domain	privcmd.c	/^	domid_t domain;$/;"	m	struct:mmap_gfn_state	file:
domain	xen-pciback/pci_stub.c	/^	int domain;$/;"	m	struct:pcistub_device_id	file:
domid	events/events_internal.h	/^			uint16_t domid;$/;"	m	struct:irq_info::__anon12::__anon13
domid	xen-scsiback.c	/^	domid_t domid;$/;"	m	struct:vscsibk_info	file:
domid	xlate_mmu.c	/^	domid_t  domid;$/;"	m	struct:remap_data	file:
dw	xen-pciback/conf_space.h	/^		} dw;$/;"	m	union:config_field::__anon8	typeref:struct:config_field::__anon8::__anon9
efi_data	efi.c	39;"	d	file:
enable_dynirq	events/events_base.c	/^static void enable_dynirq(struct irq_data *data)$/;"	f	file:
enable_hotplug_cpu	cpu_hotplug.c	/^static void enable_hotplug_cpu(int cpu)$/;"	f	file:
enable_intx	xen-pciback/pciback.h	/^	unsigned int enable_intx:1;$/;"	m	struct:xen_pcibk_dev_data
enable_pirq	events/events_base.c	/^static void enable_pirq(struct irq_data *data)$/;"	f	file:
enable_tmem	tmem.c	/^static int __init enable_tmem(char *s)$/;"	f	file:
enabled	evtchn.c	/^	bool enabled;$/;"	m	struct:user_evtchn	file:
enabled	xen-acpi-memhotplug.c	/^	unsigned int enabled:1;$/;"	m	struct:acpi_memory_info	file:
end_foreign_access_ref	grant-table.c	/^	int (*end_foreign_access_ref)(grant_ref_t ref, int readonly);$/;"	m	struct:gnttab_ops	file:
end_foreign_transfer_ref	grant-table.c	/^	unsigned long (*end_foreign_transfer_ref)(grant_ref_t ref);$/;"	m	struct:gnttab_ops	file:
eoi_pirq	events/events_base.c	/^static void eoi_pirq(struct irq_data *data)$/;"	f	file:
err_ptr	xlate_mmu.c	/^	int *err_ptr;$/;"	m	struct:remap_data	file:
error_path	xenbus/xenbus_client.c	/^static char *error_path(struct xenbus_device *dev)$/;"	f	file:
essential_device_connecting	xenbus/xenbus_probe_frontend.c	/^static int essential_device_connecting(struct device *dev, void *data)$/;"	f	file:
event	gntalloc.c	/^	int event;            \/* Port (event channel) to notify *\/$/;"	m	struct:notify_info	file:
event	gntdev.c	/^	int event;$/;"	m	struct:unmap_notify	file:
event_word_from_port	events/events_fifo.c	/^static inline event_word_t *event_word_from_port(unsigned port)$/;"	f	file:
evtchn	events/events_internal.h	/^	unsigned int evtchn;	\/* event channel *\/$/;"	m	struct:irq_info
evtchn_2l_bind_to_cpu	events/events_2l.c	/^static void evtchn_2l_bind_to_cpu(struct irq_info *info, unsigned cpu)$/;"	f	file:
evtchn_2l_clear_pending	events/events_2l.c	/^static void evtchn_2l_clear_pending(unsigned port)$/;"	f	file:
evtchn_2l_handle_events	events/events_2l.c	/^static void evtchn_2l_handle_events(unsigned cpu)$/;"	f	file:
evtchn_2l_is_pending	events/events_2l.c	/^static bool evtchn_2l_is_pending(unsigned port)$/;"	f	file:
evtchn_2l_mask	events/events_2l.c	/^static void evtchn_2l_mask(unsigned port)$/;"	f	file:
evtchn_2l_max_channels	events/events_2l.c	/^static unsigned evtchn_2l_max_channels(void)$/;"	f	file:
evtchn_2l_resume	events/events_2l.c	/^static void evtchn_2l_resume(void)$/;"	f	file:
evtchn_2l_set_pending	events/events_2l.c	/^static void evtchn_2l_set_pending(unsigned port)$/;"	f	file:
evtchn_2l_test_and_set_mask	events/events_2l.c	/^static bool evtchn_2l_test_and_set_mask(unsigned port)$/;"	f	file:
evtchn_2l_unmask	events/events_2l.c	/^static void evtchn_2l_unmask(unsigned port)$/;"	f	file:
evtchn_alloc_ring	evtchn.c	/^static evtchn_port_t *evtchn_alloc_ring(unsigned int size)$/;"	f	file:
evtchn_async_queue	evtchn.c	/^	struct fasync_struct *evtchn_async_queue;$/;"	m	struct:per_user_data	typeref:struct:per_user_data::fasync_struct	file:
evtchn_bind_to_user	evtchn.c	/^static int evtchn_bind_to_user(struct per_user_data *u, int port)$/;"	f	file:
evtchn_cleanup	evtchn.c	/^module_exit(evtchn_cleanup);$/;"	v
evtchn_cleanup	evtchn.c	/^static void __exit evtchn_cleanup(void)$/;"	f	file:
evtchn_fasync	evtchn.c	/^static int evtchn_fasync(int fd, struct file *filp, int on)$/;"	f	file:
evtchn_fifo_alloc_control_block	events/events_fifo.c	/^static int evtchn_fifo_alloc_control_block(unsigned cpu)$/;"	f	file:
evtchn_fifo_bind_to_cpu	events/events_fifo.c	/^static void evtchn_fifo_bind_to_cpu(struct irq_info *info, unsigned cpu)$/;"	f	file:
evtchn_fifo_clear_pending	events/events_fifo.c	/^static void evtchn_fifo_clear_pending(unsigned port)$/;"	f	file:
evtchn_fifo_handle_events	events/events_fifo.c	/^static void evtchn_fifo_handle_events(unsigned cpu)$/;"	f	file:
evtchn_fifo_is_masked	events/events_fifo.c	/^static bool evtchn_fifo_is_masked(unsigned port)$/;"	f	file:
evtchn_fifo_is_pending	events/events_fifo.c	/^static bool evtchn_fifo_is_pending(unsigned port)$/;"	f	file:
evtchn_fifo_mask	events/events_fifo.c	/^static void evtchn_fifo_mask(unsigned port)$/;"	f	file:
evtchn_fifo_max_channels	events/events_fifo.c	/^static unsigned evtchn_fifo_max_channels(void)$/;"	f	file:
evtchn_fifo_nr_channels	events/events_fifo.c	/^static unsigned evtchn_fifo_nr_channels(void)$/;"	f	file:
evtchn_fifo_queue	events/events_fifo.c	/^struct evtchn_fifo_queue {$/;"	s	file:
evtchn_fifo_resume	events/events_fifo.c	/^static void evtchn_fifo_resume(void)$/;"	f	file:
evtchn_fifo_set_pending	events/events_fifo.c	/^static void evtchn_fifo_set_pending(unsigned port)$/;"	f	file:
evtchn_fifo_setup	events/events_fifo.c	/^static int evtchn_fifo_setup(struct irq_info *info)$/;"	f	file:
evtchn_fifo_test_and_set_mask	events/events_fifo.c	/^static bool evtchn_fifo_test_and_set_mask(unsigned port)$/;"	f	file:
evtchn_fifo_unmask	events/events_fifo.c	/^static void evtchn_fifo_unmask(unsigned port)$/;"	f	file:
evtchn_fops	evtchn.c	/^static const struct file_operations evtchn_fops = {$/;"	v	typeref:struct:file_operations	file:
evtchn_free_ring	evtchn.c	/^static void evtchn_free_ring(evtchn_port_t *ring)$/;"	f	file:
evtchn_from_irq	events/events_base.c	/^unsigned int evtchn_from_irq(unsigned irq)$/;"	f
evtchn_get	events/events_base.c	/^EXPORT_SYMBOL_GPL(evtchn_get);$/;"	v
evtchn_get	events/events_base.c	/^int evtchn_get(unsigned int evtchn)$/;"	f
evtchn_init	evtchn.c	/^module_init(evtchn_init);$/;"	v
evtchn_init	evtchn.c	/^static int __init evtchn_init(void)$/;"	f	file:
evtchn_interrupt	evtchn.c	/^static irqreturn_t evtchn_interrupt(int irq, void *data)$/;"	f	file:
evtchn_ioctl	evtchn.c	/^static long evtchn_ioctl(struct file *file,$/;"	f	file:
evtchn_irq	xen-pciback/pciback.h	/^	int evtchn_irq;$/;"	m	struct:xen_pcibk_device
evtchn_make_refcounted	events/events_base.c	/^EXPORT_SYMBOL_GPL(evtchn_make_refcounted);$/;"	v
evtchn_make_refcounted	events/events_base.c	/^int evtchn_make_refcounted(unsigned int evtchn)$/;"	f
evtchn_miscdev	evtchn.c	/^static struct miscdevice evtchn_miscdev = {$/;"	v	typeref:struct:miscdevice	file:
evtchn_open	evtchn.c	/^static int evtchn_open(struct inode *inode, struct file *filp)$/;"	f	file:
evtchn_ops	events/events_base.c	/^const struct evtchn_ops *evtchn_ops;$/;"	v	typeref:struct:evtchn_ops
evtchn_ops	events/events_internal.h	/^struct evtchn_ops {$/;"	s
evtchn_ops_2l	events/events_2l.c	/^static const struct evtchn_ops evtchn_ops_2l = {$/;"	v	typeref:struct:evtchn_ops	file:
evtchn_ops_fifo	events/events_fifo.c	/^static const struct evtchn_ops evtchn_ops_fifo = {$/;"	v	typeref:struct:evtchn_ops	file:
evtchn_poll	evtchn.c	/^static unsigned int evtchn_poll(struct file *file, poll_table *wait)$/;"	f	file:
evtchn_put	events/events_base.c	/^EXPORT_SYMBOL_GPL(evtchn_put);$/;"	v
evtchn_put	events/events_base.c	/^void evtchn_put(unsigned int evtchn)$/;"	f
evtchn_read	evtchn.c	/^static ssize_t evtchn_read(struct file *file, char __user *buf,$/;"	f	file:
evtchn_release	evtchn.c	/^static int evtchn_release(struct inode *inode, struct file *filp)$/;"	f	file:
evtchn_resize_ring	evtchn.c	/^static int evtchn_resize_ring(struct per_user_data *u)$/;"	f	file:
evtchn_ring_entry	evtchn.c	/^static evtchn_port_t *evtchn_ring_entry(struct per_user_data *u,$/;"	f	file:
evtchn_ring_offset	evtchn.c	/^static unsigned int evtchn_ring_offset(struct per_user_data *u,$/;"	f	file:
evtchn_to_irq	events/events_base.c	/^int **evtchn_to_irq;$/;"	v
evtchn_unbind_from_user	evtchn.c	/^static void evtchn_unbind_from_user(struct per_user_data *u,$/;"	f	file:
evtchn_wait	evtchn.c	/^	wait_queue_head_t evtchn_wait;$/;"	m	struct:per_user_data	file:
evtchn_write	evtchn.c	/^static ssize_t evtchn_write(struct file *file, const char __user *buf,$/;"	f	file:
evtchns	evtchn.c	/^	struct rb_root evtchns;$/;"	m	struct:per_user_data	typeref:struct:per_user_data::rb_root	file:
exists_essential_connecting_device	xenbus/xenbus_probe_frontend.c	/^static int exists_essential_connecting_device(struct device_driver *drv)$/;"	f	file:
exists_non_essential_connecting_device	xenbus/xenbus_probe_frontend.c	/^static int exists_non_essential_connecting_device(struct device_driver *drv)$/;"	f	file:
extra	sys-hypervisor.c	/^HYPERVISOR_ATTR_RO(extra);$/;"	v
extra_show	sys-hypervisor.c	/^static ssize_t extra_show(struct hyp_sysfs_attr *attr, char *buffer)$/;"	f	file:
fe_watch	xenbus/xenbus_probe_frontend.c	/^static struct xenbus_watch fe_watch = {$/;"	v	typeref:struct:xenbus_watch	file:
features	sys-hypervisor.c	/^HYPERVISOR_ATTR_RO(features);$/;"	v
features_show	sys-hypervisor.c	/^static ssize_t features_show(struct hyp_sysfs_attr *attr, char *buffer)$/;"	f	file:
fgfn	xlate_mmu.c	/^	xen_pfn_t *fgfn; \/* foreign domain's gfn *\/$/;"	m	struct:remap_data	file:
field	xen-pciback/conf_space.h	/^	const struct config_field *field;$/;"	m	struct:config_field_entry	typeref:struct:config_field_entry::config_field
fields	xen-pciback/conf_space_capability.c	/^	const struct config_field *fields;$/;"	m	struct:xen_pcibk_config_capability	typeref:struct:xen_pcibk_config_capability::config_field	file:
fifo_events	events/events_base.c	/^static bool fifo_events = true;$/;"	v	file:
file_index	gntalloc.c	/^	uint64_t file_index;         \/* File offset for mmap() *\/$/;"	m	struct:gntalloc_gref	file:
find	xen-pciback/pciback.h	/^	int (*find)(struct pci_dev *pcidev, struct xen_pcibk_device *pdev,$/;"	m	struct:xen_pcibk_backend
find_evtchn	evtchn.c	/^static struct user_evtchn *find_evtchn(struct per_user_data *u, unsigned port)$/;"	f	file:
find_grant_ptes	gntdev.c	/^static int find_grant_ptes(pte_t *pte, pgtable_t token,$/;"	f	file:
find_grefs	gntalloc.c	/^static struct gntalloc_gref *find_grefs(struct gntalloc_file_private_data *priv,$/;"	f	file:
find_vfs	xen-pciback/pci_stub.c	/^static struct pcistub_device *find_vfs(const struct pci_dev *pdev)$/;"	f	file:
find_virq	events/events_base.c	/^static int find_virq(unsigned int virq, unsigned int cpu)$/;"	f	file:
find_watch	xenbus/xenbus_xs.c	/^static struct xenbus_watch *find_watch(const char *token)$/;"	f	file:
flag	manage.c	/^	bool flag;$/;"	m	struct:shutdown_handler	file:
flags	events/events_internal.h	/^			unsigned char flags;$/;"	m	struct:irq_info::__anon12::__anon13
flags	gntalloc.c	/^	uint16_t flags:2;     \/* Bits 12-13: Unmap notification flags *\/$/;"	m	struct:notify_info	file:
flags	gntdev.c	/^	int flags;$/;"	m	struct:grant_map	file:
flags	gntdev.c	/^	int flags;$/;"	m	struct:unmap_notify	file:
flags	pcpu.c	/^	uint32_t flags;$/;"	m	struct:pcpu	file:
flags	xen-pciback/pciback.h	/^	unsigned long flags;$/;"	m	struct:xen_pcibk_device
frame_list	balloon.c	/^static xen_pfn_t frame_list[PAGE_SIZE \/ sizeof(xen_pfn_t)];$/;"	v	file:
free	xen-pciback/pciback.h	/^	void (*free)(struct xen_pcibk_device *pdev);$/;"	m	struct:xen_pcibk_backend
free_acpi_perf_data	xen-acpi-processor.c	/^static void free_acpi_perf_data(void)$/;"	f	file:
free_otherend_details	xenbus/xenbus_probe.c	/^static void free_otherend_details(struct xenbus_device *dev)$/;"	f	file:
free_otherend_watch	xenbus/xenbus_probe.c	/^static void free_otherend_watch(struct xenbus_device *dev)$/;"	f	file:
free_page_list	privcmd.c	/^static void free_page_list(struct list_head *pages)$/;"	f	file:
free_pages_num	xen-scsiback.c	/^static int free_pages_num;$/;"	v	file:
free_pdev	xen-pciback/xenbus.c	/^static void free_pdev(struct xen_pcibk_device *pdev)$/;"	f	file:
free_unused_array_pages	events/events_fifo.c	/^static void free_unused_array_pages(void)$/;"	f	file:
free_watch_adapter	xenbus/xenbus_dev_frontend.c	/^static void free_watch_adapter(struct watch_adapter *watch)$/;"	f	file:
free_xenballooned_pages	balloon.c	/^EXPORT_SYMBOL(free_xenballooned_pages);$/;"	v
free_xenballooned_pages	balloon.c	/^void free_xenballooned_pages(int nr_pages, struct page **pages)$/;"	f
freeable_maps	gntdev.c	/^	struct list_head freeable_maps;$/;"	m	struct:gntdev_priv	typeref:struct:gntdev_priv::list_head	file:
frontend_bus_id	xenbus/xenbus_probe_frontend.c	/^static int frontend_bus_id(char bus_id[XEN_BUS_ID_SIZE], const char *nodename)$/;"	f	file:
frontend_changed	xenbus/xenbus_probe_backend.c	/^static void frontend_changed(struct xenbus_watch *watch,$/;"	f	file:
frontend_changed	xenbus/xenbus_probe_frontend.c	/^static void frontend_changed(struct xenbus_watch *watch,$/;"	f	file:
frontend_probe_and_watch	xenbus/xenbus_probe_frontend.c	/^static int frontend_probe_and_watch(struct notifier_block *notifier,$/;"	f	file:
frontswap	tmem.c	47;"	d	file:
frontswap_inertia_counter	xen-selfballoon.c	/^static unsigned long frontswap_inertia_counter;$/;"	v	file:
frontswap_selfshrink	xen-selfballoon.c	/^static void frontswap_selfshrink(void)$/;"	f	file:
g_mi	mcelog.c	/^static struct mc_info g_mi;$/;"	v	typeref:struct:mc_info	file:
g_physinfo	mcelog.c	/^static struct mcinfo_logical_cpu *g_physinfo;$/;"	v	typeref:struct:mcinfo_logical_cpu	file:
gather_array	privcmd.c	/^static int gather_array(struct list_head *pagelist,$/;"	f	file:
get	xen-pciback/pciback.h	/^	struct pci_dev *(*get)(struct xen_pcibk_device *pdev,$/;"	m	struct:xen_pcibk_backend	typeref:struct:xen_pcibk_backend::get
get64	time.c	/^static u64 get64(const u64 *p)$/;"	f	file:
get_bus_id	xenbus/xenbus_probe.h	/^	int (*get_bus_id)(char bus_id[XEN_BUS_ID_SIZE], const char *nodename);$/;"	m	struct:xen_bus_type
get_callback_via	platform-pci.c	/^static uint64_t get_callback_via(struct pci_dev *pdev)$/;"	f	file:
get_error	xenbus/xenbus_xs.c	/^static int get_error(const char *errorstring)$/;"	f	file:
get_evtchn_to_irq	events/events_base.c	/^int get_evtchn_to_irq(unsigned evtchn)$/;"	f
get_free_entries	grant-table.c	/^static int get_free_entries(unsigned count)$/;"	f	file:
get_free_page	xen-scsiback.c	/^static int get_free_page(struct page **page)$/;"	f	file:
get_input_chunk	xenbus/xenbus_comms.c	/^static const void *get_input_chunk(XENSTORE_RING_IDX cons,$/;"	f	file:
get_mask	xen-pciback/conf_space.c	/^static inline u32 get_mask(int size)$/;"	f	file:
get_max_acpi_id	xen-acpi-processor.c	/^static unsigned int __init get_max_acpi_id(void)$/;"	f	file:
get_output_chunk	xenbus/xenbus_comms.c	/^static void *get_output_chunk(XENSTORE_RING_IDX cons,$/;"	f	file:
get_pcpu	pcpu.c	/^static struct pcpu *get_pcpu(uint32_t cpu_id)$/;"	f	file:
global_error	privcmd.c	/^	int global_error;$/;"	m	struct:mmap_batch_state	file:
gntalloc_exit	gntalloc.c	/^module_exit(gntalloc_exit);$/;"	v
gntalloc_exit	gntalloc.c	/^static void __exit gntalloc_exit(void)$/;"	f	file:
gntalloc_file_private_data	gntalloc.c	/^struct gntalloc_file_private_data {$/;"	s	file:
gntalloc_fops	gntalloc.c	/^static const struct file_operations gntalloc_fops = {$/;"	v	typeref:struct:file_operations	file:
gntalloc_gref	gntalloc.c	/^struct gntalloc_gref {$/;"	s	file:
gntalloc_init	gntalloc.c	/^module_init(gntalloc_init);$/;"	v
gntalloc_init	gntalloc.c	/^static int __init gntalloc_init(void)$/;"	f	file:
gntalloc_ioctl	gntalloc.c	/^static long gntalloc_ioctl(struct file *filp, unsigned int cmd,$/;"	f	file:
gntalloc_ioctl_alloc	gntalloc.c	/^static long gntalloc_ioctl_alloc(struct gntalloc_file_private_data *priv,$/;"	f	file:
gntalloc_ioctl_dealloc	gntalloc.c	/^static long gntalloc_ioctl_dealloc(struct gntalloc_file_private_data *priv,$/;"	f	file:
gntalloc_ioctl_unmap_notify	gntalloc.c	/^static long gntalloc_ioctl_unmap_notify(struct gntalloc_file_private_data *priv,$/;"	f	file:
gntalloc_miscdev	gntalloc.c	/^static struct miscdevice gntalloc_miscdev = {$/;"	v	typeref:struct:miscdevice	file:
gntalloc_mmap	gntalloc.c	/^static int gntalloc_mmap(struct file *filp, struct vm_area_struct *vma)$/;"	f	file:
gntalloc_open	gntalloc.c	/^static int gntalloc_open(struct inode *inode, struct file *filp)$/;"	f	file:
gntalloc_release	gntalloc.c	/^static int gntalloc_release(struct inode *inode, struct file *filp)$/;"	f	file:
gntalloc_vma_close	gntalloc.c	/^static void gntalloc_vma_close(struct vm_area_struct *vma)$/;"	f	file:
gntalloc_vma_open	gntalloc.c	/^static void gntalloc_vma_open(struct vm_area_struct *vma)$/;"	f	file:
gntalloc_vma_private_data	gntalloc.c	/^struct gntalloc_vma_private_data {$/;"	s	file:
gntalloc_vmops	gntalloc.c	/^static const struct vm_operations_struct gntalloc_vmops = {$/;"	v	typeref:struct:vm_operations_struct	file:
gntdev_add_map	gntdev.c	/^static void gntdev_add_map(struct gntdev_priv *priv, struct grant_map *add)$/;"	f	file:
gntdev_alloc_map	gntdev.c	/^static struct grant_map *gntdev_alloc_map(struct gntdev_priv *priv, int count)$/;"	f	file:
gntdev_copy	gntdev.c	/^static int gntdev_copy(struct gntdev_copy_batch *batch)$/;"	f	file:
gntdev_copy_batch	gntdev.c	/^struct gntdev_copy_batch {$/;"	s	file:
gntdev_exit	gntdev.c	/^module_exit(gntdev_exit);$/;"	v
gntdev_exit	gntdev.c	/^static void __exit gntdev_exit(void)$/;"	f	file:
gntdev_find_map_index	gntdev.c	/^static struct grant_map *gntdev_find_map_index(struct gntdev_priv *priv,$/;"	f	file:
gntdev_fops	gntdev.c	/^static const struct file_operations gntdev_fops = {$/;"	v	typeref:struct:file_operations	file:
gntdev_free_map	gntdev.c	/^static void gntdev_free_map(struct grant_map *map)$/;"	f	file:
gntdev_get_page	gntdev.c	/^static int gntdev_get_page(struct gntdev_copy_batch *batch, void __user *virt,$/;"	f	file:
gntdev_grant_copy_seg	gntdev.c	/^static int gntdev_grant_copy_seg(struct gntdev_copy_batch *batch,$/;"	f	file:
gntdev_init	gntdev.c	/^module_init(gntdev_init);$/;"	v
gntdev_init	gntdev.c	/^static int __init gntdev_init(void)$/;"	f	file:
gntdev_ioctl	gntdev.c	/^static long gntdev_ioctl(struct file *flip,$/;"	f	file:
gntdev_ioctl_get_offset_for_vaddr	gntdev.c	/^static long gntdev_ioctl_get_offset_for_vaddr(struct gntdev_priv *priv,$/;"	f	file:
gntdev_ioctl_grant_copy	gntdev.c	/^static long gntdev_ioctl_grant_copy(struct gntdev_priv *priv, void __user *u)$/;"	f	file:
gntdev_ioctl_map_grant_ref	gntdev.c	/^static long gntdev_ioctl_map_grant_ref(struct gntdev_priv *priv,$/;"	f	file:
gntdev_ioctl_notify	gntdev.c	/^static long gntdev_ioctl_notify(struct gntdev_priv *priv, void __user *u)$/;"	f	file:
gntdev_ioctl_unmap_grant_ref	gntdev.c	/^static long gntdev_ioctl_unmap_grant_ref(struct gntdev_priv *priv,$/;"	f	file:
gntdev_miscdev	gntdev.c	/^static struct miscdevice gntdev_miscdev = {$/;"	v	typeref:struct:miscdevice	file:
gntdev_mmap	gntdev.c	/^static int gntdev_mmap(struct file *flip, struct vm_area_struct *vma)$/;"	f	file:
gntdev_mmu_ops	gntdev.c	/^static const struct mmu_notifier_ops gntdev_mmu_ops = {$/;"	v	typeref:struct:mmu_notifier_ops	file:
gntdev_open	gntdev.c	/^static int gntdev_open(struct inode *inode, struct file *flip)$/;"	f	file:
gntdev_print_maps	gntdev.c	/^static void gntdev_print_maps(struct gntdev_priv *priv,$/;"	f	file:
gntdev_priv	gntdev.c	/^struct gntdev_priv {$/;"	s	file:
gntdev_put_map	gntdev.c	/^static void gntdev_put_map(struct gntdev_priv *priv, struct grant_map *map)$/;"	f	file:
gntdev_put_pages	gntdev.c	/^static void gntdev_put_pages(struct gntdev_copy_batch *batch)$/;"	f	file:
gntdev_release	gntdev.c	/^static int gntdev_release(struct inode *inode, struct file *flip)$/;"	f	file:
gntdev_vma_close	gntdev.c	/^static void gntdev_vma_close(struct vm_area_struct *vma)$/;"	f	file:
gntdev_vma_find_special_page	gntdev.c	/^static struct page *gntdev_vma_find_special_page(struct vm_area_struct *vma,$/;"	f	file:
gntdev_vma_open	gntdev.c	/^static void gntdev_vma_open(struct vm_area_struct *vma)$/;"	f	file:
gntdev_vmops	gntdev.c	/^static const struct vm_operations_struct gntdev_vmops = {$/;"	v	typeref:struct:vm_operations_struct	file:
gnttab_add_deferred	grant-table.c	/^static void gnttab_add_deferred(grant_ref_t ref, bool readonly,$/;"	f	file:
gnttab_alloc_grant_references	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_alloc_grant_references);$/;"	v
gnttab_alloc_grant_references	grant-table.c	/^int gnttab_alloc_grant_references(u16 count, grant_ref_t *head)$/;"	f
gnttab_alloc_pages	grant-table.c	/^EXPORT_SYMBOL(gnttab_alloc_pages);$/;"	v
gnttab_alloc_pages	grant-table.c	/^int gnttab_alloc_pages(int nr_pages, struct page **pages)$/;"	f
gnttab_batch_copy	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_batch_copy);$/;"	v
gnttab_batch_copy	grant-table.c	/^void gnttab_batch_copy(struct gnttab_copy *batch, unsigned count)$/;"	f
gnttab_batch_map	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_batch_map);$/;"	v
gnttab_batch_map	grant-table.c	/^void gnttab_batch_map(struct gnttab_map_grant_ref *batch, unsigned count)$/;"	f
gnttab_cancel_free_callback	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_cancel_free_callback);$/;"	v
gnttab_cancel_free_callback	grant-table.c	/^void gnttab_cancel_free_callback(struct gnttab_free_callback *callback)$/;"	f
gnttab_claim_grant_reference	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_claim_grant_reference);$/;"	v
gnttab_claim_grant_reference	grant-table.c	/^int gnttab_claim_grant_reference(grant_ref_t *private_head)$/;"	f
gnttab_empty_grant_references	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_empty_grant_references);$/;"	v
gnttab_empty_grant_references	grant-table.c	/^int gnttab_empty_grant_references(const grant_ref_t *private_head)$/;"	f
gnttab_end_foreign_access	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_end_foreign_access);$/;"	v
gnttab_end_foreign_access	grant-table.c	/^void gnttab_end_foreign_access(grant_ref_t ref, int readonly,$/;"	f
gnttab_end_foreign_access_ref	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_end_foreign_access_ref);$/;"	v
gnttab_end_foreign_access_ref	grant-table.c	/^int gnttab_end_foreign_access_ref(grant_ref_t ref, int readonly)$/;"	f
gnttab_end_foreign_access_ref_v1	grant-table.c	/^static int gnttab_end_foreign_access_ref_v1(grant_ref_t ref, int readonly)$/;"	f	file:
gnttab_end_foreign_transfer	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_end_foreign_transfer);$/;"	v
gnttab_end_foreign_transfer	grant-table.c	/^unsigned long gnttab_end_foreign_transfer(grant_ref_t ref)$/;"	f
gnttab_end_foreign_transfer_ref	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_end_foreign_transfer_ref);$/;"	v
gnttab_end_foreign_transfer_ref	grant-table.c	/^unsigned long gnttab_end_foreign_transfer_ref(grant_ref_t ref)$/;"	f
gnttab_end_foreign_transfer_ref_v1	grant-table.c	/^static unsigned long gnttab_end_foreign_transfer_ref_v1(grant_ref_t ref)$/;"	f	file:
gnttab_entry	grant-table.c	146;"	d	file:
gnttab_expand	grant-table.c	/^static int gnttab_expand(unsigned int req_entries)$/;"	f	file:
gnttab_foreach_grant	grant-table.c	/^void gnttab_foreach_grant(struct page **pages,$/;"	f
gnttab_foreach_grant_in_range	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_foreach_grant_in_range);$/;"	v
gnttab_foreach_grant_in_range	grant-table.c	/^void gnttab_foreach_grant_in_range(struct page *page,$/;"	f
gnttab_free_auto_xlat_frames	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_free_auto_xlat_frames);$/;"	v
gnttab_free_auto_xlat_frames	grant-table.c	/^void gnttab_free_auto_xlat_frames(void)$/;"	f
gnttab_free_callback_list	grant-table.c	/^static struct gnttab_free_callback *gnttab_free_callback_list;$/;"	v	typeref:struct:gnttab_free_callback	file:
gnttab_free_count	grant-table.c	/^static int gnttab_free_count;$/;"	v	file:
gnttab_free_grant_reference	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_free_grant_reference);$/;"	v
gnttab_free_grant_reference	grant-table.c	/^void gnttab_free_grant_reference(grant_ref_t ref)$/;"	f
gnttab_free_grant_references	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_free_grant_references);$/;"	v
gnttab_free_grant_references	grant-table.c	/^void gnttab_free_grant_references(grant_ref_t head)$/;"	f
gnttab_free_head	grant-table.c	/^static grant_ref_t gnttab_free_head;$/;"	v	file:
gnttab_free_pages	grant-table.c	/^EXPORT_SYMBOL(gnttab_free_pages);$/;"	v
gnttab_free_pages	grant-table.c	/^void gnttab_free_pages(int nr_pages, struct page **pages)$/;"	f
gnttab_grant_foreign_access	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_grant_foreign_access);$/;"	v
gnttab_grant_foreign_access	grant-table.c	/^int gnttab_grant_foreign_access(domid_t domid, unsigned long frame,$/;"	f
gnttab_grant_foreign_access_ref	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_grant_foreign_access_ref);$/;"	v
gnttab_grant_foreign_access_ref	grant-table.c	/^void gnttab_grant_foreign_access_ref(grant_ref_t ref, domid_t domid,$/;"	f
gnttab_grant_foreign_transfer	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_grant_foreign_transfer);$/;"	v
gnttab_grant_foreign_transfer	grant-table.c	/^int gnttab_grant_foreign_transfer(domid_t domid, unsigned long pfn)$/;"	f
gnttab_grant_foreign_transfer_ref	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_grant_foreign_transfer_ref);$/;"	v
gnttab_grant_foreign_transfer_ref	grant-table.c	/^void gnttab_grant_foreign_transfer_ref(grant_ref_t ref, domid_t domid,$/;"	f
gnttab_handle_deferred	grant-table.c	/^static void gnttab_handle_deferred(unsigned long unused)$/;"	f	file:
gnttab_init	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_init);$/;"	v
gnttab_init	grant-table.c	/^int gnttab_init(void)$/;"	f
gnttab_interface	grant-table.c	/^static const struct gnttab_ops *gnttab_interface;$/;"	v	typeref:struct:gnttab_ops	file:
gnttab_list	grant-table.c	/^static grant_ref_t **gnttab_list;$/;"	v	file:
gnttab_map	grant-table.c	/^static int gnttab_map(unsigned int start_idx, unsigned int end_idx)$/;"	f	file:
gnttab_map_frames_v1	grant-table.c	/^static int gnttab_map_frames_v1(xen_pfn_t *frames, unsigned int nr_gframes)$/;"	f	file:
gnttab_map_refs	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_map_refs);$/;"	v
gnttab_map_refs	grant-table.c	/^int gnttab_map_refs(struct gnttab_map_grant_ref *map_ops,$/;"	f
gnttab_max_grant_frames	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_max_grant_frames);$/;"	v
gnttab_max_grant_frames	grant-table.c	/^unsigned int gnttab_max_grant_frames(void)$/;"	f
gnttab_ops	grant-table.c	/^struct gnttab_ops {$/;"	s	file:
gnttab_query_foreign_access	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_query_foreign_access);$/;"	v
gnttab_query_foreign_access	grant-table.c	/^int gnttab_query_foreign_access(grant_ref_t ref)$/;"	f
gnttab_query_foreign_access_v1	grant-table.c	/^static int gnttab_query_foreign_access_v1(grant_ref_t ref)$/;"	f	file:
gnttab_release_grant_reference	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_release_grant_reference);$/;"	v
gnttab_release_grant_reference	grant-table.c	/^void gnttab_release_grant_reference(grant_ref_t *private_head,$/;"	f
gnttab_request_free_callback	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_request_free_callback);$/;"	v
gnttab_request_free_callback	grant-table.c	/^void gnttab_request_free_callback(struct gnttab_free_callback *callback,$/;"	f
gnttab_request_version	grant-table.c	/^static void gnttab_request_version(void)$/;"	f	file:
gnttab_resume	grant-table.c	/^int gnttab_resume(void)$/;"	f
gnttab_retry_eagain_gop	grant-table.c	/^gnttab_retry_eagain_gop(unsigned int cmd, void *gop, int16_t *status,$/;"	f	file:
gnttab_setup	grant-table.c	/^static int gnttab_setup(void)$/;"	f	file:
gnttab_setup_auto_xlat_frames	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_setup_auto_xlat_frames);$/;"	v
gnttab_setup_auto_xlat_frames	grant-table.c	/^int gnttab_setup_auto_xlat_frames(phys_addr_t addr)$/;"	f
gnttab_shared	grant-table.c	/^} gnttab_shared;$/;"	v	typeref:union:__anon14	file:
gnttab_suspend	grant-table.c	/^int gnttab_suspend(void)$/;"	f
gnttab_unmap_frames_v1	grant-table.c	/^static void gnttab_unmap_frames_v1(void)$/;"	f	file:
gnttab_unmap_refs	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_unmap_refs);$/;"	v
gnttab_unmap_refs	grant-table.c	/^int gnttab_unmap_refs(struct gnttab_unmap_grant_ref *unmap_ops,$/;"	f
gnttab_unmap_refs_async	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_unmap_refs_async);$/;"	v
gnttab_unmap_refs_async	grant-table.c	/^void gnttab_unmap_refs_async(struct gntab_unmap_queue_data* item)$/;"	f
gnttab_unmap_refs_sync	grant-table.c	/^EXPORT_SYMBOL_GPL(gnttab_unmap_refs_sync);$/;"	v
gnttab_unmap_refs_sync	grant-table.c	/^int gnttab_unmap_refs_sync(struct gntab_unmap_queue_data *item)$/;"	f
gnttab_unmap_work	grant-table.c	/^static void gnttab_unmap_work(struct work_struct *work)$/;"	f	file:
gnttab_update_entry_v1	grant-table.c	/^static void gnttab_update_entry_v1(grant_ref_t ref, domid_t domid,$/;"	f	file:
gnttab_v1_ops	grant-table.c	/^static const struct gnttab_ops gnttab_v1_ops = {$/;"	v	typeref:struct:gnttab_ops	file:
grant_handles	xen-scsiback.c	/^	grant_handle_t grant_handles[VSCSI_MAX_GRANTS];$/;"	m	struct:vscsibk_pend	file:
grant_map	gntdev.c	/^struct grant_map {$/;"	s	file:
grant_table_version	grant-table.c	/^static int grant_table_version;$/;"	v	file:
grants	gntdev.c	/^	struct ioctl_gntdev_grant_ref *grants;$/;"	m	struct:grant_map	typeref:struct:grant_map::ioctl_gntdev_grant_ref	file:
gref	gntalloc.c	/^	struct gntalloc_gref *gref;$/;"	m	struct:gntalloc_vma_private_data	typeref:struct:gntalloc_vma_private_data::gntalloc_gref	file:
gref_id	gntalloc.c	/^	grant_ref_t gref_id;         \/* The grant reference number *\/$/;"	m	struct:gntalloc_gref	file:
gref_size	gntalloc.c	/^static int gref_size;$/;"	v	file:
grefs_per_grant_frame	grant-table.c	/^static int grefs_per_grant_frame;$/;"	v	file:
grow_gnttab_list	grant-table.c	/^static int grow_gnttab_list(unsigned int more_frames)$/;"	f	file:
gsi	events/events_internal.h	/^			unsigned short gsi;$/;"	m	struct:irq_info::__anon12::__anon13
h_errs	xlate_mmu.c	/^	int h_errs[XEN_PFN_PER_PAGE];$/;"	m	struct:remap_data	file:
h_gpfns	xlate_mmu.c	/^	xen_pfn_t h_gpfns[XEN_PFN_PER_PAGE];$/;"	m	struct:remap_data	file:
h_idxs	xlate_mmu.c	/^	xen_ulong_t h_idxs[XEN_PFN_PER_PAGE];$/;"	m	struct:remap_data	file:
h_iter	xlate_mmu.c	/^	int h_iter;	\/* Iterator *\/$/;"	m	struct:remap_data	file:
handle	xenbus/xenbus_dev_frontend.c	/^	struct xenbus_transaction handle;$/;"	m	struct:xenbus_transaction_holder	typeref:struct:xenbus_transaction_holder::xenbus_transaction	file:
handle	xenbus/xenbus_xs.c	/^			struct xenbus_watch *handle;$/;"	m	struct:xs_stored_msg::__anon5::__anon7	typeref:struct:xs_stored_msg::__anon5::__anon7::xenbus_watch	file:
handle_events	events/events_internal.h	/^	void (*handle_events)(unsigned cpu);$/;"	m	struct:evtchn_ops
handle_irq_for_port	events/events_fifo.c	/^static void handle_irq_for_port(unsigned port)$/;"	f	file:
handle_vcpu_hotplug_event	cpu_hotplug.c	/^static void handle_vcpu_hotplug_event(struct xenbus_watch *watch,$/;"	f	file:
handled	xen-pciback/pciback.h	/^	unsigned long handled;$/;"	m	struct:xen_pcibk_dev_data
handles	xenbus/xenbus_client.c	/^	grant_handle_t handles[XENBUS_MAX_RING_GRANTS];$/;"	m	struct:xenbus_map_node	file:
hdr	xenbus/xenbus_xs.c	/^	struct xsd_sockmsg hdr;$/;"	m	struct:xs_stored_msg	typeref:struct:xs_stored_msg::xsd_sockmsg	file:
head	events/events_fifo.c	/^	uint32_t head[EVTCHN_FIFO_MAX_QUEUES];$/;"	m	struct:evtchn_fifo_queue	file:
header_0	xen-pciback/conf_space_header.c	/^static const struct config_field header_0[] = {$/;"	v	typeref:struct:config_field	file:
header_1	xen-pciback/conf_space_header.c	/^static const struct config_field header_1[] = {$/;"	v	typeref:struct:config_field	file:
header_common	xen-pciback/conf_space_header.c	/^static const struct config_field header_common[] = {$/;"	v	typeref:struct:config_field	file:
hst	xen-scsiback.c	/^	unsigned int hst;		\/* host    *\/$/;"	m	struct:ids_tuple	file:
hvm	xenbus/xenbus_client.c	/^		} hvm;$/;"	m	union:xenbus_map_node::__anon2	typeref:struct:xenbus_map_node::__anon2::__anon4	file:
hyp_attr_data	sys-hypervisor.c	/^	void *hyp_attr_data;$/;"	m	struct:hyp_sysfs_attr	file:
hyp_sysfs_attr	sys-hypervisor.c	/^struct hyp_sysfs_attr {$/;"	s	file:
hyp_sysfs_kobj_type	sys-hypervisor.c	/^static struct kobj_type hyp_sysfs_kobj_type = {$/;"	v	typeref:struct:kobj_type	file:
hyp_sysfs_ops	sys-hypervisor.c	/^static const struct sysfs_ops hyp_sysfs_ops = {$/;"	v	typeref:struct:sysfs_ops	file:
hyp_sysfs_show	sys-hypervisor.c	/^static ssize_t hyp_sysfs_show(struct kobject *kobj,$/;"	f	file:
hyp_sysfs_store	sys-hypervisor.c	/^static ssize_t hyp_sysfs_store(struct kobject *kobj,$/;"	f	file:
hyper_sysfs_init	sys-hypervisor.c	/^device_initcall(hyper_sysfs_init);$/;"	v
hyper_sysfs_init	sys-hypervisor.c	/^static int __init hyper_sysfs_init(void)$/;"	f	file:
hypervisor_subsys_init	sys-hypervisor.c	/^device_initcall(hypervisor_subsys_init);$/;"	v
hypervisor_subsys_init	sys-hypervisor.c	/^static int __init hypervisor_subsys_init(void)$/;"	f	file:
ids_tuple	xen-scsiback.c	/^struct ids_tuple {$/;"	s	file:
idx	xenbus/xenbus_client.c	/^	unsigned int idx;$/;"	m	struct:map_ring_valloc_hvm	file:
idx	xenbus/xenbus_client.c	/^	unsigned int idx;$/;"	m	struct:unmap_ring_vfree_hvm	file:
idx	xlate_mmu.c	/^	unsigned int idx;$/;"	m	struct:map_balloon_pages	file:
increase_reservation	balloon.c	/^static enum bp_state increase_reservation(unsigned long nr_pages)$/;"	f	file:
index	gntalloc.c	/^	uint64_t index;$/;"	m	struct:gntalloc_file_private_data	file:
index	gntdev.c	/^	int index;$/;"	m	struct:grant_map	file:
index	privcmd.c	/^	int index;$/;"	m	struct:mmap_batch_state	file:
index	xlate_mmu.c	/^	int index;$/;"	m	struct:remap_data	file:
info	xen-scsiback.c	/^	struct vscsibk_info *info;$/;"	m	struct:vscsibk_pend	typeref:struct:vscsibk_pend::vscsibk_info	file:
info	xlate_mmu.c	/^	struct xen_remap_gfn_info *info;$/;"	m	struct:remap_data	typeref:struct:remap_data::xen_remap_gfn_info	file:
info_for_irq	events/events_base.c	/^struct irq_info *info_for_irq(unsigned irq)$/;"	f
info_list	xen-scsiback.c	/^	struct list_head info_list;$/;"	m	struct:scsiback_tpg	typeref:struct:scsiback_tpg::list_head	file:
init	xen-pciback/conf_space.h	/^	conf_field_init init;$/;"	m	struct:config_field
init	xen-pciback/pciback.h	/^	int (*init)(struct xen_pcibk_device *pdev);$/;"	m	struct:xen_pcibk_backend
init_array_page	events/events_fifo.c	/^static void init_array_page(event_word_t *array_page)$/;"	f	file:
init_control_block	events/events_fifo.c	/^static int init_control_block(int cpu,$/;"	f	file:
initialize_devices	xen-pciback/pci_stub.c	/^static int initialize_devices;$/;"	v	file:
interrupt_read	xen-pciback/conf_space_header.c	/^static int interrupt_read(struct pci_dev *dev, int offset, u8 * value,$/;"	f	file:
ipi	events/events_internal.h	/^		enum ipi_vector ipi;$/;"	m	union:irq_info::__anon12	typeref:enum:irq_info::__anon12::ipi_vector
ipi_from_irq	events/events_base.c	/^static enum ipi_vector ipi_from_irq(unsigned irq)$/;"	f	file:
irq	events/events_internal.h	/^	unsigned irq;$/;"	m	struct:irq_info
irq	xen-pciback/pciback.h	/^	unsigned int irq; \/* Saved in case device transitions to MSI\/MSI-X *\/$/;"	m	struct:xen_pcibk_dev_data
irq	xen-scsiback.c	/^	unsigned int irq;$/;"	m	struct:vscsibk_info	file:
irq_from_evtchn	events/events_base.c	/^EXPORT_SYMBOL_GPL(irq_from_evtchn);$/;"	v
irq_from_evtchn	events/events_base.c	/^unsigned irq_from_evtchn(unsigned int evtchn)$/;"	f
irq_from_virq	events/events_base.c	/^int irq_from_virq(unsigned int cpu, unsigned int virq)$/;"	f
irq_info	events/events_internal.h	/^struct irq_info {$/;"	s
irq_name	xen-pciback/pciback.h	/^	char irq_name[0]; \/* xen-pcibk[000:04:00.0] *\/$/;"	m	struct:xen_pcibk_dev_data
is_device_connecting	xenbus/xenbus_probe_frontend.c	/^static int is_device_connecting(struct device *dev, void *data, bool ignore_nonessential)$/;"	f	file:
is_enable_cmd	xen-pciback/conf_space_header.c	24;"	d	file:
is_mapped_fn	privcmd.c	/^static int is_mapped_fn(pte_t *pte, struct page *pmd_page,$/;"	f	file:
is_master_cmd	xen-pciback/conf_space_header.c	25;"	d	file:
is_memory_device	xen-acpi-memhotplug.c	/^static acpi_status is_memory_device(acpi_handle handle)$/;"	f	file:
is_pending	events/events_internal.h	/^	bool (*is_pending)(unsigned port);$/;"	m	struct:evtchn_ops
is_processor_device	xen-acpi-cpuhotplug.c	/^static acpi_status is_processor_device(acpi_handle handle)$/;"	f	file:
is_processor_present	xen-acpi-cpuhotplug.c	/^static int is_processor_present(acpi_handle handle)$/;"	f	file:
is_xen_swiotlb_buffer	swiotlb-xen.c	/^static int is_xen_swiotlb_buffer(dma_addr_t dma_addr)$/;"	f	file:
isr_on	xen-pciback/pciback.h	/^	unsigned int isr_on:1; \/* Whether the IRQ handler is installed. *\/$/;"	m	struct:xen_pcibk_dev_data
iswiz	tmem.c	269;"	d	file:
join	xenbus/xenbus_xs.c	/^static char *join(const char *dir, const char *name)$/;"	f	file:
kill_domain_by_device	xen-pciback/pci_stub.c	/^static void kill_domain_by_device(struct pcistub_device *psdev)$/;"	f	file:
kmap_ops	gntdev.c	/^	struct gnttab_map_grant_ref   *kmap_ops;$/;"	m	struct:grant_map	typeref:struct:grant_map::gnttab_map_grant_ref	file:
kref	xen-pciback/pci_stub.c	/^	struct kref kref;$/;"	m	struct:pcistub_device	typeref:struct:pcistub_device::kref	file:
kref	xen-scsiback.c	/^	struct kref kref;$/;"	m	struct:v2p_entry	typeref:struct:v2p_entry::kref	file:
kunmap_ops	gntdev.c	/^	struct gnttab_unmap_grant_ref *kunmap_ops;$/;"	m	struct:grant_map	typeref:struct:grant_map::gnttab_unmap_grant_ref	file:
l	xen-scsiback.c	/^	struct list_head l;$/;"	m	struct:v2p_entry	typeref:struct:v2p_entry::list_head	file:
len	xenbus/xenbus_dev_frontend.c	/^	unsigned int len;$/;"	m	struct:read_buffer	file:
len	xenbus/xenbus_dev_frontend.c	/^	unsigned int len;$/;"	m	struct:xenbus_file_priv	file:
len_val	xen-pciback/conf_space_header.c	/^	u32 len_val;$/;"	m	struct:pci_bar_info	file:
length	xen-acpi-memhotplug.c	/^	u64 length;		\/* Memory Range length *\/$/;"	m	struct:acpi_memory_info	file:
levels	xenbus/xenbus_probe.h	/^	unsigned int levels;$/;"	m	struct:xen_bus_type
limit	gntalloc.c	/^static int limit = 1024;$/;"	v	file:
limit	gntdev.c	/^static int limit = 1024*1024;$/;"	v	file:
list	events/events_internal.h	/^	struct list_head list;$/;"	m	struct:irq_info	typeref:struct:irq_info::list_head
list	gntalloc.c	/^	struct list_head list;$/;"	m	struct:gntalloc_file_private_data	typeref:struct:gntalloc_file_private_data::list_head	file:
list	grant-table.c	/^	struct list_head list;$/;"	m	struct:deferred_entry	typeref:struct:deferred_entry::list_head	file:
list	pcpu.c	/^	struct list_head list;$/;"	m	struct:pcpu	typeref:struct:pcpu::list_head	file:
list	xen-acpi-memhotplug.c	/^	struct list_head list;$/;"	m	struct:acpi_memory_info	typeref:struct:acpi_memory_info::list_head	file:
list	xen-pciback/conf_space.h	/^	struct list_head list;$/;"	m	struct:config_field	typeref:struct:config_field::list_head
list	xen-pciback/conf_space.h	/^	struct list_head list;$/;"	m	struct:config_field_entry	typeref:struct:config_field_entry::list_head
list	xen-pciback/pciback.h	/^	struct list_head list;$/;"	m	struct:pci_dev_entry	typeref:struct:pci_dev_entry::list_head
list	xenbus/xenbus_dev_frontend.c	/^	struct list_head list;$/;"	m	struct:read_buffer	typeref:struct:read_buffer::list_head	file:
list	xenbus/xenbus_dev_frontend.c	/^	struct list_head list;$/;"	m	struct:watch_adapter	typeref:struct:watch_adapter::list_head	file:
list	xenbus/xenbus_dev_frontend.c	/^	struct list_head list;$/;"	m	struct:xenbus_transaction_holder	typeref:struct:xenbus_transaction_holder::list_head	file:
list	xenbus/xenbus_xs.c	/^	struct list_head list;$/;"	m	struct:xs_stored_msg	typeref:struct:xs_stored_msg::list_head	file:
list_first	xen-pciback/vpci.c	/^static inline struct list_head *list_first(struct list_head *head)$/;"	f	file:
lock	gntdev.c	/^	struct mutex lock;$/;"	m	struct:gntdev_priv	typeref:struct:gntdev_priv::mutex	file:
lock	xen-pciback/passthrough.c	/^	struct mutex lock;$/;"	m	struct:passthrough_dev_data	typeref:struct:passthrough_dev_data::mutex	file:
lock	xen-pciback/pci_stub.c	/^	spinlock_t lock;$/;"	m	struct:pcistub_device	file:
lock	xen-pciback/vpci.c	/^	struct mutex lock;$/;"	m	struct:vpci_dev_data	typeref:struct:vpci_dev_data::mutex	file:
log_print_stat	xen-scsiback.c	/^static bool log_print_stat;$/;"	v	file:
lun	xen-scsiback.c	/^	unsigned int lun;		\/* LUN     *\/$/;"	m	struct:ids_tuple	file:
lun	xen-scsiback.c	/^	unsigned int lun;$/;"	m	struct:v2p_entry	file:
major	sys-hypervisor.c	/^HYPERVISOR_ATTR_RO(major);$/;"	v
major_show	sys-hypervisor.c	/^static ssize_t major_show(struct hyp_sysfs_attr *attr, char *buffer)$/;"	f	file:
map	xenbus/xenbus_client.c	/^	int (*map)(struct xenbus_device *dev,$/;"	m	struct:xenbus_ring_ops	file:
map_balloon_pages	xlate_mmu.c	/^struct map_balloon_pages {$/;"	s	file:
map_frames	grant-table.c	/^	int (*map_frames)(xen_pfn_t *frames, unsigned int nr_gframes);$/;"	m	struct:gnttab_ops	file:
map_grant_pages	gntdev.c	/^static int map_grant_pages(struct grant_map *map)$/;"	f	file:
map_ops	gntdev.c	/^	struct gnttab_map_grant_ref   *map_ops;$/;"	m	struct:grant_map	typeref:struct:grant_map::gnttab_map_grant_ref	file:
map_ring_valloc_hvm	xenbus/xenbus_client.c	/^struct map_ring_valloc_hvm$/;"	s	file:
mapped	xlate_mmu.c	/^	int mapped;$/;"	m	struct:remap_data	file:
maps	gntdev.c	/^	struct list_head maps;$/;"	m	struct:gntdev_priv	typeref:struct:gntdev_priv::list_head	file:
mask	events/events_internal.h	/^	void (*mask)(unsigned port);$/;"	m	struct:evtchn_ops
mask	xen-pciback/conf_space.h	/^	unsigned int mask;$/;"	m	struct:config_field
mask_ack_dynirq	events/events_base.c	/^static void mask_ack_dynirq(struct irq_data *data)$/;"	f	file:
mask_ack_pirq	events/events_base.c	/^static void mask_ack_pirq(struct irq_data *data)$/;"	f	file:
mask_evtchn	events/events_internal.h	/^static inline void mask_evtchn(unsigned port)$/;"	f
match_device	xenbus/xenbus_probe.c	/^match_device(const struct xenbus_device_id *arr, struct xenbus_device *dev)$/;"	f	file:
match_one_device	xen-pciback/conf_space_quirks.c	/^match_one_device(const struct pci_device_id *id, const struct pci_dev *dev)$/;"	f	file:
match_slot	xen-pciback/vpci.c	/^static inline int match_slot(struct pci_dev *l, struct pci_dev *r)$/;"	f	file:
max_channels	events/events_internal.h	/^	unsigned (*max_channels)(void);$/;"	m	struct:evtchn_ops
max_dma_bits	swiotlb-xen.c	/^static int max_dma_bits = 32;$/;"	v	file:
mc_queue_handle	mcelog.c	/^static int mc_queue_handle(uint32_t flags)$/;"	f	file:
memory_device_ids	xen-acpi-memhotplug.c	/^static const struct acpi_device_id memory_device_ids[] = {$/;"	v	typeref:struct:acpi_device_id	file:
memory_device_ids	xen-stub.c	/^static const struct acpi_device_id memory_device_ids[] = {$/;"	v	typeref:struct:acpi_device_id	file:
merge_value	xen-pciback/conf_space.c	/^static inline u32 merge_value(u32 val, u32 new_val, u32 new_val_mask,$/;"	f	file:
minor	sys-hypervisor.c	/^HYPERVISOR_ATTR_RO(minor);$/;"	v
minor_show	sys-hypervisor.c	/^static ssize_t minor_show(struct hyp_sysfs_attr *attr, char *buffer)$/;"	f	file:
mm	gntdev.c	/^	struct mm_struct *mm;$/;"	m	struct:gntdev_priv	typeref:struct:gntdev_priv::mm_struct	file:
mmap_batch_fn	privcmd.c	/^static int mmap_batch_fn(void *data, int nr, void *state)$/;"	f	file:
mmap_batch_state	privcmd.c	/^struct mmap_batch_state {$/;"	s	file:
mmap_gfn_range	privcmd.c	/^static int mmap_gfn_range(void *data, void *state)$/;"	f	file:
mmap_gfn_state	privcmd.c	/^struct mmap_gfn_state {$/;"	s	file:
mmap_return_error	privcmd.c	/^static int mmap_return_error(int err, struct mmap_batch_state *st)$/;"	f	file:
mmap_return_errors	privcmd.c	/^static int mmap_return_errors(void *data, int nr, void *state)$/;"	f	file:
mn	gntdev.c	/^	struct mmu_notifier mn;$/;"	m	struct:gntdev_priv	typeref:struct:gntdev_priv::mmu_notifier	file:
mn_invl_page	gntdev.c	/^static void mn_invl_page(struct mmu_notifier *mn,$/;"	f	file:
mn_invl_range_start	gntdev.c	/^static void mn_invl_range_start(struct mmu_notifier *mn,$/;"	f	file:
mn_release	gntdev.c	/^static void mn_release(struct mmu_notifier *mn,$/;"	f	file:
modalias_show	xenbus/xenbus_probe.c	/^static ssize_t modalias_show(struct device *dev,$/;"	f	file:
mode	sys-hypervisor.c	/^	uint32_t mode;$/;"	m	struct:pmu_mode	file:
msg	xenbus/xenbus_dev_frontend.c	/^		struct xsd_sockmsg msg;$/;"	m	union:xenbus_file_priv::__anon1	typeref:struct:xenbus_file_priv::__anon1::xsd_sockmsg	file:
msg	xenbus/xenbus_dev_frontend.c	/^	char msg[];$/;"	m	struct:read_buffer	file:
msgbuffer_mutex	xenbus/xenbus_dev_frontend.c	/^	struct mutex msgbuffer_mutex;$/;"	m	struct:xenbus_file_priv	typeref:struct:xenbus_file_priv::mutex	file:
n_grants	xen-scsiback.c	/^	uint16_t n_grants;	\/* SG pages and potentially SG list *\/$/;"	m	struct:vscsibk_pend	file:
n_sg	xen-scsiback.c	/^	uint16_t n_sg;		\/* real length of SG list *\/$/;"	m	struct:vscsibk_pend	file:
name	evtchn.c	/^	const char *name;$/;"	m	struct:per_user_data	file:
name	sys-hypervisor.c	/^	const char *name;$/;"	m	struct:pmu_mode	file:
name	xen-pciback/pciback.h	/^	const char *name;$/;"	m	struct:xen_pcibk_backend
name	xenfs/xensyms.c	/^	char *name;$/;"	m	struct:xensyms	file:
namelen	xenfs/xensyms.c	/^	uint32_t namelen;$/;"	m	struct:xensyms	file:
ncpus	mcelog.c	/^static uint32_t ncpus;$/;"	v	file:
next	gntdev.c	/^	struct list_head next;$/;"	m	struct:grant_map	typeref:struct:grant_map::list_head	file:
next	xenbus/xenbus_client.c	/^	struct list_head next;$/;"	m	struct:xenbus_map_node	typeref:struct:xenbus_map_node::list_head	file:
next_file	gntalloc.c	/^	struct list_head next_file;  \/* list entry file->list, if open *\/$/;"	m	struct:gntalloc_gref	typeref:struct:gntalloc_gref::list_head	file:
next_gref	gntalloc.c	/^	struct list_head next_gref;  \/* list entry gref_list *\/$/;"	m	struct:gntalloc_gref	typeref:struct:gntalloc_gref::list_head	file:
no_hypercall	xen-acpi-processor.c	/^static int no_hypercall;$/;"	v	file:
node	evtchn.c	/^	struct rb_node node;$/;"	m	struct:user_evtchn	typeref:struct:user_evtchn::rb_node	file:
nodename	xenbus/xenbus_probe.c	/^	const char *nodename;$/;"	m	struct:xb_find_info	file:
nodename_show	xenbus/xenbus_probe.c	/^static ssize_t nodename_show(struct device *dev,$/;"	f	file:
non_essential_device_connecting	xenbus/xenbus_probe_frontend.c	/^static int non_essential_device_connecting(struct device *dev, void *data)$/;"	f	file:
nostackp	Makefile	/^nostackp := $(call cc-option, -fno-stack-protector)$/;"	m
notify	gntalloc.c	/^	struct notify_info notify;   \/* Unmap notification *\/$/;"	m	struct:gntalloc_gref	typeref:struct:gntalloc_gref::notify_info	file:
notify	gntdev.c	/^	struct unmap_notify notify;$/;"	m	struct:grant_map	typeref:struct:grant_map::unmap_notify	file:
notify_info	gntalloc.c	/^struct notify_info {$/;"	s	file:
notify_remote_via_irq	events/events_base.c	/^EXPORT_SYMBOL_GPL(notify_remote_via_irq);$/;"	v
notify_remote_via_irq	events/events_base.c	/^void notify_remote_via_irq(int irq)$/;"	f
nr_acpi_bits	xen-acpi-processor.c	/^static unsigned int nr_acpi_bits;$/;"	v	file:
nr_channels	events/events_internal.h	/^	unsigned (*nr_channels)(void);$/;"	m	struct:evtchn_ops
nr_evtchns	evtchn.c	/^	unsigned int nr_evtchns;$/;"	m	struct:per_user_data	file:
nr_fgfn	xlate_mmu.c	/^	int nr_fgfn; \/* Number of foreign gfn left to map *\/$/;"	m	struct:remap_data	file:
nr_grant_frames	grant-table.c	/^static unsigned int nr_grant_frames;$/;"	v	file:
nr_handles	xenbus/xenbus_client.c	/^	unsigned int   nr_handles;$/;"	m	struct:xenbus_map_node	file:
nr_ops	gntdev.c	/^	unsigned int nr_ops;$/;"	m	struct:gntdev_copy_batch	file:
nr_pages	gntdev.c	/^	unsigned int nr_pages;$/;"	m	struct:gntdev_copy_batch	file:
nr_unreplied_reqs	xen-scsiback.c	/^	atomic_t nr_unreplied_reqs;$/;"	m	struct:vscsibk_info	file:
offset	xen-pciback/conf_space.h	/^	unsigned int offset;$/;"	m	struct:config_field
oid	tmem.c	/^	u64 oid[3];$/;"	m	struct:tmem_oid	file:
one	balloon.c	/^static int one = 1;$/;"	v	file:
op	xen-pciback/pciback.h	/^	struct xen_pci_op op;$/;"	m	struct:xen_pcibk_device	typeref:struct:xen_pcibk_device::xen_pci_op
op	xenfs/xensyms.c	/^	struct xen_platform_op op;$/;"	m	struct:xensyms	typeref:struct:xensyms::xen_platform_op	file:
op_work	xen-pciback/pciback.h	/^	struct work_struct op_work;$/;"	m	struct:xen_pcibk_device	typeref:struct:xen_pcibk_device::work_struct
ops	gntdev.c	/^	struct gnttab_copy ops[GNTDEV_COPY_BATCH];$/;"	m	struct:gntdev_copy_batch	typeref:struct:gntdev_copy_batch::gnttab_copy	file:
oswiz	tmem.c	/^static inline struct tmem_oid oswiz(unsigned type, u32 ind)$/;"	f	file:
otherend_changed	xenbus/xenbus_probe.h	/^	void (*otherend_changed)(struct xenbus_watch *watch, const char **vec,$/;"	m	struct:xen_bus_type
pad_device_ids	xen-acpi-pad.c	/^static const struct acpi_device_id pad_device_ids[] = {$/;"	v	typeref:struct:acpi_device_id	file:
page	gntalloc.c	/^	struct page *page;	     \/* The shared page *\/$/;"	m	struct:gntalloc_gref	typeref:struct:gntalloc_gref::page	file:
page	grant-table.c	/^	struct page *page;$/;"	m	struct:deferred_entry	typeref:struct:deferred_entry::page	file:
pages	gntdev.c	/^	struct page **pages;$/;"	m	struct:grant_map	typeref:struct:grant_map::page	file:
pages	gntdev.c	/^	struct page *pages[GNTDEV_COPY_BATCH];$/;"	m	struct:gntdev_copy_batch	typeref:struct:gntdev_copy_batch::page	file:
pages	xen-scsiback.c	/^	struct page *pages[VSCSI_MAX_GRANTS];$/;"	m	struct:vscsibk_pend	typeref:struct:vscsibk_pend::page	file:
pages	xenbus/xenbus_client.c	/^			struct page *pages[XENBUS_MAX_RING_PAGES];$/;"	m	struct:xenbus_map_node::__anon2::__anon4	typeref:struct:xenbus_map_node::__anon2::__anon4::page	file:
pages	xlate_mmu.c	/^	struct page **pages;$/;"	m	struct:remap_data	typeref:struct:remap_data::page	file:
pages_mapped	gntdev.c	/^static atomic_t pages_mapped = ATOMIC_INIT(0);$/;"	v	file:
pages_vm_start	gntdev.c	/^	unsigned long pages_vm_start;$/;"	m	struct:grant_map	file:
pagesize	sys-hypervisor.c	/^HYPERVISOR_ATTR_RO(pagesize);$/;"	v
pagesize_show	sys-hypervisor.c	/^static ssize_t pagesize_show(struct hyp_sysfs_attr *attr, char *buffer)$/;"	f	file:
param_alias	xen-scsiback.c	/^	char param_alias[VSCSI_NAMELEN];$/;"	m	struct:scsiback_tpg	file:
passthrough	xen-pciback/xenbus.c	/^static bool __read_mostly passthrough;$/;"	v	file:
passthrough_dev_data	xen-pciback/passthrough.c	/^struct passthrough_dev_data {$/;"	s	file:
pci_bar_info	xen-pciback/conf_space_header.c	/^struct pci_bar_info {$/;"	s	file:
pci_cmd_info	xen-pciback/conf_space_header.c	/^struct pci_cmd_info {$/;"	s	file:
pci_dev_data	xen-pciback/pciback.h	/^	void *pci_dev_data;$/;"	m	struct:xen_pcibk_device
pci_dev_entry	xen-pciback/pciback.h	/^struct pci_dev_entry {$/;"	s
pci_devs_to_hide	xen-pciback/pci_stub.c	/^static char *pci_devs_to_hide;$/;"	v	file:
pci_saved_state	xen-pciback/pciback.h	/^	struct pci_saved_state *pci_saved_state;$/;"	m	struct:xen_pcibk_dev_data	typeref:struct:xen_pcibk_dev_data::pci_saved_state
pci_seg_supported	pci.c	/^static bool __read_mostly pci_seg_supported = true;$/;"	v	file:
pci_stub_nb	xen-pciback/pci_stub.c	/^static struct notifier_block pci_stub_nb = {$/;"	v	typeref:struct:notifier_block	file:
pci_stub_notifier	xen-pciback/pci_stub.c	/^static int pci_stub_notifier(struct notifier_block *nb,$/;"	f	file:
pcistub_device	xen-pciback/pci_stub.c	/^struct pcistub_device {$/;"	s	file:
pcistub_device_alloc	xen-pciback/pci_stub.c	/^static struct pcistub_device *pcistub_device_alloc(struct pci_dev *dev)$/;"	f	file:
pcistub_device_find	xen-pciback/pci_stub.c	/^static struct pcistub_device *pcistub_device_find(int domain, int bus,$/;"	f	file:
pcistub_device_find_locked	xen-pciback/pci_stub.c	/^static struct pcistub_device *pcistub_device_find_locked(int domain, int bus,$/;"	f	file:
pcistub_device_get	xen-pciback/pci_stub.c	/^static inline void pcistub_device_get(struct pcistub_device *psdev)$/;"	f	file:
pcistub_device_get_pci_dev	xen-pciback/pci_stub.c	/^static struct pci_dev *pcistub_device_get_pci_dev(struct xen_pcibk_device *pdev,$/;"	f	file:
pcistub_device_id	xen-pciback/pci_stub.c	/^struct pcistub_device_id {$/;"	s	file:
pcistub_device_id_add	xen-pciback/pci_stub.c	/^static int pcistub_device_id_add(int domain, int bus, int slot, int func)$/;"	f	file:
pcistub_device_id_add_list	xen-pciback/pci_stub.c	/^static void pcistub_device_id_add_list(struct pcistub_device_id *new,$/;"	f	file:
pcistub_device_id_remove	xen-pciback/pci_stub.c	/^static int pcistub_device_id_remove(int domain, int bus, int slot, int func)$/;"	f	file:
pcistub_device_put	xen-pciback/pci_stub.c	/^static inline void pcistub_device_put(struct pcistub_device *psdev)$/;"	f	file:
pcistub_device_release	xen-pciback/pci_stub.c	/^static void pcistub_device_release(struct kref *kref)$/;"	f	file:
pcistub_exit	xen-pciback/pci_stub.c	/^static void pcistub_exit(void)$/;"	f	file:
pcistub_get_pci_dev	xen-pciback/pci_stub.c	/^struct pci_dev *pcistub_get_pci_dev(struct xen_pcibk_device *pdev,$/;"	f
pcistub_get_pci_dev_by_slot	xen-pciback/pci_stub.c	/^struct pci_dev *pcistub_get_pci_dev_by_slot(struct xen_pcibk_device *pdev,$/;"	f
pcistub_ids	xen-pciback/pci_stub.c	/^static const struct pci_device_id pcistub_ids[] = {$/;"	v	typeref:struct:pci_device_id	file:
pcistub_init	xen-pciback/pci_stub.c	/^fs_initcall(pcistub_init);$/;"	v
pcistub_init	xen-pciback/pci_stub.c	/^static int __init pcistub_init(void)$/;"	f	file:
pcistub_init_device	xen-pciback/pci_stub.c	/^static int pcistub_init_device(struct pci_dev *dev)$/;"	f	file:
pcistub_init_devices_late	xen-pciback/pci_stub.c	/^static int __init pcistub_init_devices_late(void)$/;"	f	file:
pcistub_irq_handler_show	xen-pciback/pci_stub.c	/^static ssize_t pcistub_irq_handler_show(struct device_driver *drv, char *buf)$/;"	f	file:
pcistub_irq_handler_switch	xen-pciback/pci_stub.c	/^static ssize_t pcistub_irq_handler_switch(struct device_driver *drv,$/;"	f	file:
pcistub_match	xen-pciback/pci_stub.c	/^static int pcistub_match(struct pci_dev *dev)$/;"	f	file:
pcistub_match_one	xen-pciback/pci_stub.c	/^static int pcistub_match_one(struct pci_dev *dev,$/;"	f	file:
pcistub_probe	xen-pciback/pci_stub.c	/^static int pcistub_probe(struct pci_dev *dev, const struct pci_device_id *id)$/;"	f	file:
pcistub_put_pci_dev	xen-pciback/pci_stub.c	/^void pcistub_put_pci_dev(struct pci_dev *dev)$/;"	f
pcistub_quirk_add	xen-pciback/pci_stub.c	/^static ssize_t pcistub_quirk_add(struct device_driver *drv, const char *buf,$/;"	f	file:
pcistub_quirk_show	xen-pciback/pci_stub.c	/^static ssize_t pcistub_quirk_show(struct device_driver *drv, char *buf)$/;"	f	file:
pcistub_reg_add	xen-pciback/pci_stub.c	/^static int pcistub_reg_add(int domain, int bus, int slot, int func,$/;"	f	file:
pcistub_remove	xen-pciback/pci_stub.c	/^static void pcistub_remove(struct pci_dev *dev)$/;"	f	file:
pcistub_seize	xen-pciback/pci_stub.c	/^static int pcistub_seize(struct pci_dev *dev,$/;"	f	file:
pcistub_slot_add	xen-pciback/pci_stub.c	/^static ssize_t pcistub_slot_add(struct device_driver *drv, const char *buf,$/;"	f	file:
pcistub_slot_remove	xen-pciback/pci_stub.c	/^static ssize_t pcistub_slot_remove(struct device_driver *drv, const char *buf,$/;"	f	file:
pcistub_slot_show	xen-pciback/pci_stub.c	/^static ssize_t pcistub_slot_show(struct device_driver *drv, char *buf)$/;"	f	file:
pcpu	pcpu.c	/^struct pcpu {$/;"	s	file:
pcpu_dev_attrs	pcpu.c	/^static struct attribute *pcpu_dev_attrs[] = {$/;"	v	typeref:struct:attribute	file:
pcpu_dev_group	pcpu.c	/^static const struct attribute_group pcpu_dev_group = {$/;"	v	typeref:struct:attribute_group	file:
pcpu_dev_groups	pcpu.c	/^static const struct attribute_group *pcpu_dev_groups[] = {$/;"	v	typeref:struct:attribute_group	file:
pcpu_dev_is_visible	pcpu.c	/^static umode_t pcpu_dev_is_visible(struct kobject *kobj,$/;"	f	file:
pcpu_online_status	pcpu.c	/^static void pcpu_online_status(struct xenpf_pcpuinfo *info,$/;"	f	file:
pcpu_release	pcpu.c	/^static void pcpu_release(struct device *dev)$/;"	f	file:
pdev	xen-pciback/conf_space_quirks.h	/^	struct pci_dev *pdev;$/;"	m	struct:xen_pcibk_config_quirk	typeref:struct:xen_pcibk_config_quirk::pci_dev
pdev	xen-pciback/pci_stub.c	/^	struct xen_pcibk_device *pdev;\/* non-NULL if struct pci_dev is in use *\/$/;"	m	struct:pcistub_device	typeref:struct:pcistub_device::xen_pcibk_device	file:
per_user_data	evtchn.c	/^struct per_user_data {$/;"	s	file:
permissive	xen-pciback/pciback.h	/^	unsigned int permissive:1;$/;"	m	struct:xen_pcibk_dev_data
permissive_add	xen-pciback/pci_stub.c	/^static ssize_t permissive_add(struct device_driver *drv, const char *buf,$/;"	f	file:
permissive_show	xen-pciback/pci_stub.c	/^static ssize_t permissive_show(struct device_driver *drv, char *buf)$/;"	f	file:
pfns	xlate_mmu.c	/^	xen_pfn_t *pfns;$/;"	m	struct:map_balloon_pages	file:
pgoff	gntalloc.c	/^	uint16_t pgoff:12;    \/* Bits 0-11: Offset of the byte to clear *\/$/;"	m	struct:notify_info	file:
phys_addrs	xenbus/xenbus_client.c	/^	phys_addr_t phys_addrs[XENBUS_MAX_RING_GRANTS];$/;"	m	struct:map_ring_valloc_hvm	file:
pirq	events/events_internal.h	/^			unsigned short pirq;$/;"	m	struct:irq_info::__anon12::__anon13
pirq	events/events_internal.h	/^		} pirq;$/;"	m	union:irq_info::__anon12	typeref:struct:irq_info::__anon12::__anon13
pirq_check_eoi_map	events/events_base.c	/^static bool pirq_check_eoi_map(unsigned irq)$/;"	f	file:
pirq_eoi_map	events/events_base.c	/^static unsigned long *pirq_eoi_map;$/;"	v	file:
pirq_from_irq	events/events_base.c	/^static unsigned pirq_from_irq(unsigned irq)$/;"	f	file:
pirq_needs_eoi	events/events_base.c	/^static bool (*pirq_needs_eoi)(unsigned irq);$/;"	v	file:
pirq_needs_eoi_flag	events/events_base.c	/^static bool pirq_needs_eoi_flag(unsigned irq)$/;"	f	file:
pirq_query_unmask	events/events_base.c	/^static void pirq_query_unmask(int irq)$/;"	f	file:
platform_device_nb	arm-device.c	/^static struct notifier_block platform_device_nb = {$/;"	v	typeref:struct:notifier_block	file:
platform_driver	platform-pci.c	/^builtin_pci_driver(platform_driver);$/;"	v
platform_driver	platform-pci.c	/^static struct pci_driver platform_driver = {$/;"	v	typeref:struct:pci_driver	file:
platform_mmio	platform-pci.c	/^static unsigned long platform_mmio;$/;"	v	file:
platform_mmio_alloc	platform-pci.c	/^static unsigned long platform_mmio_alloc;$/;"	v	file:
platform_mmiolen	platform-pci.c	/^static unsigned long platform_mmiolen;$/;"	v	file:
platform_pci_probe	platform-pci.c	/^static int platform_pci_probe(struct pci_dev *pdev,$/;"	f	file:
platform_pci_resume	platform-pci.c	/^static int platform_pci_resume(struct pci_dev *pdev)$/;"	f	file:
platform_pci_tbl	platform-pci.c	/^static struct pci_device_id platform_pci_tbl[] = {$/;"	v	typeref:struct:pci_device_id	file:
pm_caps_read	xen-pciback/conf_space_capability.c	/^static int pm_caps_read(struct pci_dev *dev, int offset, u16 *value,$/;"	f	file:
pm_ctrl_init	xen-pciback/conf_space_capability.c	/^static void *pm_ctrl_init(struct pci_dev *dev, int offset)$/;"	f	file:
pm_ctrl_write	xen-pciback/conf_space_capability.c	/^static int pm_ctrl_write(struct pci_dev *dev, int offset, u16 new_value,$/;"	f	file:
pmu_features	sys-hypervisor.c	/^HYPERVISOR_ATTR_RW(pmu_features);$/;"	v
pmu_features_show	sys-hypervisor.c	/^static ssize_t pmu_features_show(struct hyp_sysfs_attr *attr, char *buffer)$/;"	f	file:
pmu_features_store	sys-hypervisor.c	/^static ssize_t pmu_features_store(struct hyp_sysfs_attr *attr,$/;"	f	file:
pmu_mode	sys-hypervisor.c	/^HYPERVISOR_ATTR_RW(pmu_mode);$/;"	v
pmu_mode	sys-hypervisor.c	/^struct pmu_mode {$/;"	s	file:
pmu_mode_show	sys-hypervisor.c	/^static ssize_t pmu_mode_show(struct hyp_sysfs_attr *attr, char *buffer)$/;"	f	file:
pmu_mode_store	sys-hypervisor.c	/^static ssize_t pmu_mode_store(struct hyp_sysfs_attr *attr,$/;"	f	file:
pmu_modes	sys-hypervisor.c	/^static struct pmu_mode pmu_modes[] = {$/;"	v	typeref:struct:pmu_mode	file:
populate_freeable_maps	gntdev.c	61;"	d	file:
port	evtchn.c	/^	unsigned port;$/;"	m	struct:user_evtchn	file:
poweroff_nb	manage.c	/^static int poweroff_nb(struct notifier_block *cb, unsigned long code, void *unused)$/;"	f	file:
pr_fmt	balloon.c	39;"	d	file:
pr_fmt	cpu_hotplug.c	1;"	d	file:
pr_fmt	events/events_2l.c	7;"	d	file:
pr_fmt	events/events_base.c	24;"	d	file:
pr_fmt	events/events_fifo.c	34;"	d	file:
pr_fmt	evtchn.c	34;"	d	file:
pr_fmt	gntalloc.c	51;"	d	file:
pr_fmt	gntdev.c	22;"	d	file:
pr_fmt	grant-table.c	34;"	d	file:
pr_fmt	manage.c	5;"	d	file:
pr_fmt	mcelog.c	35;"	d	file:
pr_fmt	pcpu.c	34;"	d	file:
pr_fmt	privcmd.c	9;"	d	file:
pr_fmt	swiotlb-xen.c	36;"	d	file:
pr_fmt	tmem.c	8;"	d	file:
pr_fmt	xen-acpi-cpuhotplug.c	18;"	d	file:
pr_fmt	xen-acpi-memhotplug.c	18;"	d	file:
pr_fmt	xen-acpi-pad.c	17;"	d	file:
pr_fmt	xen-acpi-processor.c	20;"	d	file:
pr_fmt	xen-balloon.c	33;"	d	file:
pr_fmt	xen-pciback/conf_space_header.c	7;"	d	file:
pr_fmt	xen-pciback/pci_stub.c	8;"	d	file:
pr_fmt	xen-pciback/pciback_ops.c	7;"	d	file:
pr_fmt	xen-pciback/vpci.c	8;"	d	file:
pr_fmt	xen-pciback/xenbus.c	7;"	d	file:
pr_fmt	xen-scsiback.c	34;"	d	file:
pr_fmt	xen-selfballoon.c	67;"	d	file:
pr_fmt	xenbus/xenbus_comms.c	33;"	d	file:
pr_fmt	xenbus/xenbus_dev_backend.c	1;"	d	file:
pr_fmt	xenbus/xenbus_dev_frontend.c	38;"	d	file:
pr_fmt	xenbus/xenbus_probe.c	33;"	d	file:
pr_fmt	xenbus/xenbus_probe_backend.c	34;"	d	file:
pr_fmt	xenbus/xenbus_probe_frontend.c	1;"	d	file:
pr_fmt	xenbus/xenbus_xs.c	34;"	d	file:
pr_fmt	xenfs/super.c	10;"	d	file:
prepare_pending_reqs	xen-scsiback.c	/^static struct vscsibk_pend *prepare_pending_reqs(struct vscsibk_info *info,$/;"	f	file:
print_device_status	xenbus/xenbus_probe_frontend.c	/^static int print_device_status(struct device *dev, void *data)$/;"	f	file:
privcmd_close	privcmd.c	/^static void privcmd_close(struct vm_area_struct *vma)$/;"	f	file:
privcmd_dev	privcmd.c	/^static struct miscdevice privcmd_dev = {$/;"	v	typeref:struct:miscdevice	file:
privcmd_exit	privcmd.c	/^module_exit(privcmd_exit);$/;"	v
privcmd_exit	privcmd.c	/^static void __exit privcmd_exit(void)$/;"	f	file:
privcmd_fault	privcmd.c	/^static int privcmd_fault(struct vm_area_struct *vma, struct vm_fault *vmf)$/;"	f	file:
privcmd_init	privcmd.c	/^module_init(privcmd_init);$/;"	v
privcmd_init	privcmd.c	/^static int __init privcmd_init(void)$/;"	f	file:
privcmd_ioctl	privcmd.c	/^static long privcmd_ioctl(struct file *file,$/;"	f	file:
privcmd_ioctl_hypercall	privcmd.c	/^static long privcmd_ioctl_hypercall(void __user *udata)$/;"	f	file:
privcmd_ioctl_mmap	privcmd.c	/^static long privcmd_ioctl_mmap(void __user *udata)$/;"	f	file:
privcmd_ioctl_mmap_batch	privcmd.c	/^static long privcmd_ioctl_mmap_batch(void __user *udata, int version)$/;"	f	file:
privcmd_mmap	privcmd.c	/^static int privcmd_mmap(struct file *file, struct vm_area_struct *vma)$/;"	f	file:
privcmd_vm_ops	privcmd.c	/^static const struct vm_operations_struct privcmd_vm_ops = {$/;"	v	typeref:struct:vm_operations_struct	file:
privcmd_vm_ops	privcmd.c	/^static const struct vm_operations_struct privcmd_vm_ops;$/;"	v	typeref:struct:vm_operations_struct	file:
privcmd_vma_range_is_mapped	privcmd.c	/^static int privcmd_vma_range_is_mapped($/;"	f	file:
probe	xenbus/xenbus_probe.h	/^	int (*probe)(struct xen_bus_type *bus, const char *type,$/;"	m	struct:xen_bus_type
process_msg	xenbus/xenbus_xs.c	/^static int process_msg(void)$/;"	f	file:
processor_device_ids	xen-acpi-cpuhotplug.c	/^static const struct acpi_device_id processor_device_ids[] = {$/;"	v	typeref:struct:acpi_device_id	file:
processor_device_ids	xen-stub.c	/^static const struct acpi_device_id processor_device_ids[] = {$/;"	v	typeref:struct:acpi_device_id	file:
processor_walk_namespace_cb	xen-acpi-cpuhotplug.c	/^processor_walk_namespace_cb(acpi_handle handle,$/;"	f	file:
prot	xlate_mmu.c	/^	pgprot_t prot;$/;"	m	struct:remap_data	file:
publish	xen-pciback/pciback.h	/^	int (*publish)(struct xen_pcibk_device *pdev, publish_pci_root_cb cb);$/;"	m	struct:xen_pcibk_backend
publish_pci_dev_cb	xen-pciback/pciback.h	/^typedef int (*publish_pci_dev_cb) (struct xen_pcibk_device *pdev,$/;"	t
publish_pci_root_cb	xen-pciback/pciback.h	/^typedef int (*publish_pci_root_cb) (struct xen_pcibk_device *pdev,$/;"	t
push_cxx_to_hypervisor	xen-acpi-processor.c	/^static int push_cxx_to_hypervisor(struct acpi_processor *_pr)$/;"	f	file:
push_pxx_to_hypervisor	xen-acpi-processor.c	/^static int push_pxx_to_hypervisor(struct acpi_processor *_pr)$/;"	f	file:
put_free_entry	grant-table.c	/^static void put_free_entry(grant_ref_t ref)$/;"	f	file:
put_free_pages	xen-scsiback.c	/^static void put_free_pages(struct page **page, int num)$/;"	f	file:
pv	xenbus/xenbus_client.c	/^		} pv;$/;"	m	union:xenbus_map_node::__anon2	typeref:struct:xenbus_map_node::__anon2::__anon3	file:
query_foreign_access	grant-table.c	/^	int (*query_foreign_access)(grant_ref_t ref);$/;"	m	struct:gnttab_ops	file:
queue_cleanup	xenbus/xenbus_dev_frontend.c	/^static void queue_cleanup(struct list_head *list)$/;"	f	file:
queue_reply	xenbus/xenbus_dev_frontend.c	/^static int queue_reply(struct list_head *queue, const void *data, size_t len)$/;"	f	file:
quirks_list	xen-pciback/conf_space_quirks.h	/^	struct list_head quirks_list;$/;"	m	struct:xen_pcibk_config_quirk	typeref:struct:xen_pcibk_config_quirk::list_head
range_straddles_page_boundary	swiotlb-xen.c	/^static inline int range_straddles_page_boundary(phys_addr_t p, size_t size)$/;"	f	file:
read	xen-pciback/conf_space.h	/^			conf_byte_read read;$/;"	m	struct:config_field::__anon8::__anon11
read	xen-pciback/conf_space.h	/^			conf_dword_read read;$/;"	m	struct:config_field::__anon8::__anon9
read	xen-pciback/conf_space.h	/^			conf_word_read read;$/;"	m	struct:config_field::__anon8::__anon10
read_acpi_id	xen-acpi-processor.c	/^read_acpi_id(acpi_handle handle, u32 lvl, void *context, void **rv)$/;"	f	file:
read_backend_details	xenbus/xenbus_probe_frontend.c	/^static int read_backend_details(struct xenbus_device *xendev)$/;"	f	file:
read_buffer	xenbus/xenbus_dev_frontend.c	/^struct read_buffer {$/;"	s	file:
read_buffers	xenbus/xenbus_dev_frontend.c	/^	struct list_head read_buffers;$/;"	m	struct:xenbus_file_priv	typeref:struct:xenbus_file_priv::list_head	file:
read_frontend_details	xenbus/xenbus_probe_backend.c	/^static int read_frontend_details(struct xenbus_device *xendev)$/;"	f	file:
read_reply	xenbus/xenbus_xs.c	/^static void *read_reply(enum xsd_sockmsg_type *type, unsigned int *len)$/;"	f	file:
read_waitq	xenbus/xenbus_dev_frontend.c	/^	wait_queue_head_t read_waitq;$/;"	m	struct:xenbus_file_priv	file:
ready_to_wait_for_devices	xenbus/xenbus_probe_frontend.c	/^static int ready_to_wait_for_devices;$/;"	v	file:
rebind_evtchn_irq	events/events_base.c	/^void rebind_evtchn_irq(int evtchn, int irq)$/;"	f
rebind_irq_to_cpu	events/events_base.c	/^static int rebind_irq_to_cpu(unsigned irq, unsigned tcpu)$/;"	f	file:
ref	grant-table.c	/^	grant_ref_t ref;$/;"	m	struct:deferred_entry	file:
refcnt	events/events_internal.h	/^	int refcnt;$/;"	m	struct:irq_info
register_balloon	xen-balloon.c	/^static int register_balloon(struct device *dev)$/;"	f	file:
register_capability	xen-pciback/conf_space_capability.c	/^static inline void register_capability(struct xen_pcibk_config_capability *cap)$/;"	f	file:
register_pcpu	pcpu.c	/^static int register_pcpu(struct pcpu *pcpu)$/;"	f	file:
register_quirk	xen-pciback/conf_space_quirks.c	/^static inline void register_quirk(struct xen_pcibk_config_quirk *quirk)$/;"	f	file:
register_xen_amba_notifier	arm-device.c	/^arch_initcall(register_xen_amba_notifier);$/;"	v
register_xen_amba_notifier	arm-device.c	/^static int __init register_xen_amba_notifier(void)$/;"	f	file:
register_xen_pci_notifier	pci.c	/^arch_initcall(register_xen_pci_notifier);$/;"	v
register_xen_pci_notifier	pci.c	/^static int __init register_xen_pci_notifier(void)$/;"	f	file:
register_xen_platform_notifier	arm-device.c	/^arch_initcall(register_xen_platform_notifier);$/;"	v
register_xen_platform_notifier	arm-device.c	/^static int __init register_xen_platform_notifier(void)$/;"	f	file:
register_xen_selfballooning	xen-selfballoon.c	/^EXPORT_SYMBOL(register_xen_selfballooning);$/;"	v
register_xen_selfballooning	xen-selfballoon.c	/^int register_xen_selfballooning(struct device *dev)$/;"	f
register_xenbus_watch	xenbus/xenbus_xs.c	/^EXPORT_SYMBOL_GPL(register_xenbus_watch);$/;"	v
register_xenbus_watch	xenbus/xenbus_xs.c	/^int register_xenbus_watch(struct xenbus_watch *watch)$/;"	f
register_xenstore_notifier	xenbus/xenbus_probe.c	/^EXPORT_SYMBOL_GPL(register_xenstore_notifier);$/;"	v
register_xenstore_notifier	xenbus/xenbus_probe.c	/^int register_xenstore_notifier(struct notifier_block *nb)$/;"	f
release	xen-pciback/conf_space.h	/^	conf_field_free release;$/;"	m	struct:config_field
release	xen-pciback/pciback.h	/^	void (*release)(struct xen_pcibk_device *pdev, struct pci_dev *dev,$/;"	m	struct:xen_pcibk_backend
release_memory_resource	balloon.c	/^static void release_memory_resource(struct resource *resource)$/;"	f	file:
remap_data	xlate_mmu.c	/^struct remap_data {$/;"	s	file:
remap_pte_fn	xlate_mmu.c	/^static int remap_pte_fn(pte_t *ptep, pgtable_t token, unsigned long addr,$/;"	f	file:
reply	xenbus/xenbus_xs.c	/^		} reply;$/;"	m	union:xs_stored_msg::__anon5	typeref:struct:xs_stored_msg::__anon5::__anon6	file:
reply_list	xenbus/xenbus_xs.c	/^	struct list_head reply_list;$/;"	m	struct:xs_handle	typeref:struct:xs_handle::list_head	file:
reply_lock	xenbus/xenbus_xs.c	/^	spinlock_t reply_lock;$/;"	m	struct:xs_handle	file:
reply_mutex	xenbus/xenbus_dev_frontend.c	/^	struct mutex reply_mutex;$/;"	m	struct:xenbus_file_priv	typeref:struct:xenbus_file_priv::mutex	file:
reply_waitq	xenbus/xenbus_xs.c	/^	wait_queue_head_t reply_waitq;$/;"	m	struct:xs_handle	file:
request_mutex	xenbus/xenbus_xs.c	/^	struct mutex request_mutex;$/;"	m	struct:xs_handle	typeref:struct:xs_handle::mutex	file:
res_list	xen-acpi-memhotplug.c	/^	struct list_head res_list;$/;"	m	struct:acpi_memory_device	typeref:struct:acpi_memory_device::list_head	file:
reserve_additional_memory	balloon.c	/^static enum bp_state reserve_additional_memory(void)$/;"	f	file:
reset	xen-pciback/conf_space.h	/^	conf_field_reset reset;$/;"	m	struct:config_field
response_mutex	xenbus/xenbus_xs.c	/^	struct mutex response_mutex;$/;"	m	struct:xs_handle	typeref:struct:xs_handle::mutex	file:
restore_cpu_ipis	events/events_base.c	/^static void restore_cpu_ipis(unsigned int cpu)$/;"	f	file:
restore_cpu_virqs	events/events_base.c	/^static void restore_cpu_virqs(unsigned int cpu)$/;"	f	file:
restore_pirqs	events/events_base.c	/^static void restore_pirqs(void)$/;"	f	file:
restrict_domid	evtchn.c	/^	domid_t restrict_domid;$/;"	m	struct:per_user_data	file:
result	grant-table.c	/^	int result;$/;"	m	struct:unmap_refs_callback_data	file:
result	xen-scsiback.c	/^	uint32_t result;$/;"	m	struct:vscsibk_pend	file:
resume	events/events_internal.h	/^	void (*resume)(void);$/;"	m	struct:evtchn_ops
retrigger_dynirq	events/events_base.c	/^static int retrigger_dynirq(struct irq_data *data)$/;"	f	file:
ring	evtchn.c	/^	evtchn_port_t *ring;$/;"	m	struct:per_user_data	file:
ring	xen-scsiback.c	/^	struct vscsiif_back_ring ring;$/;"	m	struct:vscsibk_info	typeref:struct:vscsibk_info::vscsiif_back_ring	file:
ring_cons	evtchn.c	/^	unsigned int ring_cons, ring_prod, ring_overflow;$/;"	m	struct:per_user_data	file:
ring_cons_mutex	evtchn.c	/^	struct mutex ring_cons_mutex; \/* protect against concurrent readers *\/$/;"	m	struct:per_user_data	typeref:struct:per_user_data::mutex	file:
ring_error	xen-scsiback.c	/^	int ring_error;$/;"	m	struct:vscsibk_info	file:
ring_lock	xen-scsiback.c	/^	spinlock_t ring_lock;$/;"	m	struct:vscsibk_info	file:
ring_ops_hvm	xenbus/xenbus_client.c	/^static const struct xenbus_ring_ops ring_ops_hvm = {$/;"	v	typeref:struct:xenbus_ring_ops	file:
ring_ops_pv	xenbus/xenbus_client.c	/^static const struct xenbus_ring_ops ring_ops_pv = {$/;"	v	typeref:struct:xenbus_ring_ops	file:
ring_overflow	evtchn.c	/^	unsigned int ring_cons, ring_prod, ring_overflow;$/;"	m	struct:per_user_data	file:
ring_prod	evtchn.c	/^	unsigned int ring_cons, ring_prod, ring_overflow;$/;"	m	struct:per_user_data	file:
ring_prod_lock	evtchn.c	/^	spinlock_t ring_prod_lock; \/* product against concurrent interrupts *\/$/;"	m	struct:per_user_data	file:
ring_size	evtchn.c	/^	unsigned int ring_size;$/;"	m	struct:per_user_data	file:
ro	grant-table.c	/^	bool ro;$/;"	m	struct:deferred_entry	file:
rom_write	xen-pciback/conf_space_header.c	/^static int rom_write(struct pci_dev *dev, int offset, u32 value, void *data)$/;"	f	file:
root	xenbus/xenbus_probe.h	/^	char *root;$/;"	m	struct:xen_bus_type
rqid	xen-scsiback.c	/^	uint16_t rqid;$/;"	m	struct:vscsibk_pend	file:
sc_data_direction	xen-scsiback.c	/^	uint8_t sc_data_direction;$/;"	m	struct:vscsibk_pend	file:
scrub_page	balloon.c	/^static void scrub_page(struct page *page)$/;"	f	file:
scsiback_aborted_task	xen-scsiback.c	/^static void scsiback_aborted_task(struct se_cmd *se_cmd)$/;"	f	file:
scsiback_add_translation_entry	xen-scsiback.c	/^static int scsiback_add_translation_entry(struct vscsibk_info *info,$/;"	f	file:
scsiback_alloc_sess_cb	xen-scsiback.c	/^static int scsiback_alloc_sess_cb(struct se_portal_group *se_tpg,$/;"	f	file:
scsiback_check_false	xen-scsiback.c	/^static int scsiback_check_false(struct se_portal_group *se_tpg)$/;"	f	file:
scsiback_check_stop_free	xen-scsiback.c	/^static int scsiback_check_stop_free(struct se_cmd *se_cmd)$/;"	f	file:
scsiback_check_true	xen-scsiback.c	/^static int scsiback_check_true(struct se_portal_group *se_tpg)$/;"	f	file:
scsiback_chk_translation_entry	xen-scsiback.c	/^static struct v2p_entry *scsiback_chk_translation_entry($/;"	f	file:
scsiback_cmd_done	xen-scsiback.c	/^static void scsiback_cmd_done(struct vscsibk_pend *pending_req)$/;"	f	file:
scsiback_cmd_exec	xen-scsiback.c	/^static void scsiback_cmd_exec(struct vscsibk_pend *pending_req)$/;"	f	file:
scsiback_del_translation_entry	xen-scsiback.c	/^static int scsiback_del_translation_entry(struct vscsibk_info *info,$/;"	f	file:
scsiback_device_action	xen-scsiback.c	/^static void scsiback_device_action(struct vscsibk_pend *pending_req,$/;"	f	file:
scsiback_disconnect	xen-scsiback.c	/^static void scsiback_disconnect(struct vscsibk_info *info)$/;"	f	file:
scsiback_do_1lun_hotplug	xen-scsiback.c	/^static void scsiback_do_1lun_hotplug(struct vscsibk_info *info, int op,$/;"	f	file:
scsiback_do_add_lun	xen-scsiback.c	/^static void scsiback_do_add_lun(struct vscsibk_info *info, const char *state,$/;"	f	file:
scsiback_do_cmd_fn	xen-scsiback.c	/^static int scsiback_do_cmd_fn(struct vscsibk_info *info)$/;"	f	file:
scsiback_do_del_lun	xen-scsiback.c	/^static void scsiback_do_del_lun(struct vscsibk_info *info, const char *state,$/;"	f	file:
scsiback_do_lun_hotplug	xen-scsiback.c	/^static void scsiback_do_lun_hotplug(struct vscsibk_info *info, int op)$/;"	f	file:
scsiback_do_resp_with_sense	xen-scsiback.c	/^static void scsiback_do_resp_with_sense(char *sense_buffer, int32_t result,$/;"	f	file:
scsiback_do_translation	xen-scsiback.c	/^static struct v2p_entry *scsiback_do_translation(struct vscsibk_info *info,$/;"	f	file:
scsiback_driver	xen-scsiback.c	/^static struct xenbus_driver scsiback_driver = {$/;"	v	typeref:struct:xenbus_driver	file:
scsiback_drop_nexus	xen-scsiback.c	/^static int scsiback_drop_nexus(struct scsiback_tpg *tpg)$/;"	f	file:
scsiback_drop_tpg	xen-scsiback.c	/^static void scsiback_drop_tpg(struct se_portal_group *se_tpg)$/;"	f	file:
scsiback_drop_tport	xen-scsiback.c	/^static void scsiback_drop_tport(struct se_wwn *wwn)$/;"	f	file:
scsiback_dump_proto_id	xen-scsiback.c	/^static char *scsiback_dump_proto_id(struct scsiback_tport *tport)$/;"	f	file:
scsiback_exit	xen-scsiback.c	/^module_exit(scsiback_exit);$/;"	v
scsiback_exit	xen-scsiback.c	/^static void __exit scsiback_exit(void)$/;"	f	file:
scsiback_fast_flush_area	xen-scsiback.c	/^static void scsiback_fast_flush_area(struct vscsibk_pend *req)$/;"	f	file:
scsiback_free_translation_entry	xen-scsiback.c	/^static void scsiback_free_translation_entry(struct kref *kref)$/;"	f	file:
scsiback_frontend_changed	xen-scsiback.c	/^static void scsiback_frontend_changed(struct xenbus_device *dev,$/;"	f	file:
scsiback_get	xen-scsiback.c	/^static void scsiback_get(struct vscsibk_info *info)$/;"	f	file:
scsiback_get_cmd_state	xen-scsiback.c	/^static int scsiback_get_cmd_state(struct se_cmd *se_cmd)$/;"	f	file:
scsiback_get_fabric_name	xen-scsiback.c	/^static char *scsiback_get_fabric_name(void)$/;"	f	file:
scsiback_get_fabric_wwn	xen-scsiback.c	/^static char *scsiback_get_fabric_wwn(struct se_portal_group *se_tpg)$/;"	f	file:
scsiback_get_pend_req	xen-scsiback.c	/^static struct vscsibk_pend *scsiback_get_pend_req(struct vscsiif_back_ring *ring,$/;"	f	file:
scsiback_get_tag	xen-scsiback.c	/^static u16 scsiback_get_tag(struct se_portal_group *se_tpg)$/;"	f	file:
scsiback_gnttab_data_map	xen-scsiback.c	/^static int scsiback_gnttab_data_map(struct vscsiif_request *ring_req,$/;"	f	file:
scsiback_gnttab_data_map_batch	xen-scsiback.c	/^static int scsiback_gnttab_data_map_batch(struct gnttab_map_grant_ref *map,$/;"	f	file:
scsiback_gnttab_data_map_list	xen-scsiback.c	/^static int scsiback_gnttab_data_map_list(struct vscsibk_pend *pending_req,$/;"	f	file:
scsiback_ids	xen-scsiback.c	/^static const struct xenbus_device_id scsiback_ids[] = {$/;"	v	typeref:struct:xenbus_device_id	file:
scsiback_init	xen-scsiback.c	/^module_init(scsiback_init);$/;"	v
scsiback_init	xen-scsiback.c	/^static int __init scsiback_init(void)$/;"	f	file:
scsiback_init_sring	xen-scsiback.c	/^static int scsiback_init_sring(struct vscsibk_info *info, grant_ref_t ring_ref,$/;"	f	file:
scsiback_irq_fn	xen-scsiback.c	/^static irqreturn_t scsiback_irq_fn(int irq, void *dev_id)$/;"	f	file:
scsiback_make_nexus	xen-scsiback.c	/^static int scsiback_make_nexus(struct scsiback_tpg *tpg,$/;"	f	file:
scsiback_make_tpg	xen-scsiback.c	/^scsiback_make_tpg(struct se_wwn *wwn,$/;"	f	file:
scsiback_make_tport	xen-scsiback.c	/^scsiback_make_tport(struct target_fabric_configfs *tf,$/;"	f	file:
scsiback_map	xen-scsiback.c	/^static int scsiback_map(struct vscsibk_info *info)$/;"	f	file:
scsiback_max_buffer_pages	xen-scsiback.c	/^static int scsiback_max_buffer_pages = 1024;$/;"	v	file:
scsiback_nexus	xen-scsiback.c	/^struct scsiback_nexus {$/;"	s	file:
scsiback_ops	xen-scsiback.c	/^static const struct target_core_fabric_ops scsiback_ops = {$/;"	v	typeref:struct:target_core_fabric_ops	file:
scsiback_param_attrs	xen-scsiback.c	/^static struct configfs_attribute *scsiback_param_attrs[] = {$/;"	v	typeref:struct:configfs_attribute	file:
scsiback_port_link	xen-scsiback.c	/^static int scsiback_port_link(struct se_portal_group *se_tpg,$/;"	f	file:
scsiback_port_unlink	xen-scsiback.c	/^static void scsiback_port_unlink(struct se_portal_group *se_tpg,$/;"	f	file:
scsiback_print_status	xen-scsiback.c	/^static void scsiback_print_status(char *sense_buffer, int errors,$/;"	f	file:
scsiback_probe	xen-scsiback.c	/^static int scsiback_probe(struct xenbus_device *dev,$/;"	f	file:
scsiback_put	xen-scsiback.c	/^static void scsiback_put(struct vscsibk_info *info)$/;"	f	file:
scsiback_queue_data_in	xen-scsiback.c	/^static int scsiback_queue_data_in(struct se_cmd *se_cmd)$/;"	f	file:
scsiback_queue_status	xen-scsiback.c	/^static int scsiback_queue_status(struct se_cmd *se_cmd)$/;"	f	file:
scsiback_queue_tm_rsp	xen-scsiback.c	/^static void scsiback_queue_tm_rsp(struct se_cmd *se_cmd)$/;"	f	file:
scsiback_release_cmd	xen-scsiback.c	/^static void scsiback_release_cmd(struct se_cmd *se_cmd)$/;"	f	file:
scsiback_release_translation_entry	xen-scsiback.c	/^static void scsiback_release_translation_entry(struct vscsibk_info *info)$/;"	f	file:
scsiback_remove	xen-scsiback.c	/^static int scsiback_remove(struct xenbus_device *dev)$/;"	f	file:
scsiback_send_response	xen-scsiback.c	/^static void scsiback_send_response(struct vscsibk_info *info,$/;"	f	file:
scsiback_sess_get_index	xen-scsiback.c	/^static u32 scsiback_sess_get_index(struct se_session *se_sess)$/;"	f	file:
scsiback_set_default_node_attrs	xen-scsiback.c	/^static void scsiback_set_default_node_attrs(struct se_node_acl *nacl)$/;"	f	file:
scsiback_tmr	xen-scsiback.c	/^struct scsiback_tmr {$/;"	s	file:
scsiback_tpg	xen-scsiback.c	/^struct scsiback_tpg {$/;"	s	file:
scsiback_tpg_attrs	xen-scsiback.c	/^static struct configfs_attribute *scsiback_tpg_attrs[] = {$/;"	v	typeref:struct:configfs_attribute	file:
scsiback_tpg_get_inst_index	xen-scsiback.c	/^static u32 scsiback_tpg_get_inst_index(struct se_portal_group *se_tpg)$/;"	f	file:
scsiback_tpg_nexus_show	xen-scsiback.c	/^static ssize_t scsiback_tpg_nexus_show(struct config_item *item, char *page)$/;"	f	file:
scsiback_tpg_nexus_store	xen-scsiback.c	/^static ssize_t scsiback_tpg_nexus_store(struct config_item *item,$/;"	f	file:
scsiback_tpg_param_alias_show	xen-scsiback.c	/^static ssize_t scsiback_tpg_param_alias_show(struct config_item *item,$/;"	f	file:
scsiback_tpg_param_alias_store	xen-scsiback.c	/^static ssize_t scsiback_tpg_param_alias_store(struct config_item *item,$/;"	f	file:
scsiback_tport	xen-scsiback.c	/^struct scsiback_tport {$/;"	s	file:
scsiback_write_pending	xen-scsiback.c	/^static int scsiback_write_pending(struct se_cmd *se_cmd)$/;"	f	file:
scsiback_write_pending_status	xen-scsiback.c	/^static int scsiback_write_pending_status(struct se_cmd *se_cmd)$/;"	f	file:
scsiback_wwn_attrs	xen-scsiback.c	/^static struct configfs_attribute *scsiback_wwn_attrs[] = {$/;"	v	typeref:struct:configfs_attribute	file:
scsiback_wwn_version_show	xen-scsiback.c	/^scsiback_wwn_version_show(struct config_item *item, char *page)$/;"	f	file:
se_cmd	xen-scsiback.c	/^	struct se_cmd se_cmd;$/;"	m	struct:vscsibk_pend	typeref:struct:vscsibk_pend::se_cmd	file:
se_tpg	xen-scsiback.c	/^	struct se_portal_group se_tpg;$/;"	m	struct:scsiback_tpg	typeref:struct:scsiback_tpg::se_portal_group	file:
selfballoon_attrs	xen-selfballoon.c	/^static struct attribute *selfballoon_attrs[] = {$/;"	v	typeref:struct:attribute	file:
selfballoon_group	xen-selfballoon.c	/^static const struct attribute_group selfballoon_group = {$/;"	v	typeref:struct:attribute_group	file:
selfballoon_min_usable_mb	xen-selfballoon.c	/^static unsigned int selfballoon_min_usable_mb;$/;"	v	file:
selfballoon_process	xen-selfballoon.c	/^static void selfballoon_process(struct work_struct *work)$/;"	f	file:
selfballoon_reserved_mb	xen-selfballoon.c	/^static unsigned int selfballoon_reserved_mb;$/;"	v	file:
sense_buffer	xen-scsiback.c	/^	uint8_t sense_buffer[VSCSIIF_SENSE_BUFFERSIZE];$/;"	m	struct:vscsibk_pend	file:
set_affinity_irq	events/events_base.c	/^static int set_affinity_irq(struct irq_data *data, const struct cpumask *dest,$/;"	f	file:
set_evtchn	events/events_internal.h	/^static inline void set_evtchn(unsigned port)$/;"	f
set_evtchn_to_irq	events/events_base.c	/^static int set_evtchn_to_irq(unsigned evtchn, unsigned irq)$/;"	f	file:
set_grant_ptes_as_special	gntdev.c	/^static int set_grant_ptes_as_special(pte_t *pte, pgtable_t token,$/;"	f	file:
set_pending	events/events_internal.h	/^	void (*set_pending)(unsigned port);$/;"	m	struct:evtchn_ops
setup	events/events_internal.h	/^	int (*setup)(struct irq_info *info);$/;"	m	struct:evtchn_ops
setup_balloon_gfn	xlate_mmu.c	/^static void setup_balloon_gfn(unsigned long gfn, void *data)$/;"	f	file:
setup_cpu_watcher	cpu_hotplug.c	/^static int setup_cpu_watcher(struct notifier_block *notifier,$/;"	f	file:
setup_hparams	xlate_mmu.c	/^static void setup_hparams(unsigned long gfn, void *data)$/;"	f	file:
setup_shutdown_watcher	manage.c	/^static int setup_shutdown_watcher(void)$/;"	f	file:
setup_vcpu_hotplug_event	cpu_hotplug.c	/^arch_initcall(setup_vcpu_hotplug_event);$/;"	v
setup_vcpu_hotplug_event	cpu_hotplug.c	/^static int __init setup_vcpu_hotplug_event(void)$/;"	f	file:
sgl	xen-scsiback.c	/^	struct scatterlist *sgl;$/;"	m	struct:vscsibk_pend	typeref:struct:vscsibk_pend::scatterlist	file:
sh_info	xen-pciback/pciback.h	/^	struct xen_pci_sharedinfo *sh_info;$/;"	m	struct:xen_pcibk_device	typeref:struct:xen_pcibk_device::xen_pci_sharedinfo
show	sys-hypervisor.c	/^	ssize_t (*show)(struct hyp_sysfs_attr *, char *);$/;"	m	struct:hyp_sysfs_attr	file:
show_online	pcpu.c	/^static ssize_t show_online(struct device *dev,$/;"	f	file:
show_target	xen-balloon.c	/^static ssize_t show_target(struct device *dev, struct device_attribute *attr,$/;"	f	file:
show_target_kb	xen-balloon.c	/^static ssize_t show_target_kb(struct device *dev, struct device_attribute *attr,$/;"	f	file:
shutdown_event	manage.c	/^static int shutdown_event(struct notifier_block *notifier,$/;"	f	file:
shutdown_handler	manage.c	/^static void shutdown_handler(struct xenbus_watch *watch,$/;"	f	file:
shutdown_handler	manage.c	/^struct shutdown_handler {$/;"	s	file:
shutdown_handlers	manage.c	/^static struct shutdown_handler shutdown_handlers[] = {$/;"	v	typeref:struct:shutdown_handler	file:
shutdown_pirq	events/events_base.c	/^static void shutdown_pirq(struct irq_data *data)$/;"	f	file:
shutdown_state	manage.c	/^enum shutdown_state {$/;"	g	file:
shutdown_watch	manage.c	/^static struct xenbus_watch shutdown_watch = {$/;"	v	typeref:struct:xenbus_watch	file:
shutting_down	manage.c	/^static enum shutdown_state shutting_down = SHUTDOWN_INVALID;$/;"	v	typeref:enum:shutdown_state	file:
size	xen-pciback/conf_space.h	/^	unsigned int size;$/;"	m	struct:config_field
slot_list	xen-pciback/pci_stub.c	/^	struct list_head slot_list;$/;"	m	struct:pcistub_device_id	typeref:struct:pcistub_device_id::list_head	file:
split	xenbus/xenbus_xs.c	/^static char **split(char *strings, unsigned int len, unsigned int *num)$/;"	f	file:
start_addr	xen-acpi-memhotplug.c	/^	u64 start_addr;		\/* Memory Range start physical addr *\/$/;"	m	struct:acpi_memory_info	file:
start_dma_addr	swiotlb-xen.c	/^static u64 start_dma_addr;$/;"	v	file:
startup_pirq	events/events_base.c	/^static unsigned int startup_pirq(struct irq_data *data)$/;"	f	file:
status	gntdev.c	/^	s16 __user *status[GNTDEV_COPY_BATCH];$/;"	m	struct:gntdev_copy_batch	file:
store	sys-hypervisor.c	/^	ssize_t (*store)(struct hyp_sysfs_attr *, const char *, size_t);$/;"	m	struct:hyp_sysfs_attr	file:
store_frontswap_hysteresis	xen-selfballoon.c	/^static ssize_t store_frontswap_hysteresis(struct device *dev,$/;"	f	file:
store_frontswap_inertia	xen-selfballoon.c	/^static ssize_t store_frontswap_inertia(struct device *dev,$/;"	f	file:
store_frontswap_selfshrinking	xen-selfballoon.c	/^static ssize_t store_frontswap_selfshrinking(struct device *dev,$/;"	f	file:
store_online	pcpu.c	/^static ssize_t __ref store_online(struct device *dev,$/;"	f	file:
store_selfballoon_downhys	xen-selfballoon.c	/^static ssize_t store_selfballoon_downhys(struct device *dev,$/;"	f	file:
store_selfballoon_interval	xen-selfballoon.c	/^static ssize_t store_selfballoon_interval(struct device *dev,$/;"	f	file:
store_selfballoon_min_usable_mb	xen-selfballoon.c	/^static ssize_t store_selfballoon_min_usable_mb(struct device *dev,$/;"	f	file:
store_selfballoon_reserved_mb	xen-selfballoon.c	/^static ssize_t store_selfballoon_reserved_mb(struct device *dev,$/;"	f	file:
store_selfballoon_uphys	xen-selfballoon.c	/^static ssize_t store_selfballoon_uphys(struct device *dev,$/;"	f	file:
store_selfballooning	xen-selfballoon.c	/^static ssize_t store_selfballooning(struct device *dev,$/;"	f	file:
store_target	xen-balloon.c	/^static ssize_t store_target(struct device *dev,$/;"	f	file:
store_target_kb	xen-balloon.c	/^static ssize_t store_target_kb(struct device *dev,$/;"	f	file:
str_to_quirk	xen-pciback/pci_stub.c	/^static inline int str_to_quirk(const char *buf, int *domain, int *bus, int$/;"	f	file:
str_to_slot	xen-pciback/pci_stub.c	/^static inline int str_to_slot(const char *buf, int *domain, int *bus,$/;"	f	file:
strsep_len	xenbus/xenbus_probe.c	/^static int strsep_len(const char *str, char c, unsigned int len)$/;"	f	file:
suspend_info	manage.c	/^struct suspend_info {$/;"	s	file:
sync_pcpu	pcpu.c	/^static int sync_pcpu(uint32_t cpu, uint32_t *max_cpu)$/;"	f	file:
sysrq_handler	manage.c	/^static void sysrq_handler(struct xenbus_watch *watch, const char **vec,$/;"	f	file:
sysrq_watch	manage.c	/^static struct xenbus_watch sysrq_watch = {$/;"	v	typeref:struct:xenbus_watch	file:
talk_to_otherend	xenbus/xenbus_probe.c	/^static int talk_to_otherend(struct xenbus_device *dev)$/;"	f	file:
target_watch	xen-balloon.c	/^static struct xenbus_watch target_watch = {$/;"	v	typeref:struct:xenbus_watch	file:
test_and_set_mask	events/events_internal.h	/^	bool (*test_and_set_mask)(unsigned port);$/;"	m	struct:evtchn_ops
test_and_set_mask	events/events_internal.h	/^static inline bool test_and_set_mask(unsigned port)$/;"	f
test_evtchn	events/events_internal.h	/^static inline bool test_evtchn(unsigned port)$/;"	f
tgt	xen-scsiback.c	/^	unsigned int tgt;		\/* target  *\/$/;"	m	struct:ids_tuple	file:
tmem_cleancache_flush_fs	tmem.c	/^static void tmem_cleancache_flush_fs(int pool)$/;"	f	file:
tmem_cleancache_flush_inode	tmem.c	/^static void tmem_cleancache_flush_inode(int pool, struct cleancache_filekey key)$/;"	f	file:
tmem_cleancache_flush_page	tmem.c	/^static void tmem_cleancache_flush_page(int pool, struct cleancache_filekey key,$/;"	f	file:
tmem_cleancache_get_page	tmem.c	/^static int tmem_cleancache_get_page(int pool, struct cleancache_filekey key,$/;"	f	file:
tmem_cleancache_init_fs	tmem.c	/^static int tmem_cleancache_init_fs(size_t pagesize)$/;"	f	file:
tmem_cleancache_init_shared_fs	tmem.c	/^static int tmem_cleancache_init_shared_fs(char *uuid, size_t pagesize)$/;"	f	file:
tmem_cleancache_ops	tmem.c	/^static const struct cleancache_ops tmem_cleancache_ops = {$/;"	v	typeref:struct:cleancache_ops	file:
tmem_cleancache_put_page	tmem.c	/^static void tmem_cleancache_put_page(int pool, struct cleancache_filekey key,$/;"	f	file:
tmem_enabled	tmem.c	/^bool __read_mostly tmem_enabled = false;$/;"	v
tmem_frontswap_flush_area	tmem.c	/^static void tmem_frontswap_flush_area(unsigned type)$/;"	f	file:
tmem_frontswap_flush_page	tmem.c	/^static void tmem_frontswap_flush_page(unsigned type, pgoff_t offset)$/;"	f	file:
tmem_frontswap_init	tmem.c	/^static void tmem_frontswap_init(unsigned ignored)$/;"	f	file:
tmem_frontswap_load	tmem.c	/^static int tmem_frontswap_load(unsigned type, pgoff_t offset,$/;"	f	file:
tmem_frontswap_ops	tmem.c	/^static struct frontswap_ops tmem_frontswap_ops = {$/;"	v	typeref:struct:frontswap_ops	file:
tmem_frontswap_poolid	tmem.c	/^static int tmem_frontswap_poolid;$/;"	v	file:
tmem_frontswap_store	tmem.c	/^static int tmem_frontswap_store(unsigned type, pgoff_t offset,$/;"	f	file:
tmem_oid	tmem.c	/^struct tmem_oid {$/;"	s	file:
tmem_pool_uuid	tmem.c	/^struct tmem_pool_uuid {$/;"	s	file:
tmr_complete	xen-scsiback.c	/^	atomic_t tmr_complete;$/;"	m	struct:scsiback_tmr	file:
tmr_wait	xen-scsiback.c	/^	wait_queue_head_t tmr_wait;$/;"	m	struct:scsiback_tmr	file:
token	xenbus/xenbus_dev_frontend.c	/^	char *token;$/;"	m	struct:watch_adapter	file:
tpg	xen-scsiback.c	/^	struct scsiback_tpg *tpg;	\/* translate to   *\/$/;"	m	struct:v2p_entry	typeref:struct:v2p_entry::scsiback_tpg	file:
tpg_nexus	xen-scsiback.c	/^	struct scsiback_nexus *tpg_nexus;$/;"	m	struct:scsiback_tpg	typeref:struct:scsiback_tpg::scsiback_nexus	file:
tport	xen-scsiback.c	/^	struct scsiback_tport *tport;$/;"	m	struct:scsiback_tpg	typeref:struct:scsiback_tpg::scsiback_tport	file:
tport_name	xen-scsiback.c	/^	char tport_name[VSCSI_NAMELEN];$/;"	m	struct:scsiback_tport	file:
tport_proto_id	xen-scsiback.c	/^	u8 tport_proto_id;$/;"	m	struct:scsiback_tport	file:
tport_tpgt	xen-scsiback.c	/^	u16 tport_tpgt;$/;"	m	struct:scsiback_tpg	file:
tport_wwn	xen-scsiback.c	/^	struct se_wwn tport_wwn;$/;"	m	struct:scsiback_tport	typeref:struct:scsiback_tport::se_wwn	file:
tport_wwpn	xen-scsiback.c	/^	u64 tport_wwpn;$/;"	m	struct:scsiback_tport	file:
transaction_count	xenbus/xenbus_xs.c	/^	atomic_t transaction_count;$/;"	m	struct:xs_handle	file:
transaction_end	xenbus/xenbus_xs.c	/^static void transaction_end(void)$/;"	f	file:
transaction_mutex	xenbus/xenbus_xs.c	/^	struct mutex transaction_mutex;$/;"	m	struct:xs_handle	typeref:struct:xs_handle::mutex	file:
transaction_resume	xenbus/xenbus_xs.c	/^static void transaction_resume(void)$/;"	f	file:
transaction_start	xenbus/xenbus_xs.c	/^static void transaction_start(void)$/;"	f	file:
transaction_suspend	xenbus/xenbus_xs.c	/^static void transaction_suspend(void)$/;"	f	file:
transaction_wq	xenbus/xenbus_xs.c	/^	wait_queue_head_t transaction_wq;$/;"	m	struct:xs_handle	file:
transactions	xenbus/xenbus_dev_frontend.c	/^	struct list_head transactions;$/;"	m	struct:xenbus_file_priv	typeref:struct:xenbus_file_priv::list_head	file:
traverse_pages	privcmd.c	/^static int traverse_pages(unsigned nelem, size_t size,$/;"	f	file:
traverse_pages_block	privcmd.c	/^static int traverse_pages_block(unsigned nelem, size_t size,$/;"	f	file:
tv_tpg_fe_count	xen-scsiback.c	/^	int tv_tpg_fe_count;$/;"	m	struct:scsiback_tpg	file:
tv_tpg_list	xen-scsiback.c	/^	struct list_head tv_tpg_list;$/;"	m	struct:scsiback_tpg	typeref:struct:scsiback_tpg::list_head	file:
tv_tpg_mutex	xen-scsiback.c	/^	struct mutex tv_tpg_mutex;$/;"	m	struct:scsiback_tpg	typeref:struct:scsiback_tpg::mutex	file:
tv_tpg_port_count	xen-scsiback.c	/^	int tv_tpg_port_count;$/;"	m	struct:scsiback_tpg	file:
tvn_se_sess	xen-scsiback.c	/^	struct se_session *tvn_se_sess;$/;"	m	struct:scsiback_nexus	typeref:struct:scsiback_nexus::se_session	file:
type	events/events_internal.h	/^	enum xen_irq_type type;	\/* type *\/$/;"	m	struct:irq_info	typeref:enum:irq_info::xen_irq_type
type	sys-hypervisor.c	/^HYPERVISOR_ATTR_RO(type);$/;"	v
type_from_irq	events/events_base.c	/^static enum xen_irq_type type_from_irq(unsigned irq)$/;"	f	file:
type_show	sys-hypervisor.c	/^static ssize_t type_show(struct hyp_sysfs_attr *attr, char *buffer)$/;"	f	file:
u	events/events_internal.h	/^	} u;$/;"	m	struct:irq_info	typeref:union:irq_info::__anon12
u	xen-pciback/conf_space.h	/^	} u;$/;"	m	struct:config_field	typeref:union:config_field::__anon8
u	xenbus/xenbus_dev_frontend.c	/^	} u;$/;"	m	struct:xenbus_file_priv	typeref:union:xenbus_file_priv::__anon1	file:
u	xenbus/xenbus_xs.c	/^	} u;$/;"	m	struct:xs_stored_msg	typeref:union:xs_stored_msg::__anon5	file:
unbind_from_irq	events/events_base.c	/^static void unbind_from_irq(unsigned int irq)$/;"	f	file:
unbind_from_irqhandler	events/events_base.c	/^EXPORT_SYMBOL_GPL(unbind_from_irqhandler);$/;"	v
unbind_from_irqhandler	events/events_base.c	/^void unbind_from_irqhandler(unsigned int irq, void *dev_id)$/;"	f
unmap	xenbus/xenbus_client.c	/^	int (*unmap)(struct xenbus_device *dev, void *vaddr);$/;"	m	struct:xenbus_ring_ops	file:
unmap_frames	grant-table.c	/^	void (*unmap_frames)(void);$/;"	m	struct:gnttab_ops	file:
unmap_gfn	xlate_mmu.c	/^static void unmap_gfn(unsigned long gfn, void *data)$/;"	f	file:
unmap_grant_pages	gntdev.c	/^static int unmap_grant_pages(struct grant_map *map, int offset, int pages)$/;"	f	file:
unmap_if_in_range	gntdev.c	/^static void unmap_if_in_range(struct grant_map *map,$/;"	f	file:
unmap_notify	gntdev.c	/^struct unmap_notify {$/;"	s	file:
unmap_ops	gntdev.c	/^	struct gnttab_unmap_grant_ref *unmap_ops;$/;"	m	struct:grant_map	typeref:struct:grant_map::gnttab_unmap_grant_ref	file:
unmap_refs_callback	grant-table.c	/^static void unmap_refs_callback(int result,$/;"	f	file:
unmap_refs_callback_data	grant-table.c	/^struct unmap_refs_callback_data {$/;"	s	file:
unmap_ring_vfree_hvm	xenbus/xenbus_client.c	/^struct unmap_ring_vfree_hvm$/;"	s	file:
unmask	events/events_internal.h	/^	void (*unmask)(unsigned port);$/;"	m	struct:evtchn_ops
unmask_evtchn	events/events_internal.h	/^static inline void unmask_evtchn(unsigned port)$/;"	f
unregister_and_remove_pcpu	pcpu.c	/^static void unregister_and_remove_pcpu(struct pcpu *pcpu)$/;"	f	file:
unregister_xenbus_watch	xenbus/xenbus_xs.c	/^EXPORT_SYMBOL_GPL(unregister_xenbus_watch);$/;"	v
unregister_xenbus_watch	xenbus/xenbus_xs.c	/^void unregister_xenbus_watch(struct xenbus_watch *watch)$/;"	f
unregister_xenstore_notifier	xenbus/xenbus_probe.c	/^EXPORT_SYMBOL_GPL(unregister_xenstore_notifier);$/;"	v
unregister_xenstore_notifier	xenbus/xenbus_probe.c	/^void unregister_xenstore_notifier(struct notifier_block *nb)$/;"	f
update_entry	grant-table.c	/^	void (*update_entry)(grant_ref_t ref, domid_t domid,$/;"	m	struct:gnttab_ops	file:
update_schedule	balloon.c	/^static enum bp_state update_schedule(enum bp_state state)$/;"	f	file:
upload_pm_data	xen-acpi-processor.c	/^static int upload_pm_data(struct acpi_processor *_pr)$/;"	f	file:
use_ptemod	gntdev.c	/^static int use_ptemod;$/;"	v	file:
user	evtchn.c	/^	struct per_user_data *user;$/;"	m	struct:user_evtchn	typeref:struct:user_evtchn::per_user_data	file:
user_err	privcmd.c	/^	int __user *user_err;$/;"	m	struct:mmap_batch_state	file:
user_evtchn	evtchn.c	/^struct user_evtchn {$/;"	s	file:
user_gfn	privcmd.c	/^	xen_pfn_t __user *user_gfn;$/;"	m	struct:mmap_batch_state	file:
users	gntalloc.c	/^	int users;$/;"	m	struct:gntalloc_vma_private_data	file:
users	gntalloc.c	/^	unsigned int users;          \/* Use count - when zero, waiting on Xen *\/$/;"	m	struct:gntalloc_gref	file:
users	gntdev.c	/^	atomic_t users;$/;"	m	struct:grant_map	file:
uuid	sys-hypervisor.c	/^HYPERVISOR_ATTR_RO(uuid);$/;"	v
uuid_hi	tmem.c	/^	u64 uuid_hi;$/;"	m	struct:tmem_pool_uuid	file:
uuid_lo	tmem.c	/^	u64 uuid_lo;$/;"	m	struct:tmem_pool_uuid	file:
uuid_show	sys-hypervisor.c	/^static ssize_t uuid_show(struct hyp_sysfs_attr *attr, char *buffer)$/;"	f	file:
uuid_show_fallback	sys-hypervisor.c	/^static ssize_t uuid_show_fallback(struct hyp_sysfs_attr *attr, char *buffer)$/;"	f	file:
v	xen-scsiback.c	/^	struct ids_tuple v;		\/* translate from *\/$/;"	m	struct:v2p_entry	typeref:struct:v2p_entry::ids_tuple	file:
v1	grant-table.c	/^	struct grant_entry_v1 *v1;$/;"	m	union:__anon14	typeref:struct:__anon14::grant_entry_v1	file:
v2p	xen-scsiback.c	/^	struct v2p_entry *v2p;$/;"	m	struct:vscsibk_pend	typeref:struct:vscsibk_pend::v2p_entry	file:
v2p_entry	xen-scsiback.c	/^struct v2p_entry {$/;"	s	file:
v2p_entry_lists	xen-scsiback.c	/^	struct list_head v2p_entry_lists;$/;"	m	struct:vscsibk_info	typeref:struct:vscsibk_info::list_head	file:
v2p_lock	xen-scsiback.c	/^	spinlock_t v2p_lock;$/;"	m	struct:vscsibk_info	file:
va	privcmd.c	/^	unsigned long va;$/;"	m	struct:mmap_batch_state	file:
va	privcmd.c	/^	unsigned long va;$/;"	m	struct:mmap_gfn_state	file:
vaddr	xen-scsiback.c	/^static unsigned long vaddr(struct vscsibk_pend *req, int seg)$/;"	f	file:
vaddr_page	xen-scsiback.c	/^static unsigned long vaddr_page(struct page *page)$/;"	f	file:
val	xen-pciback/conf_space_header.c	/^	u16 val;$/;"	m	struct:pci_cmd_info	file:
val	xen-pciback/conf_space_header.c	/^	u32 val;$/;"	m	struct:pci_bar_info	file:
valid_request	xen-pciback/conf_space.c	/^static inline int valid_request(int offset, int size)$/;"	f	file:
vcpu_hotplug	cpu_hotplug.c	/^static void vcpu_hotplug(unsigned int cpu)$/;"	f	file:
vcpu_online	cpu_hotplug.c	/^static int vcpu_online(unsigned int cpu)$/;"	f	file:
vec	xenbus/xenbus_xs.c	/^			char **vec;$/;"	m	struct:xs_stored_msg::__anon5::__anon7	file:
vec_size	xenbus/xenbus_xs.c	/^			unsigned int vec_size;$/;"	m	struct:xs_stored_msg::__anon5::__anon7	file:
vector	events/events_internal.h	/^			unsigned char vector;$/;"	m	struct:irq_info::__anon12::__anon13
verbose_request	xen-pciback/pciback_ops.c	/^int verbose_request;$/;"	v
version	privcmd.c	/^	int version;$/;"	m	struct:mmap_batch_state	file:
version_attrs	sys-hypervisor.c	/^static struct attribute *version_attrs[] = {$/;"	v	typeref:struct:attribute	file:
version_group	sys-hypervisor.c	/^static const struct attribute_group version_group = {$/;"	v	typeref:struct:attribute_group	file:
virq	events/events_internal.h	/^		unsigned short virq;$/;"	m	union:irq_info::__anon12
virq_from_irq	events/events_base.c	/^static unsigned virq_from_irq(unsigned irq)$/;"	f	file:
virtual_start	sys-hypervisor.c	/^HYPERVISOR_ATTR_RO(virtual_start);$/;"	v
virtual_start_show	sys-hypervisor.c	/^static ssize_t virtual_start_show(struct hyp_sysfs_attr *attr, char *buffer)$/;"	f	file:
vma	gntdev.c	/^	struct vm_area_struct *vma;$/;"	m	struct:grant_map	typeref:struct:grant_map::vm_area_struct	file:
vma	privcmd.c	/^	struct vm_area_struct *vma;$/;"	m	struct:mmap_batch_state	typeref:struct:mmap_batch_state::vm_area_struct	file:
vma	privcmd.c	/^	struct vm_area_struct *vma;$/;"	m	struct:mmap_gfn_state	typeref:struct:mmap_gfn_state::vm_area_struct	file:
vma	xlate_mmu.c	/^	struct vm_area_struct *vma;$/;"	m	struct:remap_data	typeref:struct:remap_data::vm_area_struct	file:
vpci_dev_data	xen-pciback/vpci.c	/^struct vpci_dev_data {$/;"	s	file:
vpd_address_write	xen-pciback/conf_space_capability.c	/^static int vpd_address_write(struct pci_dev *dev, int offset, u16 value,$/;"	f	file:
vscsibk_info	xen-scsiback.c	/^struct vscsibk_info {$/;"	s	file:
vscsibk_pend	xen-scsiback.c	/^struct vscsibk_pend {$/;"	s	file:
w	xen-pciback/conf_space.h	/^		} w;$/;"	m	union:config_field::__anon8	typeref:struct:config_field::__anon8::__anon10
wait_for_devices	xenbus/xenbus_probe_frontend.c	/^static void wait_for_devices(struct xenbus_driver *xendrv)$/;"	f	file:
wait_loop	xenbus/xenbus_probe_frontend.c	/^static bool wait_loop(unsigned long start, unsigned int max_delay,$/;"	f	file:
waiting_to_free	xen-scsiback.c	/^	wait_queue_head_t waiting_to_free;$/;"	m	struct:vscsibk_info	file:
wake_waiting	xenbus/xenbus_comms.c	/^static irqreturn_t wake_waiting(int irq, void *unused)$/;"	f	file:
warn_delay	grant-table.c	/^	uint16_t warn_delay;$/;"	m	struct:deferred_entry	file:
warned_on_write	xen-pciback/pciback.h	/^	unsigned int warned_on_write:1;$/;"	m	struct:xen_pcibk_dev_data
watch	xenbus/xenbus_dev_frontend.c	/^	struct xenbus_watch watch;$/;"	m	struct:watch_adapter	typeref:struct:watch_adapter::xenbus_watch	file:
watch	xenbus/xenbus_xs.c	/^		} watch;$/;"	m	union:xs_stored_msg::__anon5	typeref:struct:xs_stored_msg::__anon5::__anon7	file:
watch_adapter	xenbus/xenbus_dev_frontend.c	/^struct watch_adapter {$/;"	s	file:
watch_fired	xenbus/xenbus_dev_frontend.c	/^static void watch_fired(struct xenbus_watch *watch,$/;"	f	file:
watch_mutex	xenbus/xenbus_xs.c	/^	struct rw_semaphore watch_mutex;$/;"	m	struct:xs_handle	typeref:struct:xs_handle::rw_semaphore	file:
watch_otherend	xenbus/xenbus_probe.c	/^static int watch_otherend(struct xenbus_device *dev)$/;"	f	file:
watch_target	xen-balloon.c	/^static void watch_target(struct xenbus_watch *watch,$/;"	f	file:
watches	xenbus/xenbus_dev_frontend.c	/^	struct list_head watches;$/;"	m	struct:xenbus_file_priv	typeref:struct:xenbus_file_priv::list_head	file:
which	xen-pciback/conf_space_header.c	/^	int which;$/;"	m	struct:pci_bar_info	file:
write	xen-pciback/conf_space.h	/^			conf_byte_write write;$/;"	m	struct:config_field::__anon8::__anon11
write	xen-pciback/conf_space.h	/^			conf_dword_write write;$/;"	m	struct:config_field::__anon8::__anon9
write	xen-pciback/conf_space.h	/^			conf_word_write write;$/;"	m	struct:config_field::__anon8::__anon10
write_protect	xen-acpi-memhotplug.c	/^	unsigned short write_protect;	\/* memory read\/write attribute *\/$/;"	m	struct:acpi_memory_info	file:
xb_data_to_read	xenbus/xenbus_comms.c	/^int xb_data_to_read(void)$/;"	f
xb_deinit_comms	xenbus/xenbus_comms.c	/^void xb_deinit_comms(void)$/;"	f
xb_find_info	xenbus/xenbus_probe.c	/^struct xb_find_info {$/;"	s	file:
xb_init_comms	xenbus/xenbus_comms.c	/^int xb_init_comms(void)$/;"	f
xb_read	xenbus/xenbus_comms.c	/^int xb_read(void *data, unsigned len)$/;"	f
xb_wait_for_data_to_read	xenbus/xenbus_comms.c	/^int xb_wait_for_data_to_read(void)$/;"	f
xb_write	xenbus/xenbus_comms.c	/^int xb_write(const void *data, unsigned len)$/;"	f
xdev	xen-pciback/pciback.h	/^	struct xenbus_device *xdev;$/;"	m	struct:xen_pcibk_device	typeref:struct:xen_pcibk_device::xenbus_device
xen-evtchn-y	Makefile	/^xen-evtchn-y				:= evtchn.o$/;"	m
xen-gntalloc-y	Makefile	/^xen-gntalloc-y				:= gntalloc.o$/;"	m
xen-gntdev-y	Makefile	/^xen-gntdev-y				:= gntdev.o$/;"	m
xen-pciback-y	xen-pciback/Makefile	/^xen-pciback-y := pci_stub.o pciback_ops.o xenbus.o$/;"	m
xen-privcmd-y	Makefile	/^xen-privcmd-y				:= privcmd.o$/;"	m
xen_acpi_cpu_hotadd	xen-acpi-cpuhotplug.c	/^static acpi_status xen_acpi_cpu_hotadd(struct acpi_processor *pr)$/;"	f	file:
xen_acpi_memory_device_add	xen-acpi-memhotplug.c	/^static int xen_acpi_memory_device_add(struct acpi_device *device)$/;"	f	file:
xen_acpi_memory_device_driver	xen-acpi-memhotplug.c	/^static struct acpi_driver xen_acpi_memory_device_driver = {$/;"	v	typeref:struct:acpi_driver	file:
xen_acpi_memory_device_exit	xen-acpi-memhotplug.c	/^module_exit(xen_acpi_memory_device_exit);$/;"	v
xen_acpi_memory_device_exit	xen-acpi-memhotplug.c	/^static void __exit xen_acpi_memory_device_exit(void)$/;"	f	file:
xen_acpi_memory_device_init	xen-acpi-memhotplug.c	/^module_init(xen_acpi_memory_device_init);$/;"	v
xen_acpi_memory_device_init	xen-acpi-memhotplug.c	/^static int __init xen_acpi_memory_device_init(void)$/;"	f	file:
xen_acpi_memory_device_remove	xen-acpi-memhotplug.c	/^static int xen_acpi_memory_device_remove(struct acpi_device *device)$/;"	f	file:
xen_acpi_memory_enable_device	xen-acpi-memhotplug.c	/^static int xen_acpi_memory_enable_device(struct acpi_memory_device *mem_device)$/;"	f	file:
xen_acpi_notify_hypervisor_extended_sleep	acpi.c	/^int xen_acpi_notify_hypervisor_extended_sleep(u8 sleep_state,$/;"	f
xen_acpi_notify_hypervisor_sleep	acpi.c	/^int xen_acpi_notify_hypervisor_sleep(u8 sleep_state,$/;"	f
xen_acpi_notify_hypervisor_state	acpi.c	/^static int xen_acpi_notify_hypervisor_state(u8 sleep_state,$/;"	f	file:
xen_acpi_pad_idle_cpus	xen-acpi-pad.c	/^static int xen_acpi_pad_idle_cpus(unsigned int idle_nums)$/;"	f	file:
xen_acpi_pad_idle_cpus_num	xen-acpi-pad.c	/^static int xen_acpi_pad_idle_cpus_num(void)$/;"	f	file:
xen_acpi_pad_init	xen-acpi-pad.c	/^static int __init xen_acpi_pad_init(void)$/;"	f	file:
xen_acpi_pad_init	xen-acpi-pad.c	/^subsys_initcall(xen_acpi_pad_init);$/;"	v
xen_acpi_processor_add	xen-acpi-cpuhotplug.c	/^static int xen_acpi_processor_add(struct acpi_device *device)$/;"	f	file:
xen_acpi_processor_driver	xen-acpi-cpuhotplug.c	/^static struct acpi_driver xen_acpi_processor_driver = {$/;"	v	typeref:struct:acpi_driver	file:
xen_acpi_processor_enable	xen-acpi-cpuhotplug.c	/^static int xen_acpi_processor_enable(struct acpi_device *device)$/;"	f	file:
xen_acpi_processor_exit	xen-acpi-cpuhotplug.c	/^module_exit(xen_acpi_processor_exit);$/;"	v
xen_acpi_processor_exit	xen-acpi-cpuhotplug.c	/^static void __exit xen_acpi_processor_exit(void)$/;"	f	file:
xen_acpi_processor_exit	xen-acpi-processor.c	/^module_exit(xen_acpi_processor_exit);$/;"	v
xen_acpi_processor_exit	xen-acpi-processor.c	/^static void __exit xen_acpi_processor_exit(void)$/;"	f	file:
xen_acpi_processor_init	xen-acpi-cpuhotplug.c	/^module_init(xen_acpi_processor_init);$/;"	v
xen_acpi_processor_init	xen-acpi-cpuhotplug.c	/^static int __init xen_acpi_processor_init(void)$/;"	f	file:
xen_acpi_processor_init	xen-acpi-processor.c	/^device_initcall(xen_acpi_processor_init);$/;"	v
xen_acpi_processor_init	xen-acpi-processor.c	/^static int __init xen_acpi_processor_init(void)$/;"	f	file:
xen_acpi_processor_remove	xen-acpi-cpuhotplug.c	/^static int xen_acpi_processor_remove(struct acpi_device *device)$/;"	f	file:
xen_acpi_processor_resume	xen-acpi-processor.c	/^static int xen_acpi_processor_resume(struct notifier_block *nb,$/;"	f	file:
xen_acpi_processor_resume_nb	xen-acpi-processor.c	/^struct notifier_block xen_acpi_processor_resume_nb = {$/;"	v	typeref:struct:notifier_block
xen_add_device	pci.c	/^static int xen_add_device(struct device *dev)$/;"	f	file:
xen_allocate_irq	platform-pci.c	/^static int xen_allocate_irq(struct pci_dev *pdev)$/;"	f	file:
xen_allocate_irq_dynamic	events/events_base.c	/^static inline int __must_check xen_allocate_irq_dynamic(void)$/;"	f	file:
xen_allocate_irq_gsi	events/events_base.c	/^static int __must_check xen_allocate_irq_gsi(unsigned gsi)$/;"	f	file:
xen_allocate_irqs_dynamic	events/events_base.c	/^static int __must_check xen_allocate_irqs_dynamic(int nvec)$/;"	f	file:
xen_allocate_pirq_msi	events/events_base.c	/^int xen_allocate_pirq_msi(struct pci_dev *dev, struct msi_desc *msidesc)$/;"	f
xen_amba_notifier	arm-device.c	/^static int xen_amba_notifier(struct notifier_block *nb,$/;"	f	file:
xen_apic_id	xen-acpi-cpuhotplug.c	/^static int xen_apic_id(acpi_handle handle)$/;"	f	file:
xen_auto_xlat_grant_frames	grant-table.c	/^struct grant_frames xen_auto_xlat_grant_frames;$/;"	v	typeref:struct:grant_frames
xen_bind_pirq_gsi_to_irq	events/events_base.c	/^int xen_bind_pirq_gsi_to_irq(unsigned gsi,$/;"	f
xen_bind_pirq_msi_to_irq	events/events_base.c	/^int xen_bind_pirq_msi_to_irq(struct pci_dev *dev, struct msi_desc *msidesc,$/;"	f
xen_biovec_phys_mergeable	biomerge.c	/^EXPORT_SYMBOL(xen_biovec_phys_mergeable);$/;"	v
xen_biovec_phys_mergeable	biomerge.c	/^bool xen_biovec_phys_mergeable(const struct bio_vec *vec1,$/;"	f
xen_bus_to_phys	swiotlb-xen.c	/^static inline phys_addr_t xen_bus_to_phys(dma_addr_t baddr)$/;"	f	file:
xen_bus_type	xenbus/xenbus_probe.h	/^struct xen_bus_type {$/;"	s
xen_callback_vector	events/events_base.c	/^void xen_callback_vector(void) {}$/;"	f
xen_callback_vector	events/events_base.c	/^void xen_callback_vector(void)$/;"	f
xen_clear_irq_pending	events/events_base.c	/^EXPORT_SYMBOL(xen_clear_irq_pending);$/;"	v
xen_clear_irq_pending	events/events_base.c	/^void xen_clear_irq_pending(int irq)$/;"	f
xen_compilation_group	sys-hypervisor.c	/^static const struct attribute_group xen_compilation_group = {$/;"	v	typeref:struct:attribute_group	file:
xen_compile_attrs	sys-hypervisor.c	/^static struct attribute *xen_compile_attrs[] = {$/;"	v	typeref:struct:attribute	file:
xen_copy_pct_data	xen-acpi-processor.c	/^static int xen_copy_pct_data(struct acpi_pct_register *pct,$/;"	f	file:
xen_copy_psd_data	xen-acpi-processor.c	/^static int xen_copy_psd_data(struct acpi_processor *_pr,$/;"	f	file:
xen_copy_pss_data	xen-acpi-processor.c	/^xen_copy_pss_data(struct acpi_processor *_pr,$/;"	f	file:
xen_dbgp_external_startup	dbgp.c	/^EXPORT_SYMBOL_GPL(xen_dbgp_external_startup);$/;"	v
xen_dbgp_external_startup	dbgp.c	/^int xen_dbgp_external_startup(struct usb_hcd *hcd)$/;"	f
xen_dbgp_op	dbgp.c	/^static int xen_dbgp_op(struct usb_hcd *hcd, int op)$/;"	f	file:
xen_dbgp_reset_prep	dbgp.c	/^EXPORT_SYMBOL_GPL(xen_dbgp_reset_prep);$/;"	v
xen_dbgp_reset_prep	dbgp.c	/^int xen_dbgp_reset_prep(struct usb_hcd *hcd)$/;"	f
xen_debug_interrupt	events/events_2l.c	/^irqreturn_t xen_debug_interrupt(int irq, void *dev_id)$/;"	f
xen_destroy_irq	events/events_base.c	/^int xen_destroy_irq(int irq)$/;"	f
xen_dynamic_chip	events/events_base.c	/^static struct irq_chip xen_dynamic_chip;$/;"	v	typeref:struct:irq_chip	file:
xen_efi_get_next_high_mono_count	efi.c	/^EXPORT_SYMBOL_GPL(xen_efi_get_next_high_mono_count);$/;"	v
xen_efi_get_next_high_mono_count	efi.c	/^efi_status_t xen_efi_get_next_high_mono_count(u32 *count)$/;"	f
xen_efi_get_next_variable	efi.c	/^EXPORT_SYMBOL_GPL(xen_efi_get_next_variable);$/;"	v
xen_efi_get_next_variable	efi.c	/^efi_status_t xen_efi_get_next_variable(unsigned long *name_size,$/;"	f
xen_efi_get_time	efi.c	/^EXPORT_SYMBOL_GPL(xen_efi_get_time);$/;"	v
xen_efi_get_time	efi.c	/^efi_status_t xen_efi_get_time(efi_time_t *tm, efi_time_cap_t *tc)$/;"	f
xen_efi_get_variable	efi.c	/^EXPORT_SYMBOL_GPL(xen_efi_get_variable);$/;"	v
xen_efi_get_variable	efi.c	/^efi_status_t xen_efi_get_variable(efi_char16_t *name, efi_guid_t *vendor,$/;"	f
xen_efi_get_wakeup_time	efi.c	/^EXPORT_SYMBOL_GPL(xen_efi_get_wakeup_time);$/;"	v
xen_efi_get_wakeup_time	efi.c	/^efi_status_t xen_efi_get_wakeup_time(efi_bool_t *enabled, efi_bool_t *pending,$/;"	f
xen_efi_query_capsule_caps	efi.c	/^EXPORT_SYMBOL_GPL(xen_efi_query_capsule_caps);$/;"	v
xen_efi_query_capsule_caps	efi.c	/^efi_status_t xen_efi_query_capsule_caps(efi_capsule_header_t **capsules,$/;"	f
xen_efi_query_variable_info	efi.c	/^EXPORT_SYMBOL_GPL(xen_efi_query_variable_info);$/;"	v
xen_efi_query_variable_info	efi.c	/^efi_status_t xen_efi_query_variable_info(u32 attr, u64 *storage_space,$/;"	f
xen_efi_set_time	efi.c	/^EXPORT_SYMBOL_GPL(xen_efi_set_time);$/;"	v
xen_efi_set_time	efi.c	/^efi_status_t xen_efi_set_time(efi_time_t *tm)$/;"	f
xen_efi_set_variable	efi.c	/^EXPORT_SYMBOL_GPL(xen_efi_set_variable);$/;"	v
xen_efi_set_variable	efi.c	/^efi_status_t xen_efi_set_variable(efi_char16_t *name, efi_guid_t *vendor,$/;"	f
xen_efi_set_wakeup_time	efi.c	/^EXPORT_SYMBOL_GPL(xen_efi_set_wakeup_time);$/;"	v
xen_efi_set_wakeup_time	efi.c	/^efi_status_t xen_efi_set_wakeup_time(efi_bool_t enabled, efi_time_t *tm)$/;"	f
xen_efi_update_capsule	efi.c	/^EXPORT_SYMBOL_GPL(xen_efi_update_capsule);$/;"	v
xen_efi_update_capsule	efi.c	/^efi_status_t xen_efi_update_capsule(efi_capsule_header_t **capsules,$/;"	f
xen_event_channel_op_compat	fallback.c	/^EXPORT_SYMBOL_GPL(xen_event_channel_op_compat);$/;"	v
xen_event_channel_op_compat	fallback.c	/^int xen_event_channel_op_compat(int cmd, void *arg)$/;"	f
xen_evtchn_2l_init	events/events_2l.c	/^void __init xen_evtchn_2l_init(void)$/;"	f
xen_evtchn_close	events/events_base.c	/^static void xen_evtchn_close(unsigned int port)$/;"	f	file:
xen_evtchn_cpu_dead	events/events_fifo.c	/^static int xen_evtchn_cpu_dead(unsigned int cpu)$/;"	f	file:
xen_evtchn_cpu_prepare	events/events_fifo.c	/^static int xen_evtchn_cpu_prepare(unsigned int cpu)$/;"	f	file:
xen_evtchn_do_upcall	events/events_base.c	/^void xen_evtchn_do_upcall(struct pt_regs *regs)$/;"	f
xen_evtchn_fifo_init	events/events_fifo.c	/^int __init xen_evtchn_fifo_init(void)$/;"	f
xen_evtchn_handle_events	events/events_internal.h	/^static inline void xen_evtchn_handle_events(unsigned cpu)$/;"	f
xen_evtchn_mask_all	events/events_base.c	/^static void xen_evtchn_mask_all(void)$/;"	f	file:
xen_evtchn_max_channels	events/events_internal.h	/^static inline unsigned xen_evtchn_max_channels(void)$/;"	f
xen_evtchn_nr_channels	events/events_base.c	/^EXPORT_SYMBOL_GPL(xen_evtchn_nr_channels);$/;"	v
xen_evtchn_nr_channels	events/events_base.c	/^unsigned xen_evtchn_nr_channels(void)$/;"	f
xen_evtchn_port_bind_to_cpu	events/events_internal.h	/^static inline void xen_evtchn_port_bind_to_cpu(struct irq_info *info,$/;"	f
xen_evtchn_port_setup	events/events_internal.h	/^static inline int xen_evtchn_port_setup(struct irq_info *info)$/;"	f
xen_evtchn_resume	events/events_internal.h	/^static inline void xen_evtchn_resume(void)$/;"	f
xen_feature_show	sys-hypervisor.c	/^static ssize_t xen_feature_show(int index, char *buffer)$/;"	f	file:
xen_features	features.c	/^EXPORT_SYMBOL_GPL(xen_features);$/;"	v
xen_for_each_gfn	xlate_mmu.c	/^static void xen_for_each_gfn(struct page **pages, unsigned nr_gfn,$/;"	f	file:
xen_free_irq	events/events_base.c	/^static void xen_free_irq(unsigned irq)$/;"	f	file:
xen_get_runstate_snapshot	time.c	/^void xen_get_runstate_snapshot(struct vcpu_runstate_info *res)$/;"	f
xen_get_runstate_snapshot_cpu	time.c	/^static void xen_get_runstate_snapshot_cpu(struct vcpu_runstate_info *res,$/;"	f	file:
xen_gfn_fn_t	xlate_mmu.c	/^typedef void (*xen_gfn_fn_t)(unsigned long gfn, void *data);$/;"	t	file:
xen_hotadd_cpu	xen-acpi-cpuhotplug.c	/^static int xen_hotadd_cpu(struct acpi_processor *pr)$/;"	f	file:
xen_hotadd_memory	xen-acpi-memhotplug.c	/^static int xen_hotadd_memory(int pxm, struct acpi_memory_info *info)$/;"	f	file:
xen_hotplug_unpopulated	balloon.c	/^static int xen_hotplug_unpopulated;$/;"	v	file:
xen_hvm_evtchn_do_upcall	events/events_base.c	/^EXPORT_SYMBOL_GPL(xen_hvm_evtchn_do_upcall);$/;"	v
xen_hvm_evtchn_do_upcall	events/events_base.c	/^void xen_hvm_evtchn_do_upcall(void)$/;"	f
xen_in_preemptible_hcall	preempt.c	/^EXPORT_SYMBOL_GPL(xen_in_preemptible_hcall);$/;"	v
xen_init_IRQ	events/events_base.c	/^void __init xen_init_IRQ(void)$/;"	f
xen_io_tlb_end	swiotlb-xen.c	/^static char *xen_io_tlb_start, *xen_io_tlb_end;$/;"	v	file:
xen_io_tlb_nslabs	swiotlb-xen.c	/^static unsigned long xen_io_tlb_nslabs;$/;"	v	file:
xen_io_tlb_start	swiotlb-xen.c	/^static char *xen_io_tlb_start, *xen_io_tlb_end;$/;"	v	file:
xen_irq_from_gsi	events/events_base.c	/^EXPORT_SYMBOL_GPL(xen_irq_from_gsi);$/;"	v
xen_irq_from_gsi	events/events_base.c	/^int xen_irq_from_gsi(unsigned gsi)$/;"	f
xen_irq_from_pirq	events/events_base.c	/^int xen_irq_from_pirq(unsigned pirq)$/;"	f
xen_irq_info_cleanup	events/events_base.c	/^static void xen_irq_info_cleanup(struct irq_info *info)$/;"	f	file:
xen_irq_info_common_setup	events/events_base.c	/^static int xen_irq_info_common_setup(struct irq_info *info,$/;"	f	file:
xen_irq_info_evtchn_setup	events/events_base.c	/^static int xen_irq_info_evtchn_setup(unsigned irq,$/;"	f	file:
xen_irq_info_ipi_setup	events/events_base.c	/^static int xen_irq_info_ipi_setup(unsigned cpu,$/;"	f	file:
xen_irq_info_pirq_setup	events/events_base.c	/^static int xen_irq_info_pirq_setup(unsigned irq,$/;"	f	file:
xen_irq_info_virq_setup	events/events_base.c	/^static int xen_irq_info_virq_setup(unsigned cpu,$/;"	f	file:
xen_irq_init	events/events_base.c	/^static void xen_irq_init(unsigned irq)$/;"	f	file:
xen_irq_resume	events/events_base.c	/^void xen_irq_resume(void)$/;"	f
xen_irq_type	events/events_internal.h	/^enum xen_irq_type {$/;"	g
xen_late_init_mcelog	mcelog.c	/^device_initcall(xen_late_init_mcelog);$/;"	v
xen_late_init_mcelog	mcelog.c	/^static int __init xen_late_init_mcelog(void)$/;"	f	file:
xen_map_device_mmio	arm-device.c	/^static int xen_map_device_mmio(const struct resource *resources,$/;"	f	file:
xen_maybe_preempt_hcall	preempt.c	/^asmlinkage __visible void xen_maybe_preempt_hcall(void)$/;"	f
xen_mce_chrdev_device	mcelog.c	/^static struct miscdevice xen_mce_chrdev_device = {$/;"	v	typeref:struct:miscdevice	file:
xen_mce_chrdev_ioctl	mcelog.c	/^static long xen_mce_chrdev_ioctl(struct file *f, unsigned int cmd,$/;"	f	file:
xen_mce_chrdev_open	mcelog.c	/^static int xen_mce_chrdev_open(struct inode *inode, struct file *file)$/;"	f	file:
xen_mce_chrdev_open_count	mcelog.c	/^static int xen_mce_chrdev_open_count;	\/* #times opened *\/$/;"	v	file:
xen_mce_chrdev_open_exclu	mcelog.c	/^static int xen_mce_chrdev_open_exclu;	\/* already open exclusive? *\/$/;"	v	file:
xen_mce_chrdev_ops	mcelog.c	/^static const struct file_operations xen_mce_chrdev_ops = {$/;"	v	typeref:struct:file_operations	file:
xen_mce_chrdev_poll	mcelog.c	/^static unsigned int xen_mce_chrdev_poll(struct file *file, poll_table *wait)$/;"	f	file:
xen_mce_chrdev_read	mcelog.c	/^static ssize_t xen_mce_chrdev_read(struct file *filp, char __user *ubuf,$/;"	f	file:
xen_mce_chrdev_release	mcelog.c	/^static int xen_mce_chrdev_release(struct inode *inode, struct file *file)$/;"	f	file:
xen_mce_interrupt	mcelog.c	/^static irqreturn_t xen_mce_interrupt(int irq, void *dev_id)$/;"	f	file:
xen_mce_log	mcelog.c	/^static void xen_mce_log(struct xen_mce *mce)$/;"	f	file:
xen_mce_work_fn	mcelog.c	/^static void xen_mce_work_fn(struct work_struct *work)$/;"	f	file:
xen_mcelog	mcelog.c	/^static struct xen_mce_log xen_mcelog = {$/;"	v	typeref:struct:xen_mce_log	file:
xen_mcfg_late	pci.c	/^static int __init xen_mcfg_late(void)$/;"	f	file:
xen_mcfg_late	pci.c	/^subsys_initcall_sync(xen_mcfg_late);$/;"	v
xen_memory_nb	balloon.c	/^static struct notifier_block xen_memory_nb = {$/;"	v	typeref:struct:notifier_block	file:
xen_memory_notifier	balloon.c	/^static int xen_memory_notifier(struct notifier_block *nb, unsigned long val, void *v)$/;"	f	file:
xen_online_page	balloon.c	/^static void xen_online_page(struct page *page)$/;"	f	file:
xen_pci_notifier	pci.c	/^static int xen_pci_notifier(struct notifier_block *nb,$/;"	f	file:
xen_pcibios_err_to_errno	xen-pciback/conf_space.c	/^static int xen_pcibios_err_to_errno(int err)$/;"	f	file:
xen_pcibk_add_pci_dev	xen-pciback/pciback.h	/^static inline int xen_pcibk_add_pci_dev(struct xen_pcibk_device *pdev,$/;"	f
xen_pcibk_aer_wait_queue	xen-pciback/pci_stub.c	/^wait_queue_head_t xen_pcibk_aer_wait_queue;$/;"	v
xen_pcibk_attach	xen-pciback/xenbus.c	/^static int xen_pcibk_attach(struct xen_pcibk_device *pdev)$/;"	f	file:
xen_pcibk_backend	xen-pciback/pciback.h	/^struct xen_pcibk_backend {$/;"	s
xen_pcibk_backend	xen-pciback/xenbus.c	/^const struct xen_pcibk_backend *__read_mostly xen_pcibk_backend;$/;"	v	typeref:struct:__read_mostly
xen_pcibk_be_watch	xen-pciback/xenbus.c	/^static void xen_pcibk_be_watch(struct xenbus_watch *watch,$/;"	f	file:
xen_pcibk_cleanup	xen-pciback/pci_stub.c	/^module_exit(xen_pcibk_cleanup);$/;"	v
xen_pcibk_cleanup	xen-pciback/pci_stub.c	/^static void __exit xen_pcibk_cleanup(void)$/;"	f	file:
xen_pcibk_config_add_field	xen-pciback/conf_space.h	/^static inline int xen_pcibk_config_add_field(struct pci_dev *dev,$/;"	f
xen_pcibk_config_add_field_offset	xen-pciback/conf_space.c	/^int xen_pcibk_config_add_field_offset(struct pci_dev *dev,$/;"	f
xen_pcibk_config_add_fields	xen-pciback/conf_space.h	/^static inline int xen_pcibk_config_add_fields(struct pci_dev *dev,$/;"	f
xen_pcibk_config_add_fields_offset	xen-pciback/conf_space.h	/^static inline int xen_pcibk_config_add_fields_offset(struct pci_dev *dev,$/;"	f
xen_pcibk_config_capability	xen-pciback/conf_space_capability.c	/^struct xen_pcibk_config_capability {$/;"	s	file:
xen_pcibk_config_capability_add_fields	xen-pciback/conf_space_capability.c	/^int xen_pcibk_config_capability_add_fields(struct pci_dev *dev)$/;"	f
xen_pcibk_config_capability_init	xen-pciback/conf_space_capability.c	/^int xen_pcibk_config_capability_init(void)$/;"	f
xen_pcibk_config_capability_pm	xen-pciback/conf_space_capability.c	/^static struct xen_pcibk_config_capability xen_pcibk_config_capability_pm = {$/;"	v	typeref:struct:xen_pcibk_config_capability	file:
xen_pcibk_config_capability_vpd	xen-pciback/conf_space_capability.c	/^static struct xen_pcibk_config_capability xen_pcibk_config_capability_vpd = {$/;"	v	typeref:struct:xen_pcibk_config_capability	file:
xen_pcibk_config_field_free	xen-pciback/conf_space_quirks.c	/^void xen_pcibk_config_field_free(struct config_field *field)$/;"	f
xen_pcibk_config_free_dev	xen-pciback/conf_space.c	/^void xen_pcibk_config_free_dev(struct pci_dev *dev)$/;"	f
xen_pcibk_config_free_dyn_fields	xen-pciback/conf_space.c	/^void xen_pcibk_config_free_dyn_fields(struct pci_dev *dev)$/;"	f
xen_pcibk_config_header_add_fields	xen-pciback/conf_space_header.c	/^int xen_pcibk_config_header_add_fields(struct pci_dev *dev)$/;"	f
xen_pcibk_config_init	xen-pciback/conf_space.c	/^int xen_pcibk_config_init(void)$/;"	f
xen_pcibk_config_init_dev	xen-pciback/conf_space.c	/^int xen_pcibk_config_init_dev(struct pci_dev *dev)$/;"	f
xen_pcibk_config_quirk	xen-pciback/conf_space_quirks.h	/^struct xen_pcibk_config_quirk {$/;"	s
xen_pcibk_config_quirk_release	xen-pciback/conf_space_quirks.c	/^int xen_pcibk_config_quirk_release(struct pci_dev *dev)$/;"	f
xen_pcibk_config_quirks_add_field	xen-pciback/conf_space_quirks.c	/^int xen_pcibk_config_quirks_add_field(struct pci_dev *dev, struct config_field$/;"	f
xen_pcibk_config_quirks_init	xen-pciback/conf_space_quirks.c	/^int xen_pcibk_config_quirks_init(struct pci_dev *dev)$/;"	f
xen_pcibk_config_read	xen-pciback/conf_space.c	/^int xen_pcibk_config_read(struct pci_dev *dev, int offset, int size,$/;"	f
xen_pcibk_config_reset_dev	xen-pciback/conf_space.c	/^void xen_pcibk_config_reset_dev(struct pci_dev *dev)$/;"	f
xen_pcibk_config_write	xen-pciback/conf_space.c	/^int xen_pcibk_config_write(struct pci_dev *dev, int offset, int size, u32 value)$/;"	f
xen_pcibk_control_isr	xen-pciback/pciback_ops.c	/^static void xen_pcibk_control_isr(struct pci_dev *dev, int reset)$/;"	f	file:
xen_pcibk_dev_data	xen-pciback/pciback.h	/^struct xen_pcibk_dev_data {$/;"	s
xen_pcibk_device	xen-pciback/pciback.h	/^struct xen_pcibk_device {$/;"	s
xen_pcibk_disable_msi	xen-pciback/pciback_ops.c	/^int xen_pcibk_disable_msi(struct xen_pcibk_device *pdev,$/;"	f	file:
xen_pcibk_disable_msix	xen-pciback/pciback_ops.c	/^int xen_pcibk_disable_msix(struct xen_pcibk_device *pdev,$/;"	f	file:
xen_pcibk_disconnect	xen-pciback/xenbus.c	/^static void xen_pcibk_disconnect(struct xen_pcibk_device *pdev)$/;"	f	file:
xen_pcibk_do_attach	xen-pciback/xenbus.c	/^static int xen_pcibk_do_attach(struct xen_pcibk_device *pdev, int gnt_ref,$/;"	f	file:
xen_pcibk_do_op	xen-pciback/pciback_ops.c	/^void xen_pcibk_do_op(struct work_struct *data)$/;"	f
xen_pcibk_driver	xen-pciback/xenbus.c	/^static struct xenbus_driver xen_pcibk_driver = {$/;"	v	typeref:struct:xenbus_driver	file:
xen_pcibk_enable_msi	xen-pciback/pciback_ops.c	/^int xen_pcibk_enable_msi(struct xen_pcibk_device *pdev,$/;"	f	file:
xen_pcibk_enable_msix	xen-pciback/pciback_ops.c	/^int xen_pcibk_enable_msix(struct xen_pcibk_device *pdev,$/;"	f	file:
xen_pcibk_error_detected	xen-pciback/pci_stub.c	/^static pci_ers_result_t xen_pcibk_error_detected(struct pci_dev *dev,$/;"	f	file:
xen_pcibk_error_handler	xen-pciback/pci_stub.c	/^static const struct pci_error_handlers xen_pcibk_error_handler = {$/;"	v	typeref:struct:pci_error_handlers	file:
xen_pcibk_error_resume	xen-pciback/pci_stub.c	/^static void xen_pcibk_error_resume(struct pci_dev *dev)$/;"	f	file:
xen_pcibk_export_device	xen-pciback/xenbus.c	/^static int xen_pcibk_export_device(struct xen_pcibk_device *pdev,$/;"	f	file:
xen_pcibk_field_is_dup	xen-pciback/conf_space_quirks.c	/^int xen_pcibk_field_is_dup(struct pci_dev *dev, unsigned int reg)$/;"	f
xen_pcibk_find_quirk	xen-pciback/conf_space_quirks.c	/^static struct xen_pcibk_config_quirk *xen_pcibk_find_quirk(struct pci_dev *dev)$/;"	f	file:
xen_pcibk_frontend_changed	xen-pciback/xenbus.c	/^static void xen_pcibk_frontend_changed(struct xenbus_device *xdev,$/;"	f	file:
xen_pcibk_get_pci_dev	xen-pciback/pciback.h	/^xen_pcibk_get_pci_dev(struct xen_pcibk_device *pdev, unsigned int domain,$/;"	f
xen_pcibk_get_pcifront_dev	xen-pciback/pciback.h	/^static inline int xen_pcibk_get_pcifront_dev(struct pci_dev *pcidev,$/;"	f
xen_pcibk_guest_interrupt	xen-pciback/pciback_ops.c	/^static irqreturn_t xen_pcibk_guest_interrupt(int irq, void *dev_id)$/;"	f	file:
xen_pcibk_handle_event	xen-pciback/pciback_ops.c	/^irqreturn_t xen_pcibk_handle_event(int irq, void *dev_id)$/;"	f
xen_pcibk_ids	xen-pciback/xenbus.c	/^static const struct xenbus_device_id xen_pcibk_ids[] = {$/;"	v	typeref:struct:xenbus_device_id	file:
xen_pcibk_init	xen-pciback/pci_stub.c	/^module_init(xen_pcibk_init);$/;"	v
xen_pcibk_init	xen-pciback/pci_stub.c	/^static int __init xen_pcibk_init(void)$/;"	f	file:
xen_pcibk_init_devices	xen-pciback/pciback.h	/^static inline int xen_pcibk_init_devices(struct xen_pcibk_device *pdev)$/;"	f
xen_pcibk_mmio_enabled	xen-pciback/pci_stub.c	/^static pci_ers_result_t xen_pcibk_mmio_enabled(struct pci_dev *dev)$/;"	f	file:
xen_pcibk_passthrough_backend	xen-pciback/passthrough.c	/^const struct xen_pcibk_backend xen_pcibk_passthrough_backend = {$/;"	v	typeref:struct:xen_pcibk_backend
xen_pcibk_pci_driver	xen-pciback/pci_stub.c	/^static struct pci_driver xen_pcibk_pci_driver = {$/;"	v	typeref:struct:pci_driver	file:
xen_pcibk_permissive	xen-pciback/conf_space.c	/^bool xen_pcibk_permissive;$/;"	v
xen_pcibk_publish_pci_dev	xen-pciback/xenbus.c	/^static int xen_pcibk_publish_pci_dev(struct xen_pcibk_device *pdev,$/;"	f	file:
xen_pcibk_publish_pci_root	xen-pciback/xenbus.c	/^static int xen_pcibk_publish_pci_root(struct xen_pcibk_device *pdev,$/;"	f	file:
xen_pcibk_publish_pci_roots	xen-pciback/pciback.h	/^static inline int xen_pcibk_publish_pci_roots(struct xen_pcibk_device *pdev,$/;"	f
xen_pcibk_quirks	xen-pciback/conf_space_quirks.c	/^LIST_HEAD(xen_pcibk_quirks);$/;"	v
xen_pcibk_read_device	xen-pciback/conf_space_header.c	/^static int xen_pcibk_read_device(struct pci_dev *dev, int offset,$/;"	f	file:
xen_pcibk_read_vendor	xen-pciback/conf_space_header.c	/^static int xen_pcibk_read_vendor(struct pci_dev *dev, int offset,$/;"	f	file:
xen_pcibk_reconfigure	xen-pciback/xenbus.c	/^static int xen_pcibk_reconfigure(struct xen_pcibk_device *pdev)$/;"	f	file:
xen_pcibk_release_devices	xen-pciback/pciback.h	/^static inline void xen_pcibk_release_devices(struct xen_pcibk_device *pdev)$/;"	f
xen_pcibk_release_pci_dev	xen-pciback/pciback.h	/^static inline void xen_pcibk_release_pci_dev(struct xen_pcibk_device *pdev,$/;"	f
xen_pcibk_remove_device	xen-pciback/xenbus.c	/^static int xen_pcibk_remove_device(struct xen_pcibk_device *pdev,$/;"	f	file:
xen_pcibk_reset_device	xen-pciback/pciback_ops.c	/^void xen_pcibk_reset_device(struct pci_dev *dev)$/;"	f
xen_pcibk_setup_backend	xen-pciback/xenbus.c	/^static int xen_pcibk_setup_backend(struct xen_pcibk_device *pdev)$/;"	f	file:
xen_pcibk_slot_reset	xen-pciback/pci_stub.c	/^static pci_ers_result_t xen_pcibk_slot_reset(struct pci_dev *dev)$/;"	f	file:
xen_pcibk_test_and_schedule_op	xen-pciback/pciback_ops.c	/^void xen_pcibk_test_and_schedule_op(struct xen_pcibk_device *pdev)$/;"	f
xen_pcibk_vpci_backend	xen-pciback/vpci.c	/^const struct xen_pcibk_backend xen_pcibk_vpci_backend = {$/;"	v	typeref:struct:xen_pcibk_backend
xen_pcibk_xenbus_probe	xen-pciback/xenbus.c	/^static int xen_pcibk_xenbus_probe(struct xenbus_device *dev,$/;"	f	file:
xen_pcibk_xenbus_register	xen-pciback/xenbus.c	/^int __init xen_pcibk_xenbus_register(void)$/;"	f
xen_pcibk_xenbus_remove	xen-pciback/xenbus.c	/^static int xen_pcibk_xenbus_remove(struct xenbus_device *dev)$/;"	f	file:
xen_pcibk_xenbus_unregister	xen-pciback/xenbus.c	/^void __exit xen_pcibk_xenbus_unregister(void)$/;"	f
xen_pcpu_down	pcpu.c	/^static int xen_pcpu_down(uint32_t cpu_id)$/;"	f	file:
xen_pcpu_hotplug_sync	pcpu.c	/^EXPORT_SYMBOL_GPL(xen_pcpu_hotplug_sync);$/;"	v
xen_pcpu_hotplug_sync	pcpu.c	/^void xen_pcpu_hotplug_sync(void)$/;"	f
xen_pcpu_id	pcpu.c	/^EXPORT_SYMBOL_GPL(xen_pcpu_id);$/;"	v
xen_pcpu_id	pcpu.c	/^int xen_pcpu_id(uint32_t acpi_id)$/;"	f
xen_pcpu_init	pcpu.c	/^arch_initcall(xen_pcpu_init);$/;"	v
xen_pcpu_init	pcpu.c	/^static int __init xen_pcpu_init(void)$/;"	f	file:
xen_pcpu_interrupt	pcpu.c	/^static irqreturn_t xen_pcpu_interrupt(int irq, void *dev_id)$/;"	f	file:
xen_pcpu_online	pcpu.c	/^static bool xen_pcpu_online(uint32_t flags)$/;"	f	file:
xen_pcpu_subsys	pcpu.c	/^static struct bus_type xen_pcpu_subsys = {$/;"	v	typeref:struct:bus_type	file:
xen_pcpu_up	pcpu.c	/^static int xen_pcpu_up(uint32_t cpu_id)$/;"	f	file:
xen_pcpu_work_fn	pcpu.c	/^static void xen_pcpu_work_fn(struct work_struct *work)$/;"	f	file:
xen_percpu_chip	events/events_base.c	/^static struct irq_chip xen_percpu_chip;$/;"	v	typeref:struct:irq_chip	file:
xen_phys_to_bus	swiotlb-xen.c	/^static inline dma_addr_t xen_phys_to_bus(phys_addr_t paddr)$/;"	f	file:
xen_physdev_op_compat	fallback.c	/^EXPORT_SYMBOL_GPL(xen_physdev_op_compat);$/;"	v
xen_physdev_op_compat	fallback.c	/^int xen_physdev_op_compat(int cmd, void *arg)$/;"	f
xen_pirq_chip	events/events_base.c	/^static struct irq_chip xen_pirq_chip;$/;"	v	typeref:struct:irq_chip	file:
xen_pirq_from_irq	events/events_base.c	/^EXPORT_SYMBOL_GPL(xen_pirq_from_irq);$/;"	v
xen_pirq_from_irq	events/events_base.c	/^int xen_pirq_from_irq(unsigned irq)$/;"	f
xen_platform_notifier	arm-device.c	/^static int xen_platform_notifier(struct notifier_block *nb,$/;"	f	file:
xen_pmu_attrs	sys-hypervisor.c	/^static struct attribute *xen_pmu_attrs[] = {$/;"	v	typeref:struct:attribute	file:
xen_pmu_group	sys-hypervisor.c	/^static const struct attribute_group xen_pmu_group = {$/;"	v	typeref:struct:attribute_group	file:
xen_poll_irq	events/events_base.c	/^void xen_poll_irq(int irq)$/;"	f
xen_poll_irq_timeout	events/events_base.c	/^EXPORT_SYMBOL(xen_poll_irq_timeout);$/;"	v
xen_poll_irq_timeout	events/events_base.c	/^void xen_poll_irq_timeout(int irq, u64 timeout)$/;"	f
xen_privcmd_fops	privcmd.c	/^EXPORT_SYMBOL_GPL(xen_privcmd_fops);$/;"	v
xen_privcmd_fops	privcmd.c	/^const struct file_operations xen_privcmd_fops = {$/;"	v	typeref:struct:file_operations
xen_properties_attrs	sys-hypervisor.c	/^static struct attribute *xen_properties_attrs[] = {$/;"	v	typeref:struct:attribute	file:
xen_properties_group	sys-hypervisor.c	/^static const struct attribute_group xen_properties_group = {$/;"	v	typeref:struct:attribute_group	file:
xen_reboot_nb	manage.c	/^static struct notifier_block xen_reboot_nb = {$/;"	v	typeref:struct:notifier_block	file:
xen_remove_device	pci.c	/^static int xen_remove_device(struct device *dev)$/;"	f	file:
xen_resume_notifier_register	manage.c	/^EXPORT_SYMBOL_GPL(xen_resume_notifier_register);$/;"	v
xen_resume_notifier_register	manage.c	/^void xen_resume_notifier_register(struct notifier_block *nb)$/;"	f
xen_resume_notifier_unregister	manage.c	/^EXPORT_SYMBOL_GPL(xen_resume_notifier_unregister);$/;"	v
xen_resume_notifier_unregister	manage.c	/^void xen_resume_notifier_unregister(struct notifier_block *nb)$/;"	f
xen_root	balloon.c	/^static struct ctl_table xen_root[] = {$/;"	v	typeref:struct:ctl_table	file:
xen_selfballoon_init	xen-selfballoon.c	/^EXPORT_SYMBOL(xen_selfballoon_init);$/;"	v
xen_selfballoon_init	xen-selfballoon.c	/^int xen_selfballoon_init(bool use_selfballooning, bool use_frontswap_selfshrink)$/;"	f
xen_send_IPI_one	events/events_base.c	/^void xen_send_IPI_one(unsigned int cpu, enum ipi_vector vector)$/;"	f
xen_set_callback_via	events/events_base.c	/^EXPORT_SYMBOL_GPL(xen_set_callback_via);$/;"	v
xen_set_callback_via	events/events_base.c	/^int xen_set_callback_via(uint64_t via)$/;"	f
xen_set_irq_pending	events/events_base.c	/^void xen_set_irq_pending(int irq)$/;"	f
xen_set_irq_priority	events/events_base.c	/^EXPORT_SYMBOL_GPL(xen_set_irq_priority);$/;"	v
xen_set_irq_priority	events/events_base.c	/^int xen_set_irq_priority(unsigned irq, unsigned priority)$/;"	f
xen_set_nslabs	swiotlb-xen.c	/^static unsigned long xen_set_nslabs(unsigned long nr_tbl)$/;"	f	file:
xen_setup_features	features.c	/^void xen_setup_features(void)$/;"	f
xen_setup_runstate_info	time.c	/^void xen_setup_runstate_info(int cpu)$/;"	f
xen_setup_shutdown_event	manage.c	/^EXPORT_SYMBOL_GPL(xen_setup_shutdown_event);$/;"	v
xen_setup_shutdown_event	manage.c	/^int xen_setup_shutdown_event(void)$/;"	f
xen_setup_shutdown_event	manage.c	/^subsys_initcall(xen_setup_shutdown_event);$/;"	v
xen_steal_clock	time.c	/^u64 xen_steal_clock(int cpu)$/;"	f
xen_store_domain_type	xenbus/xenbus_probe.c	/^EXPORT_SYMBOL_GPL(xen_store_domain_type);$/;"	v
xen_store_domain_type	xenbus/xenbus_probe.c	/^enum xenstore_init xen_store_domain_type;$/;"	v	typeref:enum:xenstore_init
xen_store_evtchn	xenbus/xenbus_probe.c	/^EXPORT_SYMBOL_GPL(xen_store_evtchn);$/;"	v
xen_store_evtchn	xenbus/xenbus_probe.c	/^int xen_store_evtchn;$/;"	v
xen_store_gfn	xenbus/xenbus_probe.c	/^static unsigned long xen_store_gfn;$/;"	v	file:
xen_store_interface	xenbus/xenbus_probe.c	/^EXPORT_SYMBOL_GPL(xen_store_interface);$/;"	v
xen_store_interface	xenbus/xenbus_probe.c	/^struct xenstore_domain_interface *xen_store_interface;$/;"	v	typeref:struct:xenstore_domain_interface
xen_strict_xenbus_quirk	xenbus/xenbus_xs.c	/^static bool xen_strict_xenbus_quirk(void)$/;"	f	file:
xen_stub_memory_device_driver	xen-stub.c	/^static struct acpi_driver xen_stub_memory_device_driver = {$/;"	v	typeref:struct:acpi_driver	file:
xen_stub_memory_device_exit	xen-stub.c	/^EXPORT_SYMBOL_GPL(xen_stub_memory_device_exit);$/;"	v
xen_stub_memory_device_exit	xen-stub.c	/^void xen_stub_memory_device_exit(void)$/;"	f
xen_stub_memory_device_init	xen-stub.c	/^EXPORT_SYMBOL_GPL(xen_stub_memory_device_init);$/;"	v
xen_stub_memory_device_init	xen-stub.c	/^int xen_stub_memory_device_init(void)$/;"	f
xen_stub_memory_device_init	xen-stub.c	/^subsys_initcall(xen_stub_memory_device_init);$/;"	v
xen_stub_processor_driver	xen-stub.c	/^static struct acpi_driver xen_stub_processor_driver = {$/;"	v	typeref:struct:acpi_driver	file:
xen_stub_processor_exit	xen-stub.c	/^EXPORT_SYMBOL_GPL(xen_stub_processor_exit);$/;"	v
xen_stub_processor_exit	xen-stub.c	/^void xen_stub_processor_exit(void)$/;"	f
xen_stub_processor_init	xen-stub.c	/^EXPORT_SYMBOL_GPL(xen_stub_processor_init);$/;"	v
xen_stub_processor_init	xen-stub.c	/^int xen_stub_processor_init(void)$/;"	f
xen_stub_processor_init	xen-stub.c	/^subsys_initcall(xen_stub_processor_init);$/;"	v
xen_suspend	manage.c	/^static int xen_suspend(void *data)$/;"	f	file:
xen_swiotlb_alloc_coherent	swiotlb-xen.c	/^EXPORT_SYMBOL_GPL(xen_swiotlb_alloc_coherent);$/;"	v
xen_swiotlb_alloc_coherent	swiotlb-xen.c	/^xen_swiotlb_alloc_coherent(struct device *hwdev, size_t size,$/;"	f
xen_swiotlb_dma_supported	swiotlb-xen.c	/^EXPORT_SYMBOL_GPL(xen_swiotlb_dma_supported);$/;"	v
xen_swiotlb_dma_supported	swiotlb-xen.c	/^xen_swiotlb_dma_supported(struct device *hwdev, u64 mask)$/;"	f
xen_swiotlb_err	swiotlb-xen.c	/^enum xen_swiotlb_err {$/;"	g	file:
xen_swiotlb_error	swiotlb-xen.c	/^static const char *xen_swiotlb_error(enum xen_swiotlb_err err)$/;"	f	file:
xen_swiotlb_fixup	swiotlb-xen.c	/^xen_swiotlb_fixup(void *buf, size_t size, unsigned long nslabs)$/;"	f	file:
xen_swiotlb_free_coherent	swiotlb-xen.c	/^EXPORT_SYMBOL_GPL(xen_swiotlb_free_coherent);$/;"	v
xen_swiotlb_free_coherent	swiotlb-xen.c	/^xen_swiotlb_free_coherent(struct device *hwdev, size_t size, void *vaddr,$/;"	f
xen_swiotlb_init	swiotlb-xen.c	/^int __ref xen_swiotlb_init(int verbose, bool early)$/;"	f
xen_swiotlb_map_page	swiotlb-xen.c	/^EXPORT_SYMBOL_GPL(xen_swiotlb_map_page);$/;"	v
xen_swiotlb_map_page	swiotlb-xen.c	/^dma_addr_t xen_swiotlb_map_page(struct device *dev, struct page *page,$/;"	f
xen_swiotlb_map_sg_attrs	swiotlb-xen.c	/^EXPORT_SYMBOL_GPL(xen_swiotlb_map_sg_attrs);$/;"	v
xen_swiotlb_map_sg_attrs	swiotlb-xen.c	/^xen_swiotlb_map_sg_attrs(struct device *hwdev, struct scatterlist *sgl,$/;"	f
xen_swiotlb_set_dma_mask	swiotlb-xen.c	/^EXPORT_SYMBOL_GPL(xen_swiotlb_set_dma_mask);$/;"	v
xen_swiotlb_set_dma_mask	swiotlb-xen.c	/^xen_swiotlb_set_dma_mask(struct device *dev, u64 dma_mask)$/;"	f
xen_swiotlb_sync_sg	swiotlb-xen.c	/^xen_swiotlb_sync_sg(struct device *hwdev, struct scatterlist *sgl,$/;"	f	file:
xen_swiotlb_sync_sg_for_cpu	swiotlb-xen.c	/^EXPORT_SYMBOL_GPL(xen_swiotlb_sync_sg_for_cpu);$/;"	v
xen_swiotlb_sync_sg_for_cpu	swiotlb-xen.c	/^xen_swiotlb_sync_sg_for_cpu(struct device *hwdev, struct scatterlist *sg,$/;"	f
xen_swiotlb_sync_sg_for_device	swiotlb-xen.c	/^EXPORT_SYMBOL_GPL(xen_swiotlb_sync_sg_for_device);$/;"	v
xen_swiotlb_sync_sg_for_device	swiotlb-xen.c	/^xen_swiotlb_sync_sg_for_device(struct device *hwdev, struct scatterlist *sg,$/;"	f
xen_swiotlb_sync_single	swiotlb-xen.c	/^xen_swiotlb_sync_single(struct device *hwdev, dma_addr_t dev_addr,$/;"	f	file:
xen_swiotlb_sync_single_for_cpu	swiotlb-xen.c	/^EXPORT_SYMBOL_GPL(xen_swiotlb_sync_single_for_cpu);$/;"	v
xen_swiotlb_sync_single_for_cpu	swiotlb-xen.c	/^xen_swiotlb_sync_single_for_cpu(struct device *hwdev, dma_addr_t dev_addr,$/;"	f
xen_swiotlb_sync_single_for_device	swiotlb-xen.c	/^EXPORT_SYMBOL_GPL(xen_swiotlb_sync_single_for_device);$/;"	v
xen_swiotlb_sync_single_for_device	swiotlb-xen.c	/^xen_swiotlb_sync_single_for_device(struct device *hwdev, dma_addr_t dev_addr,$/;"	f
xen_swiotlb_unmap_page	swiotlb-xen.c	/^EXPORT_SYMBOL_GPL(xen_swiotlb_unmap_page);$/;"	v
xen_swiotlb_unmap_page	swiotlb-xen.c	/^void xen_swiotlb_unmap_page(struct device *hwdev, dma_addr_t dev_addr,$/;"	f
xen_swiotlb_unmap_sg_attrs	swiotlb-xen.c	/^EXPORT_SYMBOL_GPL(xen_swiotlb_unmap_sg_attrs);$/;"	v
xen_swiotlb_unmap_sg_attrs	swiotlb-xen.c	/^xen_swiotlb_unmap_sg_attrs(struct device *hwdev, struct scatterlist *sgl,$/;"	f
xen_sync_pcpus	pcpu.c	/^static int xen_sync_pcpus(void)$/;"	f	file:
xen_sysfs_compilation_init	sys-hypervisor.c	/^static int __init xen_sysfs_compilation_init(void)$/;"	f	file:
xen_sysfs_pmu_init	sys-hypervisor.c	/^static int __init xen_sysfs_pmu_init(void)$/;"	f	file:
xen_sysfs_properties_init	sys-hypervisor.c	/^static int __init xen_sysfs_properties_init(void)$/;"	f	file:
xen_sysfs_type_init	sys-hypervisor.c	/^static int __init xen_sysfs_type_init(void)$/;"	f	file:
xen_sysfs_uuid_init	sys-hypervisor.c	/^static int __init xen_sysfs_uuid_init(void)$/;"	f	file:
xen_sysfs_version_init	sys-hypervisor.c	/^static int __init xen_sysfs_version_init(void)$/;"	f	file:
xen_test_irq_pending	events/events_base.c	/^bool xen_test_irq_pending(int irq)$/;"	f
xen_test_irq_shared	events/events_base.c	/^EXPORT_SYMBOL_GPL(xen_test_irq_shared);$/;"	v
xen_test_irq_shared	events/events_base.c	/^int xen_test_irq_shared(int irq)$/;"	f
xen_time_setup_guest	time.c	/^void __init xen_time_setup_guest(void)$/;"	f
xen_tmem_destroy_pool	tmem.c	/^static int xen_tmem_destroy_pool(u32 pool_id)$/;"	f	file:
xen_tmem_flush_object	tmem.c	/^static int xen_tmem_flush_object(u32 pool_id, struct tmem_oid oid)$/;"	f	file:
xen_tmem_flush_page	tmem.c	/^static int xen_tmem_flush_page(u32 pool_id, struct tmem_oid oid, u32 index)$/;"	f	file:
xen_tmem_get_page	tmem.c	/^static int xen_tmem_get_page(u32 pool_id, struct tmem_oid oid,$/;"	f	file:
xen_tmem_init	tmem.c	/^static int __init xen_tmem_init(void)$/;"	f	file:
xen_tmem_new_pool	tmem.c	/^static int xen_tmem_new_pool(struct tmem_pool_uuid uuid,$/;"	f	file:
xen_tmem_op	tmem.c	/^static inline int xen_tmem_op(u32 tmem_cmd, u32 tmem_pool, struct tmem_oid oid,$/;"	f	file:
xen_tmem_put_page	tmem.c	/^static int xen_tmem_put_page(u32 pool_id, struct tmem_oid oid,$/;"	f	file:
xen_unmap_device_mmio	arm-device.c	/^static int xen_unmap_device_mmio(const struct resource *resources,$/;"	f	file:
xen_unmap_single	swiotlb-xen.c	/^static void xen_unmap_single(struct device *hwdev, dma_addr_t dev_addr,$/;"	f	file:
xen_upload_processor_pm_data	xen-acpi-processor.c	/^static int xen_upload_processor_pm_data(void)$/;"	f	file:
xen_vcpu_stolen	time.c	/^bool xen_vcpu_stolen(int vcpu)$/;"	f
xen_virt_to_bus	swiotlb-xen.c	/^static inline dma_addr_t xen_virt_to_bus(void *address)$/;"	f	file:
xen_xenbus_fops	xenbus/xenbus_dev_frontend.c	/^EXPORT_SYMBOL_GPL(xen_xenbus_fops);$/;"	v
xen_xenbus_fops	xenbus/xenbus_dev_frontend.c	/^const struct file_operations xen_xenbus_fops = {$/;"	v	typeref:struct:file_operations
xen_xlate_map_ballooned_pages	xlate_mmu.c	/^EXPORT_SYMBOL_GPL(xen_xlate_map_ballooned_pages);$/;"	v
xen_xlate_map_ballooned_pages	xlate_mmu.c	/^int __init xen_xlate_map_ballooned_pages(xen_pfn_t **gfns, void **virt,$/;"	f
xen_xlate_remap_gfn_array	xlate_mmu.c	/^EXPORT_SYMBOL_GPL(xen_xlate_remap_gfn_array);$/;"	v
xen_xlate_remap_gfn_array	xlate_mmu.c	/^int xen_xlate_remap_gfn_array(struct vm_area_struct *vma,$/;"	f
xen_xlate_unmap_gfn_range	xlate_mmu.c	/^EXPORT_SYMBOL_GPL(xen_xlate_unmap_gfn_range);$/;"	v
xen_xlate_unmap_gfn_range	xlate_mmu.c	/^int xen_xlate_unmap_gfn_range(struct vm_area_struct *vma,$/;"	f
xenbus-objs	xenbus/Makefile	/^xenbus-objs =$/;"	m
xenbus_alloc	xenbus/xenbus_dev_backend.c	/^static long xenbus_alloc(domid_t domid)$/;"	f	file:
xenbus_alloc_evtchn	xenbus/xenbus_client.c	/^EXPORT_SYMBOL_GPL(xenbus_alloc_evtchn);$/;"	v
xenbus_alloc_evtchn	xenbus/xenbus_client.c	/^int xenbus_alloc_evtchn(struct xenbus_device *dev, int *port)$/;"	f
xenbus_backend	xenbus/xenbus_probe_backend.c	/^static struct xen_bus_type xenbus_backend = {$/;"	v	typeref:struct:xen_bus_type	file:
xenbus_backend_dev	xenbus/xenbus_dev_backend.c	/^static struct miscdevice xenbus_backend_dev = {$/;"	v	typeref:struct:miscdevice	file:
xenbus_backend_fops	xenbus/xenbus_dev_backend.c	/^static const struct file_operations xenbus_backend_fops = {$/;"	v	typeref:struct:file_operations	file:
xenbus_backend_init	xenbus/xenbus_dev_backend.c	/^device_initcall(xenbus_backend_init);$/;"	v
xenbus_backend_init	xenbus/xenbus_dev_backend.c	/^static int __init xenbus_backend_init(void)$/;"	f	file:
xenbus_backend_ioctl	xenbus/xenbus_dev_backend.c	/^static long xenbus_backend_ioctl(struct file *file, unsigned int cmd,$/;"	f	file:
xenbus_backend_mmap	xenbus/xenbus_dev_backend.c	/^static int xenbus_backend_mmap(struct file *file, struct vm_area_struct *vma)$/;"	f	file:
xenbus_backend_open	xenbus/xenbus_dev_backend.c	/^static int xenbus_backend_open(struct inode *inode, struct file *filp)$/;"	f	file:
xenbus_check_frontend	xenbus/xenbus_probe_frontend.c	/^static void xenbus_check_frontend(char *class, char *dev)$/;"	f	file:
xenbus_cleanup_devices	xenbus/xenbus_probe.c	/^static void xenbus_cleanup_devices(const char *path, struct bus_type *bus)$/;"	f	file:
xenbus_command_reply	xenbus/xenbus_dev_frontend.c	/^static int xenbus_command_reply(struct xenbus_file_priv *u,$/;"	f	file:
xenbus_dev	xenbus/xenbus_dev_frontend.c	/^static struct miscdevice xenbus_dev = {$/;"	v	typeref:struct:miscdevice	file:
xenbus_dev_attrs	xenbus/xenbus_probe.c	/^static struct attribute *xenbus_dev_attrs[] = {$/;"	v	typeref:struct:attribute	file:
xenbus_dev_cancel	xenbus/xenbus_probe.c	/^EXPORT_SYMBOL_GPL(xenbus_dev_cancel);$/;"	v
xenbus_dev_cancel	xenbus/xenbus_probe.c	/^int xenbus_dev_cancel(struct device *dev)$/;"	f
xenbus_dev_changed	xenbus/xenbus_probe.c	/^EXPORT_SYMBOL_GPL(xenbus_dev_changed);$/;"	v
xenbus_dev_changed	xenbus/xenbus_probe.c	/^void xenbus_dev_changed(const char *node, struct xen_bus_type *bus)$/;"	f
xenbus_dev_error	xenbus/xenbus_client.c	/^EXPORT_SYMBOL_GPL(xenbus_dev_error);$/;"	v
xenbus_dev_error	xenbus/xenbus_client.c	/^void xenbus_dev_error(struct xenbus_device *dev, int err, const char *fmt, ...)$/;"	f
xenbus_dev_fatal	xenbus/xenbus_client.c	/^EXPORT_SYMBOL_GPL(xenbus_dev_fatal);$/;"	v
xenbus_dev_fatal	xenbus/xenbus_client.c	/^void xenbus_dev_fatal(struct xenbus_device *dev, int err, const char *fmt, ...)$/;"	f
xenbus_dev_group	xenbus/xenbus_probe.c	/^static const struct attribute_group xenbus_dev_group = {$/;"	v	typeref:struct:attribute_group	file:
xenbus_dev_groups	xenbus/xenbus_probe.c	/^EXPORT_SYMBOL_GPL(xenbus_dev_groups);$/;"	v
xenbus_dev_groups	xenbus/xenbus_probe.c	/^const struct attribute_group *xenbus_dev_groups[] = {$/;"	v	typeref:struct:attribute_group
xenbus_dev_is_online	xenbus/xenbus_probe_backend.c	/^EXPORT_SYMBOL_GPL(xenbus_dev_is_online);$/;"	v
xenbus_dev_is_online	xenbus/xenbus_probe_backend.c	/^int xenbus_dev_is_online(struct xenbus_device *dev)$/;"	f
xenbus_dev_probe	xenbus/xenbus_probe.c	/^EXPORT_SYMBOL_GPL(xenbus_dev_probe);$/;"	v
xenbus_dev_probe	xenbus/xenbus_probe.c	/^int xenbus_dev_probe(struct device *_dev)$/;"	f
xenbus_dev_release	xenbus/xenbus_probe.c	/^static void xenbus_dev_release(struct device *dev)$/;"	f	file:
xenbus_dev_remove	xenbus/xenbus_probe.c	/^EXPORT_SYMBOL_GPL(xenbus_dev_remove);$/;"	v
xenbus_dev_remove	xenbus/xenbus_probe.c	/^int xenbus_dev_remove(struct device *_dev)$/;"	f
xenbus_dev_request_and_reply	xenbus/xenbus_xs.c	/^EXPORT_SYMBOL(xenbus_dev_request_and_reply);$/;"	v
xenbus_dev_request_and_reply	xenbus/xenbus_xs.c	/^void *xenbus_dev_request_and_reply(struct xsd_sockmsg *msg)$/;"	f
xenbus_dev_resume	xenbus/xenbus_probe.c	/^EXPORT_SYMBOL_GPL(xenbus_dev_resume);$/;"	v
xenbus_dev_resume	xenbus/xenbus_probe.c	/^int xenbus_dev_resume(struct device *dev)$/;"	f
xenbus_dev_shutdown	xenbus/xenbus_probe.c	/^EXPORT_SYMBOL_GPL(xenbus_dev_shutdown);$/;"	v
xenbus_dev_shutdown	xenbus/xenbus_probe.c	/^void xenbus_dev_shutdown(struct device *_dev)$/;"	f
xenbus_dev_suspend	xenbus/xenbus_probe.c	/^EXPORT_SYMBOL_GPL(xenbus_dev_suspend);$/;"	v
xenbus_dev_suspend	xenbus/xenbus_probe.c	/^int xenbus_dev_suspend(struct device *dev)$/;"	f
xenbus_device_find	xenbus/xenbus_probe.c	/^static struct xenbus_device *xenbus_device_find(const char *nodename,$/;"	f	file:
xenbus_directory	xenbus/xenbus_xs.c	/^EXPORT_SYMBOL_GPL(xenbus_directory);$/;"	v
xenbus_directory	xenbus/xenbus_xs.c	/^char **xenbus_directory(struct xenbus_transaction t,$/;"	f
xenbus_exists	xenbus/xenbus_xs.c	/^EXPORT_SYMBOL_GPL(xenbus_exists);$/;"	v
xenbus_exists	xenbus/xenbus_xs.c	/^int xenbus_exists(struct xenbus_transaction t,$/;"	f
xenbus_file_open	xenbus/xenbus_dev_frontend.c	/^static int xenbus_file_open(struct inode *inode, struct file *filp)$/;"	f	file:
xenbus_file_poll	xenbus/xenbus_dev_frontend.c	/^static unsigned int xenbus_file_poll(struct file *file, poll_table *wait)$/;"	f	file:
xenbus_file_priv	xenbus/xenbus_dev_frontend.c	/^struct xenbus_file_priv {$/;"	s	file:
xenbus_file_read	xenbus/xenbus_dev_frontend.c	/^static ssize_t xenbus_file_read(struct file *filp,$/;"	f	file:
xenbus_file_release	xenbus/xenbus_dev_frontend.c	/^static int xenbus_file_release(struct inode *inode, struct file *filp)$/;"	f	file:
xenbus_file_write	xenbus/xenbus_dev_frontend.c	/^static ssize_t xenbus_file_write(struct file *filp,$/;"	f	file:
xenbus_free_evtchn	xenbus/xenbus_client.c	/^EXPORT_SYMBOL_GPL(xenbus_free_evtchn);$/;"	v
xenbus_free_evtchn	xenbus/xenbus_client.c	/^int xenbus_free_evtchn(struct xenbus_device *dev, int port)$/;"	f
xenbus_frontend	xenbus/xenbus_probe_frontend.c	/^static struct xen_bus_type xenbus_frontend = {$/;"	v	typeref:struct:xen_bus_type	file:
xenbus_frontend_closed	xenbus/xenbus_client.c	/^EXPORT_SYMBOL_GPL(xenbus_frontend_closed);$/;"	v
xenbus_frontend_closed	xenbus/xenbus_client.c	/^int xenbus_frontend_closed(struct xenbus_device *dev)$/;"	f
xenbus_frontend_delayed_resume	xenbus/xenbus_probe_frontend.c	/^static void xenbus_frontend_delayed_resume(struct work_struct *w)$/;"	f	file:
xenbus_frontend_dev_probe	xenbus/xenbus_probe_frontend.c	/^static int xenbus_frontend_dev_probe(struct device *dev)$/;"	f	file:
xenbus_frontend_dev_resume	xenbus/xenbus_probe_frontend.c	/^static int xenbus_frontend_dev_resume(struct device *dev)$/;"	f	file:
xenbus_gather	xenbus/xenbus_xs.c	/^EXPORT_SYMBOL_GPL(xenbus_gather);$/;"	v
xenbus_gather	xenbus/xenbus_xs.c	/^int xenbus_gather(struct xenbus_transaction t, const char *dir, ...)$/;"	f
xenbus_grant_ring	xenbus/xenbus_client.c	/^EXPORT_SYMBOL_GPL(xenbus_grant_ring);$/;"	v
xenbus_grant_ring	xenbus/xenbus_client.c	/^int xenbus_grant_ring(struct xenbus_device *dev, void *vaddr,$/;"	f
xenbus_init	xenbus/xenbus_dev_frontend.c	/^device_initcall(xenbus_init);$/;"	v
xenbus_init	xenbus/xenbus_dev_frontend.c	/^static int __init xenbus_init(void)$/;"	f	file:
xenbus_init	xenbus/xenbus_probe.c	/^postcore_initcall(xenbus_init);$/;"	v
xenbus_init	xenbus/xenbus_probe.c	/^static int __init xenbus_init(void)$/;"	f	file:
xenbus_irq	xenbus/xenbus_comms.c	/^static int xenbus_irq;$/;"	v	file:
xenbus_map_node	xenbus/xenbus_client.c	/^struct xenbus_map_node {$/;"	s	file:
xenbus_map_ring	xenbus/xenbus_client.c	/^EXPORT_SYMBOL_GPL(xenbus_map_ring);$/;"	v
xenbus_map_ring	xenbus/xenbus_client.c	/^int xenbus_map_ring(struct xenbus_device *dev, grant_ref_t *gnt_refs,$/;"	f
xenbus_map_ring_setup_grant_hvm	xenbus/xenbus_client.c	/^static void xenbus_map_ring_setup_grant_hvm(unsigned long gfn,$/;"	f	file:
xenbus_map_ring_valloc	xenbus/xenbus_client.c	/^EXPORT_SYMBOL_GPL(xenbus_map_ring_valloc);$/;"	v
xenbus_map_ring_valloc	xenbus/xenbus_client.c	/^int xenbus_map_ring_valloc(struct xenbus_device *dev, grant_ref_t *gnt_refs,$/;"	f
xenbus_map_ring_valloc_hvm	xenbus/xenbus_client.c	/^static int xenbus_map_ring_valloc_hvm(struct xenbus_device *dev,$/;"	f	file:
xenbus_map_ring_valloc_pv	xenbus/xenbus_client.c	/^static int xenbus_map_ring_valloc_pv(struct xenbus_device *dev,$/;"	f	file:
xenbus_match	xenbus/xenbus_probe.c	/^EXPORT_SYMBOL_GPL(xenbus_match);$/;"	v
xenbus_match	xenbus/xenbus_probe.c	/^int xenbus_match(struct device *_dev, struct device_driver *_drv)$/;"	f
xenbus_mkdir	xenbus/xenbus_xs.c	/^EXPORT_SYMBOL_GPL(xenbus_mkdir);$/;"	v
xenbus_mkdir	xenbus/xenbus_xs.c	/^int xenbus_mkdir(struct xenbus_transaction t,$/;"	f
xenbus_ok	xenbus/xenbus_xs.c	/^static bool xenbus_ok(void)$/;"	f	file:
xenbus_otherend_changed	xenbus/xenbus_probe.c	/^EXPORT_SYMBOL_GPL(xenbus_otherend_changed);$/;"	v
xenbus_otherend_changed	xenbus/xenbus_probe.c	/^void xenbus_otherend_changed(struct xenbus_watch *watch,$/;"	f
xenbus_pm_ops	xenbus/xenbus_probe_frontend.c	/^static const struct dev_pm_ops xenbus_pm_ops = {$/;"	v	typeref:struct:dev_pm_ops	file:
xenbus_printf	xenbus/xenbus_xs.c	/^EXPORT_SYMBOL_GPL(xenbus_printf);$/;"	v
xenbus_printf	xenbus/xenbus_xs.c	/^int xenbus_printf(struct xenbus_transaction t,$/;"	f
xenbus_probe	xenbus/xenbus_probe.c	/^EXPORT_SYMBOL_GPL(xenbus_probe);$/;"	v
xenbus_probe	xenbus/xenbus_probe.c	/^void xenbus_probe(struct work_struct *unused)$/;"	f
xenbus_probe_backend	xenbus/xenbus_probe_backend.c	/^static int xenbus_probe_backend(struct xen_bus_type *bus, const char *type,$/;"	f	file:
xenbus_probe_backend_init	xenbus/xenbus_probe_backend.c	/^static int __init xenbus_probe_backend_init(void)$/;"	f	file:
xenbus_probe_backend_init	xenbus/xenbus_probe_backend.c	/^subsys_initcall(xenbus_probe_backend_init);$/;"	v
xenbus_probe_backend_unit	xenbus/xenbus_probe_backend.c	/^static int xenbus_probe_backend_unit(struct xen_bus_type *bus,$/;"	f	file:
xenbus_probe_device_type	xenbus/xenbus_probe.c	/^static int xenbus_probe_device_type(struct xen_bus_type *bus, const char *type)$/;"	f	file:
xenbus_probe_devices	xenbus/xenbus_probe.c	/^EXPORT_SYMBOL_GPL(xenbus_probe_devices);$/;"	v
xenbus_probe_devices	xenbus/xenbus_probe.c	/^int xenbus_probe_devices(struct xen_bus_type *bus)$/;"	f
xenbus_probe_frontend	xenbus/xenbus_probe_frontend.c	/^static int xenbus_probe_frontend(struct xen_bus_type *bus, const char *type,$/;"	f	file:
xenbus_probe_frontend_init	xenbus/xenbus_probe_frontend.c	/^static int __init xenbus_probe_frontend_init(void)$/;"	f	file:
xenbus_probe_frontend_init	xenbus/xenbus_probe_frontend.c	/^subsys_initcall(xenbus_probe_frontend_init);$/;"	v
xenbus_probe_initcall	xenbus/xenbus_probe.c	/^device_initcall(xenbus_probe_initcall);$/;"	v
xenbus_probe_initcall	xenbus/xenbus_probe.c	/^static int __init xenbus_probe_initcall(void)$/;"	f	file:
xenbus_probe_node	xenbus/xenbus_probe.c	/^EXPORT_SYMBOL_GPL(xenbus_probe_node);$/;"	v
xenbus_probe_node	xenbus/xenbus_probe.c	/^int xenbus_probe_node(struct xen_bus_type *bus,$/;"	f
xenbus_read	xenbus/xenbus_xs.c	/^EXPORT_SYMBOL_GPL(xenbus_read);$/;"	v
xenbus_read	xenbus/xenbus_xs.c	/^void *xenbus_read(struct xenbus_transaction t,$/;"	f
xenbus_read_driver_state	xenbus/xenbus_client.c	/^EXPORT_SYMBOL_GPL(xenbus_read_driver_state);$/;"	v
xenbus_read_driver_state	xenbus/xenbus_client.c	/^enum xenbus_state xenbus_read_driver_state(const char *path)$/;"	f
xenbus_read_otherend_details	xenbus/xenbus_probe.c	/^EXPORT_SYMBOL_GPL(xenbus_read_otherend_details);$/;"	v
xenbus_read_otherend_details	xenbus/xenbus_probe.c	/^int xenbus_read_otherend_details(struct xenbus_device *xendev,$/;"	f
xenbus_read_unsigned	xenbus/xenbus_xs.c	/^EXPORT_SYMBOL_GPL(xenbus_read_unsigned);$/;"	v
xenbus_read_unsigned	xenbus/xenbus_xs.c	/^unsigned int xenbus_read_unsigned(const char *dir, const char *node,$/;"	f
xenbus_register_driver_common	xenbus/xenbus_probe.c	/^EXPORT_SYMBOL_GPL(xenbus_register_driver_common);$/;"	v
xenbus_register_driver_common	xenbus/xenbus_probe.c	/^int xenbus_register_driver_common(struct xenbus_driver *drv,$/;"	f
xenbus_reset_backend_state_changed	xenbus/xenbus_probe_frontend.c	/^static void xenbus_reset_backend_state_changed(struct xenbus_watch *w,$/;"	f	file:
xenbus_reset_frontend	xenbus/xenbus_probe_frontend.c	/^static void xenbus_reset_frontend(char *fe, char *be, int be_state)$/;"	f	file:
xenbus_reset_state	xenbus/xenbus_probe_frontend.c	/^static void xenbus_reset_state(void)$/;"	f	file:
xenbus_reset_wait_for_backend	xenbus/xenbus_probe_frontend.c	/^static void xenbus_reset_wait_for_backend(char *be, int expected)$/;"	f	file:
xenbus_resume_cb	xenbus/xenbus_probe.c	/^static int xenbus_resume_cb(struct notifier_block *nb,$/;"	f	file:
xenbus_resume_nb	xenbus/xenbus_probe.c	/^static struct notifier_block xenbus_resume_nb = {$/;"	v	typeref:struct:notifier_block	file:
xenbus_ring_ops	xenbus/xenbus_client.c	/^struct xenbus_ring_ops {$/;"	s	file:
xenbus_ring_ops_init	xenbus/xenbus_client.c	/^void __init xenbus_ring_ops_init(void)$/;"	f
xenbus_rm	xenbus/xenbus_xs.c	/^EXPORT_SYMBOL_GPL(xenbus_rm);$/;"	v
xenbus_rm	xenbus/xenbus_xs.c	/^int xenbus_rm(struct xenbus_transaction t, const char *dir, const char *node)$/;"	f
xenbus_scanf	xenbus/xenbus_xs.c	/^EXPORT_SYMBOL_GPL(xenbus_scanf);$/;"	v
xenbus_scanf	xenbus/xenbus_xs.c	/^int xenbus_scanf(struct xenbus_transaction t,$/;"	f
xenbus_strstate	xenbus/xenbus_client.c	/^EXPORT_SYMBOL_GPL(xenbus_strstate);$/;"	v
xenbus_strstate	xenbus/xenbus_client.c	/^const char *xenbus_strstate(enum xenbus_state state)$/;"	f
xenbus_switch_fatal	xenbus/xenbus_client.c	/^static void xenbus_switch_fatal(struct xenbus_device *dev, int depth, int err,$/;"	f	file:
xenbus_switch_state	xenbus/xenbus_client.c	/^EXPORT_SYMBOL_GPL(xenbus_switch_state);$/;"	v
xenbus_switch_state	xenbus/xenbus_client.c	/^int xenbus_switch_state(struct xenbus_device *dev, enum xenbus_state state)$/;"	f
xenbus_thread	xenbus/xenbus_xs.c	/^static int xenbus_thread(void *unused)$/;"	f	file:
xenbus_transaction_end	xenbus/xenbus_xs.c	/^EXPORT_SYMBOL_GPL(xenbus_transaction_end);$/;"	v
xenbus_transaction_end	xenbus/xenbus_xs.c	/^int xenbus_transaction_end(struct xenbus_transaction t, int abort)$/;"	f
xenbus_transaction_holder	xenbus/xenbus_dev_frontend.c	/^struct xenbus_transaction_holder {$/;"	s	file:
xenbus_transaction_start	xenbus/xenbus_xs.c	/^EXPORT_SYMBOL_GPL(xenbus_transaction_start);$/;"	v
xenbus_transaction_start	xenbus/xenbus_xs.c	/^int xenbus_transaction_start(struct xenbus_transaction *t)$/;"	f
xenbus_uevent_backend	xenbus/xenbus_probe_backend.c	/^static int xenbus_uevent_backend(struct device *dev,$/;"	f	file:
xenbus_uevent_frontend	xenbus/xenbus_probe_frontend.c	/^static int xenbus_uevent_frontend(struct device *_dev,$/;"	f	file:
xenbus_unmap_ring	xenbus/xenbus_client.c	/^EXPORT_SYMBOL_GPL(xenbus_unmap_ring);$/;"	v
xenbus_unmap_ring	xenbus/xenbus_client.c	/^int xenbus_unmap_ring(struct xenbus_device *dev,$/;"	f
xenbus_unmap_ring_setup_grant_hvm	xenbus/xenbus_client.c	/^static void xenbus_unmap_ring_setup_grant_hvm(unsigned long gfn,$/;"	f	file:
xenbus_unmap_ring_vfree	xenbus/xenbus_client.c	/^EXPORT_SYMBOL_GPL(xenbus_unmap_ring_vfree);$/;"	v
xenbus_unmap_ring_vfree	xenbus/xenbus_client.c	/^int xenbus_unmap_ring_vfree(struct xenbus_device *dev, void *vaddr)$/;"	f
xenbus_unmap_ring_vfree_hvm	xenbus/xenbus_client.c	/^static int xenbus_unmap_ring_vfree_hvm(struct xenbus_device *dev, void *vaddr)$/;"	f	file:
xenbus_unmap_ring_vfree_pv	xenbus/xenbus_client.c	/^static int xenbus_unmap_ring_vfree_pv(struct xenbus_device *dev, void *vaddr)$/;"	f	file:
xenbus_unregister_driver	xenbus/xenbus_probe.c	/^EXPORT_SYMBOL_GPL(xenbus_unregister_driver);$/;"	v
xenbus_unregister_driver	xenbus/xenbus_probe.c	/^void xenbus_unregister_driver(struct xenbus_driver *drv)$/;"	f
xenbus_va_dev_error	xenbus/xenbus_client.c	/^static void xenbus_va_dev_error(struct xenbus_device *dev, int err,$/;"	f	file:
xenbus_watch_path	xenbus/xenbus_client.c	/^EXPORT_SYMBOL_GPL(xenbus_watch_path);$/;"	v
xenbus_watch_path	xenbus/xenbus_client.c	/^int xenbus_watch_path(struct xenbus_device *dev, const char *path,$/;"	f
xenbus_watch_pathfmt	xenbus/xenbus_client.c	/^EXPORT_SYMBOL_GPL(xenbus_watch_pathfmt);$/;"	v
xenbus_watch_pathfmt	xenbus/xenbus_client.c	/^int xenbus_watch_pathfmt(struct xenbus_device *dev,$/;"	f
xenbus_write	xenbus/xenbus_xs.c	/^EXPORT_SYMBOL_GPL(xenbus_write);$/;"	v
xenbus_write	xenbus/xenbus_xs.c	/^int xenbus_write(struct xenbus_transaction t,$/;"	f
xenbus_write_transaction	xenbus/xenbus_dev_frontend.c	/^static int xenbus_write_transaction(unsigned msg_type,$/;"	f	file:
xenbus_write_watch	xenbus/xenbus_dev_frontend.c	/^static int xenbus_write_watch(unsigned msg_type, struct xenbus_file_priv *u)$/;"	f	file:
xenfs-y	xenfs/Makefile	/^xenfs-y			  = super.o$/;"	m
xenfs_exit	xenfs/super.c	/^module_exit(xenfs_exit);$/;"	v
xenfs_exit	xenfs/super.c	/^static void __exit xenfs_exit(void)$/;"	f	file:
xenfs_fill_super	xenfs/super.c	/^static int xenfs_fill_super(struct super_block *sb, void *data, int silent)$/;"	f	file:
xenfs_init	xenfs/super.c	/^module_init(xenfs_init);$/;"	v
xenfs_init	xenfs/super.c	/^static int __init xenfs_init(void)$/;"	f	file:
xenfs_mount	xenfs/super.c	/^static struct dentry *xenfs_mount(struct file_system_type *fs_type,$/;"	f	file:
xenfs_type	xenfs/super.c	/^static struct file_system_type xenfs_type = {$/;"	v	typeref:struct:file_system_type	file:
xenstore_init	xenbus/xenbus_probe.h	/^enum xenstore_init {$/;"	g
xenstore_notifier	xen-balloon.c	/^static struct notifier_block xenstore_notifier = {$/;"	v	typeref:struct:notifier_block	file:
xenstored_local_init	xenbus/xenbus_probe.c	/^static int __init xenstored_local_init(void)$/;"	f	file:
xenstored_ready	xenbus/xenbus_probe.c	/^int xenstored_ready;$/;"	v
xensyms	xenfs/xensyms.c	/^struct xensyms {$/;"	s	file:
xensyms_next	xenfs/xensyms.c	/^static void *xensyms_next(struct seq_file *m, void *p, loff_t *pos)$/;"	f	file:
xensyms_next_sym	xenfs/xensyms.c	/^static int xensyms_next_sym(struct xensyms *xs)$/;"	f	file:
xensyms_open	xenfs/xensyms.c	/^static int xensyms_open(struct inode *inode, struct file *file)$/;"	f	file:
xensyms_ops	xenfs/xensyms.c	/^const struct file_operations xensyms_ops = {$/;"	v	typeref:struct:file_operations
xensyms_release	xenfs/xensyms.c	/^static int xensyms_release(struct inode *inode, struct file *file)$/;"	f	file:
xensyms_seq_ops	xenfs/xensyms.c	/^static const struct seq_operations xensyms_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
xensyms_show	xenfs/xensyms.c	/^static int xensyms_show(struct seq_file *m, void *p)$/;"	f	file:
xensyms_start	xenfs/xensyms.c	/^static void *xensyms_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
xensyms_stop	xenfs/xensyms.c	/^static void xensyms_stop(struct seq_file *m, void *p)$/;"	f	file:
xenwatch_pid	xenbus/xenbus_xs.c	/^static pid_t xenwatch_pid;$/;"	v	file:
xenwatch_thread	xenbus/xenbus_xs.c	/^static int xenwatch_thread(void *unused)$/;"	f	file:
xs_error	xenbus/xenbus_xs.c	/^static int xs_error(char *reply)$/;"	f	file:
xs_handle	xenbus/xenbus_xs.c	/^struct xs_handle {$/;"	s	file:
xs_init	xenbus/xenbus_xs.c	/^int xs_init(void)$/;"	f
xs_reset_watches	xenbus/xenbus_xs.c	/^static void xs_reset_watches(void)$/;"	f	file:
xs_resume	xenbus/xenbus_xs.c	/^void xs_resume(void)$/;"	f
xs_single	xenbus/xenbus_xs.c	/^static void *xs_single(struct xenbus_transaction t,$/;"	f	file:
xs_state	xenbus/xenbus_xs.c	/^static struct xs_handle xs_state;$/;"	v	typeref:struct:xs_handle	file:
xs_stored_msg	xenbus/xenbus_xs.c	/^struct xs_stored_msg {$/;"	s	file:
xs_suspend	xenbus/xenbus_xs.c	/^void xs_suspend(void)$/;"	f
xs_suspend_cancel	xenbus/xenbus_xs.c	/^void xs_suspend_cancel(void)$/;"	f
xs_talkv	xenbus/xenbus_xs.c	/^static void *xs_talkv(struct xenbus_transaction t,$/;"	f	file:
xs_unwatch	xenbus/xenbus_xs.c	/^static int xs_unwatch(const char *path, const char *token)$/;"	f	file:
xs_watch	xenbus/xenbus_xs.c	/^static int xs_watch(const char *path, const char *token)$/;"	f	file:
xsd_kva_file_ops	xenfs/xenstored.c	/^const struct file_operations xsd_kva_file_ops = {$/;"	v	typeref:struct:file_operations
xsd_kva_mmap	xenfs/xenstored.c	/^static int xsd_kva_mmap(struct file *file, struct vm_area_struct *vma)$/;"	f	file:
xsd_kva_open	xenfs/xenstored.c	/^static int xsd_kva_open(struct inode *inode, struct file *file)$/;"	f	file:
xsd_port_file_ops	xenfs/xenstored.c	/^const struct file_operations xsd_port_file_ops = {$/;"	v	typeref:struct:file_operations
xsd_port_open	xenfs/xenstored.c	/^static int xsd_port_open(struct inode *inode, struct file *file)$/;"	f	file:
xsd_read	xenfs/xenstored.c	/^static ssize_t xsd_read(struct file *file, char __user *buf,$/;"	f	file:
xsd_release	xenfs/xenstored.c	/^static int xsd_release(struct inode *inode, struct file *file)$/;"	f	file:
zero	balloon.c	/^static int zero;$/;"	v	file:
